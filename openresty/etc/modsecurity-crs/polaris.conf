# CVE: CVE-2015-7450
# CVSS: 10
# Publish: 2016-01-02T21:59:00
# Serialized-object interfaces in certain IBM analytics, business solutions, cognitive, IT infrastructure, and mobile and social products allow remote attackers to execute arbitrary commands via a crafted serialized Java object, related to the InvokerTransformer class in the Apache Commons Collections library.
SecRule REQUEST_HEADERS:Content-Type "@within text/xml application/xml" "id:66600000,chain,msg:'POL-2015-7450',phase:1,pass,nolog,t:none,t:trim,t:lowercase,tag:'Websphere'"
SecRule REQUEST_METHOD "^POST$" \
	"t:none,t:trim,ctl:requestBodyProcessor=XML"

SecRule REQUEST_HEADERS:Content-Type "@within text/xml application/xml" "id:66600001,chain,phase:2,deny,status:403,log,t:none,t:lowercase,tag:'Websphere',msg:'POL-2015-7450',rev:1,severity:2"
SecRule REQUEST_METHOD "^POST$" "chain,t:none,t:trim"
SecRule XML:/SOAP-ENV:Envelope/SOAP-ENV:Body/objectname/text() "@contains  org.apache.commons.collections.functors.InvokerTransformer" \
	"t:none,t:trim,t:base64Decode"

# CVE: CVE-2014-0910
# CVSS: 3.5
# Publish: 2014-06-18T16:55:00
# Cross-site scripting (XSS) vulnerability in IBM WebSphere Portal 6.1.0.0 through 6.1.0.6 CF27, 6.1.5.0 through 6.1.5.3 CF27, and 7.0.0 through 7.0.0.2 CF28 allows remote authenticated users to inject arbitrary web script or HTML via unspecified vectors.
SecRule REQUEST_FILENAME "@contains /portal/!ut/p/b1/" \
        "id:66600002,\
        msg:'POL-2014-0910',\
        phase:2,\
        deny,\
        status:403,\
        log,\
        chain,\
        t:normalizePathWin,\
        t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'Websphere'"

SecRule ARGS "@rx (<.*on\S+)(\s*)=|javascript[^a-zA-Z0-9]*\:|(<\s*)(\/*)(script|noscript)" \
        "t:none,t:trim,t:lowercase"

# CVE: CVE-2015-4852
# CVSS: 7.5
# Publish: 2015-11-18T15:59:00
# The WLS Security component in Oracle WebLogic Server 10.3.6.0, 12.1.2.0, 12.1.3.0, and 12.2.1.0 allows remote attackers to execute arbitrary commands via a crafted serialized Java object in T3 protocol traffic to TCP port 7001, related to oracle_common/modules/com.bea.core.apache.commons.collections.jar. NOTE: the scope of this CVE is limited to the WebLogic Server product.
SecRule REQUEST_HEADERS:Content-Type "@within text/xml application/xml" "id:66600003,chain,msg:'POL-2015-4852',phase:1,pass,nolog,t:none,t:trim,t:lowercase,tag:'Websphere'"
SecRule REQUEST_METHOD "^POST$" \
	"t:none,t:trim,ctl:requestBodyProcessor=XML"

SecRule REQUEST_HEADERS:Content-Type "@within text/xml application/xml" "id:66600004,chain,phase:2,deny,status:403,log,t:none,t:lowercase,tag:'Websphere',msg:'POL-2015-4852',rev:1,severity:2"
SecRule REQUEST_METHOD "^POST$" "chain,t:none,t:trim"
SecRule XML:/SOAP-ENV:Envelope/SOAP-ENV:Body/params/text() "@contains  org.apache.commons.collections.functors.InvokerTransformer" \
	"t:none,t:trim,t:base64Decode"

# CVE: CVE-2017-5638
# CVSS: 10
# Publish: 2017-03-11T02:59:00
# The Jakarta Multipart parser in Apache Struts 2 2.3.x before 2.3.32 and 2.5.x before 2.5.10.1 has incorrect exception handling and error-message generation during file-upload attempts, which allows remote attackers to execute arbitrary commands via a crafted Content-Type, Content-Disposition, or Content-Length HTTP header, as exploited in the wild in March 2017 with a Content-Type header containing a #cmd= string.
SecRule REQUEST_HEADERS:Content-Type "@gt 500" \
	"id:66600005,chain,msg:'POL-2017-5638',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:removeWhitespace,t:length,rev:2,severity:2,tag:'Struts'"
SecRule REQUEST_HEADERS:Content-Type "!@rx ^(?:\w+\/[\w\-\.]+)(?:;(?:charset=[\w\-]{1,18}|boundary=[\w\-]+)?)?$" \
	"t:none,t:urlDecodeUni,t:removeWhitespace"

# CVE: CVE-2014-0113
# CVSS: 7.5
# Publish: 2014-04-29T10:37:00
# CookieInterceptor in Apache Struts before 2.3.20, when a wildcard cookiesName value is used, does not properly restrict access to the getClass method, which allows remote attackers to "manipulate" the ClassLoader and execute arbitrary code via a crafted request. NOTE: this vulnerability exists because of an incomplete fix for CVE-2014-0094.
SecRule REQUEST_COOKIES_NAMES "@rx (?i:(class))" \
	"id:66600006,chain,msg:'POL-2014-0113',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Struts'"
SecRule REQUEST_COOKIES_NAMES "@rx (?i:(class\(\.|\('|\"\)\]|\\[\)))" \
	"t:none"

# CVE: CVE-2014-0094
# CVSS: 5
# Publish: 2014-03-11T13:00:00
# The ParametersInterceptor in Apache Struts before 2.3.16.2 allows remote attackers to "manipulate" the ClassLoader via the class parameter, which is passed to the getClass method.
SecRule ARGS_NAMES "@rx (?i:(class))" \
	"id:66600007,chain,msg:'POL-2014-0094',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'Struts'"
SecRule ARGS_NAMES "@rx (?i:(class\(\.|\('|\"\)\]|\\[\)))" \
	"t:none,t:urlDecodeUni"

# CVE: CVE-2013-2251
# CVSS: 9.3
# Publish: 2013-07-20T03:37:00
# Apache Struts 2.0.0 through 2.3.15 allows remote attackers to execute arbitrary OGNL expressions via a parameter with a crafted (1) action:, (2) redirect:, or (3) redirectAction: prefix.
SecRule ARGS_NAMES "@rx ^(redirectaction:|action:|redirect:).*(\(|\\\\|(\$\{)|(\%\{))" \
	"id:66600008,msg:'POL-2013-2251',phase:2,deny,status:403,log,t:none,t:trim,t:urlDecodeUni,t:lowercase,rev:4,severity:2,tag:'Struts'"

# CVE: CVE-2017-12611
# CVSS: 7.5
# Publish: 2017-09-20T17:29:00
# In Apache Struts 2.0.0 through 2.3.33 and 2.5 through 2.5.10.1, using an unintentional expression in a Freemarker tag instead of string literals can lead to a RCE attack.
# require SecStreamInBodyInspection On
SecRule ARGS_NAMES|ARGS "@rx (ognlUtil\.getExcludedPackageNames\(\)|ognlUtil\.getExcludedClasses\(\))" \
	"id:66600009,msg:'POL-2017-12611',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'Struts'"

# CVE: CVE-2017-9805
# CVSS: 6.8
# Publish: 2017-09-15T19:29:00
# The REST Plugin in Apache Struts 2.1.1 through 2.3.x before 2.3.34 and 2.5.x before 2.5.13 uses an XStreamHandler with an instance of XStream for deserialization without any type filtering, which can lead to Remote Code Execution when deserializing XML payloads.
SecRule REQUEST_HEADERS:Content-Type "(application|text)/xml" "id:'5001653',phase:1,t:none,t:lowercase,pass,nolog,ctl:requestBodyProcessor=URLENCODED"

SecRule REQUEST_HEADERS:Content-Type "@rx (application|text)/xml" \
	"id:66600010,chain,msg:'POL-2017-9805',phase:2,deny,status:403,log,t:none,t:lowercase,rev:6,severity:2,tag:'Struts'"
SecRule REQUEST_BODY "@contains java.lang.ProcessBuilder" \
	"chain,t:none"
SecRule REQUEST_BODY "@rx (jdk\.nashorn\.internal\.objects\.NativeString|java\.beans\.EventHandler|groovy\.util\.Expando)" \
	"t:none"

# CVE: CVE-2016-3081
# CVSS: 9.3
# Publish: 2016-04-26T14:59:00
# Apache Struts 2.3.19 to 2.3.20.2, 2.3.21 to 2.3.24.1, and 2.3.25 to 2.3.28, when Dynamic Method Invocation is enabled, allow remote attackers to execute arbitrary code via method: prefix, related to chained expressions.
SecRule ARGS_NAMES "@rx ^(method:|action:).*(\(|\\\\|(\$\{)|(\%\{))" \
	"id:66600011,msg:'POL-2016-3081',phase:2,deny,status:403,log,t:none,t:trim,t:urlDecodeUni,t:lowercase,rev:3,severity:2,tag:'Struts'"

# CVE: CVE-2016-3082
# CVSS: 10
# Publish: 2016-04-26T14:59:00
# XSLTResult in Apache Struts 2.x before 2.3.20.2, 2.3.24.x before 2.3.24.2, and 2.3.28.x before 2.3.28.1 allows remote attackers to execute arbitrary code via the stylesheet location parameter.
SecRule ARGS_NAMES "@streq xslt.location" \
	"id:66600012,msg:'POL-2016-3082',phase:2,deny,status:403,log,t:none,t:trim,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'Struts'"

# CVE: CVE-2016-3087
# CVSS: 7.5
# Publish: 2016-06-07T18:59:00
# Apache Struts 2.3.19 to 2.3.20.2, 2.3.21 to 2.3.24.1, and 2.3.25 to 2.3.28, when Dynamic Method Invocation is enabled, allow remote attackers to execute arbitrary code via vectors related to an ! (exclamation mark) operator to the REST Plugin.
SecRule REQUEST_BASENAME "@rx \!.*(\(|\\\\)" \
	"id:66600013,msg:'POL-2016-3087',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'Struts'"

# CVE: CVE-2011-3923
# CVSS: 7.5
# Publish: 2019-11-01T14:15:00
# Apache Struts before 2.3.1.2 allows remote attackers to bypass security protections in the ParameterInterceptor class and execute arbitrary commands.
SecRule ARGS_NAMES "@rx (\[\(|\(\[|\]\(|\)\])" \
	"id:66600014,chain,msg:'POL-2011-3923',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:3,severity:2,tag:'Struts'"
SecRule ARGS "@contains xwork.methodaccessor.denymethodexecution" \
	"t:none,t:urlDecodeuni,t:lowercase"

# CVE: CVE-2008-6504
# CVSS: 5
# Publish: 2009-03-23T14:19:00
# ParametersInterceptor in OpenSymphony XWork 2.0.x before 2.0.6 and 2.1.x before 2.1.2, as used in Apache Struts and other products, does not properly restrict # (pound sign) references to context objects, which allows remote attackers to execute Object-Graph Navigation Language (OGNL) statements and modify server-side context objects, as demonstrated by use of a \u0023 representation for the # character.
SecRule ARGS_NAMES:/\\\\u0023/ "@gt 50" \
	"id:66600015,msg:'POL-2008-6504',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:length,rev:2,severity:2,tag:'Struts'"

# CVE: CVE-2017-9791
# CVSS: 7.5
# Publish: 2017-07-10T16:29:00
# The Struts 1 plugin in Apache Struts 2.1.x and 2.3.x might allow remote code execution via a malicious field value passed in a raw message to the ActionMessage.
SecRule ARGS_POST "@contains #_memberAccess" \
	"id:66600016,chain,msg:'POL-2017-9791',phase:2,deny,status:403,log,t:none,t:trim,rev:1,severity:2,tag:'Struts'"
SecRule ARGS_POST "@contains @java." \
	"t:none,t:urlDecodeUni"

# CVE: CVE-2017-12611
# CVSS: 7.5
# Publish: 2017-09-20T17:29:00
# In Apache Struts 2.0.0 through 2.3.33 and 2.5 through 2.5.10.1, using an unintentional expression in a Freemarker tag instead of string literals can lead to a RCE attack.
SecRule ARGS "@contains #_memberAccess" \
	"id:66600017,msg:'POL-2017-12611',phase:2,chain,deny,status:403,log,t:none,t:trim,rev:1,severity:2,tag:'Struts'"
SecRule ARGS "@contains @java." \
	"t:none,t:urlDecodeUni"

# CVE: CVE-2012-1006
# CVSS: 4.3
# Publish: 2012-02-07T04:09:00
# Multiple cross-site scripting (XSS) vulnerabilities in Apache Struts 2.0.14 and 2.2.3 allow remote attackers to inject arbitrary web script or HTML via the (1) name or (2) lastName parameter to struts2-showcase/person/editPerson.action, or the (3) clientName parameter to struts2-rest-showcase/orders.
SecRule ARGS_POST:/^person/ "@rx [^a-zA-Z0-9-_ ]+" \
	"id:66600018,chain,msg:'POL-2012-1006',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'Struts2'"
SecRule REQUEST_FILENAME "@contains /person/editPerson.action" \
	"t:none,t:urlDecodeUni,t:normalizePathWin"

SecRule ARGS_POST:clientName "@rx [^a-zA-Z0-9_.]+" \
	"id:66600019,chain,msg:'POL-2012-1006',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'Struts2'"
SecRule REQUEST_FILENAME "@endsWith /orders" \
	"t:none,t:urlDecodeUni,t:normalizePathWin"

SecRule ARGS_POST:theText "@rx [^a-zA-Z0-9-_., ]+" \
"id:66600020,chain,msg:'POL-2012-1006',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'Struts2'"
SecRule REQUEST_FILENAME "@endsWith /upload/upload-submit.do" \
	"chain,t:none,t:urlDecodeUni,t:normalizePathWin"
SecRule ARGS_GET:queryParam "@eq Successful" \
	"t:none,t:urlDecodeUni"

SecRule ARGS_POST:message "@rx [^a-zA-Z0-9-_. ]+" \
	"id:66600021,chain,msg:'POL-2012-1006',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'Struts1'"
SecRule REQUEST_FILENAME "@endsWith /processSimple.do" \
	"t:none,t:urlDecodeUni,t:normalizePathWin"

SecRule ARGS_POST:message "@rx [^a-zA-Z0-9-_. ]+" \
"id:66600022,chain,msg:'POL-2012-1006',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'Struts1'"
SecRule REQUEST_FILENAME "@endsWith /processDyna.do" \
	"t:none,t:urlDecodeUni,t:normalizePathWin"

# CVE: CVE-2017-9805
# CVSS: 6.8
# Publish: 2017-09-15T19:29:00
# The REST Plugin in Apache Struts 2.1.1 through 2.3.x before 2.3.34 and 2.5.x before 2.5.13 uses an XStreamHandler with an instance of XStream for deserialization without any type filtering, which can lead to Remote Code Execution when deserializing XML payloads.
SecRule XML:/map/entry/jdk.nashorn.internal.objects.NativeString/flags/text() "@rx .+?" \
	"id:66600023,msg:'POL-2017-9805',phase:2,deny,status:403,log,ctl:requestBodyProcessor=XML,t:none,t:trim,rev:1,severity:2,tag:'Struts'"

# CVE: CVE-2016-3087
# CVSS: 7.5
# Publish: 2016-06-07T18:59:00
# Apache Struts 2.3.19 to 2.3.20.2, 2.3.21 to 2.3.24.1, and 2.3.25 to 2.3.28, when Dynamic Method Invocation is enabled, allow remote attackers to execute arbitrary code via vectors related to an ! (exclamation mark) operator to the REST Plugin.
SecRule REQUEST_URI "@contains #_memberAccess" \
	"id:66600024,msg:'POL-2016-3087',phase:2,deny,status:403,log,t:urlDecode,t:none,t:trim,rev:1,severity:2,tag:'Struts'"

# CVE: CVE-2017-5638
# CVSS: 10
# Publish: 2017-03-11T02:59:00
# The Jakarta Multipart parser in Apache Struts 2 2.3.x before 2.3.32 and 2.5.x before 2.5.10.1 has incorrect exception handling and error-message generation during file-upload attempts, which allows remote attackers to execute arbitrary commands via a crafted Content-Type, Content-Disposition, or Content-Length HTTP header, as exploited in the wild in March 2017 with a Content-Type header containing a #cmd= string.
SecRule REQUEST_HEADERS:Content-Type "@contains #_memberAccess" \
	"id:66600025,msg:'POL-2017-5638',phase:2,deny,status:403,log,t:none,t:trim,rev:1,severity:2,tag:'Struts'"

# CVE: CVE-2016-3081
# CVSS: 9.3
# Publish: 2016-04-26T14:59:00
# Apache Struts 2.3.19 to 2.3.20.2, 2.3.21 to 2.3.24.1, and 2.3.25 to 2.3.28, when Dynamic Method Invocation is enabled, allow remote attackers to execute arbitrary code via method: prefix, related to chained expressions.
SecRule ARGS_NAMES "@contains #_memberAccess" \
	"id:66600026,chain,msg:'POL-2016-3081',phase:2,deny,status:403,log,t:none,t:trim,rev:1,severity:2,tag:'Struts'"
SecRule ARGS_NAMES "@contains method:" \
	"t:none,t:lowercase,t:urlDecodeUni"

# CVE: CVE-2013-2251
# CVSS: 9.3
# Publish: 2013-07-20T03:37:00
# Apache Struts 2.0.0 through 2.3.15 allows remote attackers to execute arbitrary OGNL expressions via a parameter with a crafted (1) action:, (2) redirect:, or (3) redirectAction: prefix.
SecRule REQUEST_URI "@rx (redirect:|redirectAction:|action:)" \
	"id:66600027,chain,msg:'POL-2013-2251',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:trim,rev:1,severity:2,tag:'Struts'"
SecRule REQUEST_URI "@contains #_memberAccess" \
	"t:none,t:urlDecodeUni"

# CVE: CVE-2013-2248
# CVSS: 5.8
# Publish: 2013-07-20T03:37:00
# Multiple open redirect vulnerabilities in Apache Struts 2.0.0 through 2.3.15 allow remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via a URL in a parameter using the (1) redirect: or (2) redirectAction: prefix.
SecRule REQUEST_URI "@rx redirect.*?:http" \
	"id:66600028,msg:'POL-2013-2248',phase:2,deny,status:403,log,t:none,t:trim,rev:1,severity:2,tag:'Struts'"

# CVE: CVE-2012-0392
# CVSS: 9.3
# Publish: 2012-01-08T15:55:00
# The CookieInterceptor component in Apache Struts before 2.3.1.1 does not use the parameter-name whitelist, which allows remote attackers to execute arbitrary commands via a crafted HTTP Cookie header that triggers Java code execution through a static method.
SecRule REQUEST_COOKIES_NAMES "@rx (java.io|#_memberAccess)" \
	"id:66600029,msg:'POL-2012-0392',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Struts'"

# CVE: CVE-2012-03934
# CVSS: undefined
# Publish: 
# 
SecRule ARGS:debug "@rx command" \
	"id:66600030,msg:'POL-2012-03934',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Struts'"

# CVE: CVE-2012-0393
# CVSS: 6.4
# Publish: 2012-01-08T15:55:00
# The ParameterInterceptor component in Apache Struts before 2.3.1.1 does not prevent access to public constructors, which allows remote attackers to create or overwrite arbitrary files via a crafted parameter that triggers the creation of a Java object.
SecRule ARGS_NAMES "@rx (java.io.FileWriter)" \
	"id:66600031,msg:'POL-2012-0393',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Struts'"

# CVE: CVE-2014-0094
# CVSS: 5
# Publish: 2014-03-11T13:00:00
# The ParametersInterceptor in Apache Struts before 2.3.16.2 allows remote attackers to "manipulate" the ClassLoader via the class parameter, which is passed to the getClass method.
SecRule ARGS_GET_NAMES  "@rx (class\[\'classloader\'\]|class\.classloader)" \
	"id:66600032,msg:'POL-2014-0094',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'Struts'"

# CVE: CVE-2014-0114
# CVSS: 7.5
# Publish: 2014-04-30T10:49:00
# Apache Commons BeanUtils, as distributed in lib/commons-beanutils-1.8.0.jar in Apache Struts 1.x through 1.3.10 and in other products requiring commons-beanutils through 1.9.2, does not suppress the class property, which allows remote attackers to "manipulate" the ClassLoader and execute arbitrary code via the class parameter, as demonstrated by the passing of this parameter to the getClass method of the ActionForm object in Struts 1.
SecRule ARGS_GET_NAMES  "@rx (class\[\'classloader\'\]|class\.classloader)" \
	"id:66600033,msg:'POL-2014-0114',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'Struts'"

# CVE: CVE-2011-3923
# CVSS: 7.5
# Publish: 2019-11-01T14:15:00
# Apache Struts before 2.3.1.2 allows remote attackers to bypass security protections in the ParameterInterceptor class and execute arbitrary commands.
SecRule ARGS_NAMES "@rx (\[\(|\(\[|\]\(|\)\])" "id:66600034,chain,msg:'POL-2011-3923',phase:2,deny,status:403,log,rev:1,severity:2,t:none,t:urlDecodeUni,tag:'Struts'"
SecRule ARGS "@contains xwork.methodaccessor.denymethodexecution" "t:none,t:urlDecodeuni,t:lowercase"

# CVE: CVE-2012-0391
# CVSS: 9.3
# Publish: 2012-01-08T15:55:00
# The ExceptionDelegator component in Apache Struts before 2.2.3.1 interprets parameter values as OGNL expressions during certain exception handling for mismatched data types of properties, which allows remote attackers to execute arbitrary Java code via a crafted parameter.
SecRule REQUEST_URI "@rx (?i:(#_memberAccess|allowStaticMethodAccess|java\.lang\.Runtime))" "id:66600035,phase:1,deny,status:403,log,tag:'Struts',t:none,t:lowercase,rev:1,severity:2,msg:'POL-2012-0391'"

# CVE: CVE-2013-2115
# CVSS: 9.3
# Publish: 2013-07-10T19:55:00
# Apache Struts 2 before 2.3.14.2 allows remote attackers to execute arbitrary OGNL code via a crafted request that is not properly handled when using the includeParams attribute in the (1) URL or (2) A tag. NOTE: this issue is due to an incomplete fix for CVE-2013-1966.
SecRule ARGS "@rx (\${.*}|%\{.*\})" \
	"id:66600036,msg:'POL-2013-2115',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'Struts'"

# CVE: CVE-2013-2134
# CVSS: 9.3
# Publish: 2013-07-16T18:55:00
# Apache Struts 2 before 2.3.14.3 allows remote attackers to execute arbitrary OGNL code via a request with a crafted action name that is not properly handled during wildcard matching, a different vulnerability than CVE-2013-2135.
SecRule REQUEST_URI "@rx (\${.*}|%\{.*\})" \
	"id:66600037,msg:'POL-2013-2134',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'Struts'"

# CVE: CVE-2012-0874
# CVSS: 6.8
# Publish: 2013-02-05T23:55:00
# The (1) JMXInvokerHAServlet and (2) EJBInvokerHAServlet invoker servlets in JBoss Enterprise Application Platform (EAP) before 5.2.0, Web Platform (EWP) before 5.2.0, BRMS Platform before 5.3.1, and SOA Platform before 5.3.1 do not require authentication by default in certain profiles, which might allow remote attackers to invoke MBean methods and execute arbitrary code via unspecified vectors.  NOTE: this issue can only be exploited when the interceptor is not properly configured with a "second layer of authentication," or when used in conjunction with other vulnerabilities that bypass this second layer. Per http://rhn.redhat.com/errata/RHSA-2013-0192.html "This JBoss Enterprise Application Platform 5.2.0 release serves as a replacement for JBoss Enterprise Application Platform 5.1.2, and includes bug fixes and enhancements." Per http://rhn.redhat.com/errata/RHSA-2013-0196.html "This JBoss Enterprise Web Platform 5.2.0 release serves as a replacement for JBoss Enterprise Web Platform 5.1.2, and includes bug fixes and enhancements."
SecRule REQUEST_FILENAME "@rx (/invoker/jmxinvokerservlet|/invoker/ebjinvokerservlet)" "id:66600038,phase:1,deny,status:403,log,tag:'JBoss',t:none,t:lowercase,t:normalizePathWin,msg:'POL-2012-0874'"

# CVE: CVE-2017-12149
# CVSS: 7.5
# Publish: 2017-10-04T21:01:00
# In Jboss Application Server as shipped with Red Hat Enterprise Application Platform 5.2, it was found that the doFilter method in the ReadOnlyAccessFilter of the HTTP Invoker does not restrict classes for which it performs deserialization and thus allowing an attacker to execute arbitrary code via crafted serialized data.
SecRule REQUEST_FILENAME "contains /invoker/readonly" "id:66600039,chain,phase:2,deny,status:403,log,tag:'JBoss',t:none,t:lowercase,msg:'POL-2017-12149'"
SecRule REQUEST_BODY "@rx (org\.apache\.commons.collections\.functors\.chainedtransformer|org\.apache\.commons\.collections\.map\.lazymap|org\.apache\.commons\.collections\.functors\.invokertransformer)" "t:none,t:lowercase"

# CVE: CVE-2017-7504
# CVSS: 7.5
# Publish: 2017-05-19T20:29:00
# HTTPServerILServlet.java in JMS over HTTP Invocation Layer of the JbossMQ implementation, which is enabled by default in Red Hat Jboss Application Server <= Jboss 4.X does not restrict the classes for which it performs deserialization, which allows remote attackers to execute arbitrary code via crafted serialized data.
SecRule REQUEST_FILENAME "@contains /jbossmq-httpil/httpserverilservlet" \
	"id:66600040,msg:'POL-2017-7504',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePathWin,t:lowercase,rev:1,severity:2,tag:'Jboss'"

# CVE: CVE-2017-12617
# CVSS: 6.8
# Publish: 2017-10-04T01:29:00
# When running Apache Tomcat versions 9.0.0.M1 to 9.0.0, 8.5.0 to 8.5.22, 8.0.0.RC1 to 8.0.46 and 7.0.0 to 7.0.81 with HTTP PUTs enabled (e.g. via setting the readonly initialisation parameter of the Default servlet to false) it was possible to upload a JSP file to the server via a specially crafted request. This JSP could then be requested and any code it contained would be executed by the server.
SecRule REQUEST_METHOD "@rx ^(?i:PUT)$" "id:66600041,chain,phase:2,deny,status:403,log,tag:'Tomcat',rev:2,t:none,t:urlDecodeUni,severity:2,msg:'POL-2017-12617'"
SecRule REQUEST_FILENAME "@rx (?i:\.(php.?|asp|aspx|asa|asax|ascx|ashx|asmx|soap|cs|inc|jsp|jspf|jspx|java|html|htmlx|phtml|shtml|cfg|cfm|htaccess|cgi|dll|exe|bat|sh|py|pl|cer|war)(\.| |\/|\\\\|\:\:\$DATA))" "t:none,t:urlDecodeUni"

# CVE: CVE-2014-0050
# CVSS: 7.5
# Publish: 2014-04-01T06:27:00
# MultipartStream.java in Apache Commons FileUpload before 1.3.1, as used in Apache Tomcat, JBoss Web, and other products, allows remote attackers to cause a denial of service (infinite loop and CPU consumption) via a crafted Content-Type header that bypasses a loop's intended exit conditions. The previous CVSS assessment ( Base Score: 5.0 -  AV:N/AC:L/AU:N/C:N/I:N/A:P) was provided at the time of initial analysis based on the best available published information at that time.  The score has been updated to reflect the impact to Oracle products per <a href=http://www.oracle.com/technetwork/topics/security/cpuoct2015-2367953.html> Oracle Critical Patch Update Advisory - October 2015 </a>. Other products listed as vulnerable may or may not be similarly impacted.
SecRule REQUEST_HEADERS:Content-Type "@rx .{4000}" "id:66600042,phase:2,deny,status:403,log,tag:'Tomcat',t:none,t:lowercase,msg:'POL-2014-0050'"

# CVE: CVE-2016-9299
# CVSS: 7.5
# Publish: 2017-01-12T23:59:00
# The remoting module in Jenkins before 2.32 and LTS before 2.19.3 allows remote attackers to execute arbitrary code via a crafted serialized Java object, which triggers an LDAP query to a third-party server.
SecRule REQUEST_FILENAME "@contains /cli" "id:66600043,chain,phase:1,pass,setvar:'TX.jenkins_xml=1',nolog,ctl:requestBodyProcessor=URLENCODED,tag:'Jenkins',t:none,t:normalizePathWin,t:lowercase,msg:'POL-2016-9299'"
SecRule REQUEST_HEADERS:Content-Type "@within application/octet-stream" "t:none,t:lowercase,setvar:'TX.jenkins_xml=1',ctl:requestBodyProcessor=URLENCODED"

SecRule TX:jenkins_xml "@eq 1" "id:66600044,chain,phase:2,deny,status:403,log,rev:1,severity:2,tag:'Jenkins',t:none,msg:'POL-2016-9299'"
SecRule REQUEST_BODY "@rx (org\.apache\.commons\.collections\.map\.flat3map|com\.sun\.jndi\.ldap\.ldapattribute)" "t:none,t:urlDecodeUni,t:lowercase"

# CVE: CVE-2016-0792
# CVSS: 9
# Publish: 2016-04-07T23:59:00
# Multiple unspecified API endpoints in Jenkins before 1.650 and LTS before 1.642.2 allow remote authenticated users to execute arbitrary code via serialized data in an XML file, related to XStream and groovy.util.Expando.
SecRule REQUEST_FILENAME "@contains /createitem" "id:66600045,chain,phase:1,pass,nolog,tag:'Jenkins',t:none,t:normalizePathWin,t:lowercase,msg:'POL-2016-0792'"
SecRule REQUEST_HEADERS:Content-Type "@within text/xml application/xml" "chain,t:none,t:lowercase"
SecRule ARGS:name "@rx (.+)" "t:none,t:urlDecodeUni,t:lowercase,setvar:'TX.jenkins_xml=1',ctl:requestBodyProcessor=URLENCODED"

SecRule TX:jenkins_xml "@eq 1" "id:66600046,chain,phase:2,deny,status:403,log,rev:1,severity:2,tag:'Jenkins',t:none,msg:'POL-2016-0792'"
SecRule REQUEST_BODY "@rx (groovy\.util\.expando|java\.lang\.processbuilder)" "t:none,t:urlDecodeUni,t:lowercase"

# CVE: CVE-2017-1000353
# CVSS: 7.5
# Publish: 2018-01-29T17:29:00
# Jenkins versions 2.56 and earlier as well as 2.46.1 LTS and earlier are vulnerable to an unauthenticated remote code execution. An unauthenticated remote code execution vulnerability allowed attackers to transfer a serialized Java `SignedObject` object to the Jenkins CLI, that would be deserialized using a new `ObjectInputStream`, bypassing the existing blacklist-based protection mechanism. We're fixing this issue by adding `SignedObject` to the blacklist. We're also backporting the new HTTP CLI protocol from Jenkins 2.54 to LTS 2.46.2, and deprecating the remoting-based (i.e. Java serialization) CLI protocol, disabling it by default.
SecRule REQUEST_FILENAME "@contains /cli" "id:66600047,chain,phase:1,pass,setvar:'TX.jenkins_xml=1',nolog,ctl:requestBodyProcessor=URLENCODED,tag:'Jenkins',t:none,t:normalizePathWin,t:lowercase,msg:'POL-2017-1000353'"
SecRule REQUEST_HEADERS:Content-Type "@within application/octet-stream" "t:none,t:lowercase,setvar:'TX.jenkins_xml=1',ctl:requestBodyProcessor=URLENCODED"

SecRule TX:jenkins_xml "@eq 1" "id:66600048,chain,phase:2,deny,status:403,log,rev:1,severity:2,tag:'Jenkins',t:none,msg:'POL-2017-1000353'"
SecRule REQUEST_BODY "@rx (org\.apache\.commons\.collections\.map\.referencemap|org\.apache\.commons\.collections\.functors\.constanttransformer|java\.lang\.runtime|org\.apache\.commons\.collections\.functors\.invokertransformer)" "t:none,t:urlDecodeUni,t:lowercase"

# CVE: CVE-2016-3670
# CVSS: 4.3
# Publish: 2016-06-13T14:59:00
# Cross-site scripting (XSS) vulnerability in users.jsp in the Profile Search functionality in Liferay before 7.0.0 CE RC1 allows remote attackers to inject arbitrary web script or HTML via the FirstName field.
SecRule ARGS_GET_NAMES "^p_p_lifecycle$" \
	"id:66600049,chain,msg:'POL-2016-3670',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'Liferay',tag:'Liferay Portal'"
SecRule ARGS_GET:/(_[0-9]*_)struts_action/ "@rx .*\/(create_account|edit_user)" \
	"chain,t:none,t:trim,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:/(_[0-9]*_)screenName/|ARGS_POST:/(_[0-9]*_)emailAddress/|ARGS_POST:/(_[0-9]*_)firstName/|ARGS_POST:/(_[0-9]*_)middleName/|ARGS_POST:/(_[0-9]*_)lastName/|ARGS_POST:/(_[0-9]*_)jobTitle/ "@rx <.*>" \
	"t:none,t:trim,t:lowercase,t:urlDecodeUni,t:htmlEntityDecode"

# CVE: CVE-2017-9822
# CVSS: 6.5
# Publish: 2017-07-20T12:29:00
# DNN (aka DotNetNuke) before 9.1.1 has Remote Code Execution via a cookie, aka "2017-08 (Critical) Possible remote code execution on DNN sites."
SecRule REQUEST_HEADERS:Cookie "@contains DNNPersonalization" \
    "id:66600050,msg:'POL-2017-9822',phase:2,deny,chain,status:403,log,t:urlDecode,t:none,t:trim,rev:2,severity:2,tag:'CWAF',tag:'DotNetNuke'"
SecRule REQUEST_HEADERS:Cookie "@contains <MethodName>" \
    "t:none,t:trim,t:urlDecode"

# CVE: CVE-2018-9126
# CVSS: 5
# Publish: 2018-04-04T19:29:00
# The DNNArticle module 11 for DNN (formerly DotNetNuke) allows remote attackers to read the web.config file, and consequently discover database credentials, via the /GetCSS.ashx/?CP=%2fweb.config URI.
SecRule REQUEST_FILENAME "/desktopmodules/dnnarticle/getcss.ashx" \
	"id:66600051,chain,msg:'POL-2018-9126',phase:1,deny,status:403,log,t:none,t:trim,t:normalizePathWin,t:lowercase,rev:1,severity:2,tag:'DNNArticle',tag:'DotNetNuke'"
SecRule ARGS:CP "!@endsWith .css" \
	"t:none,t:urlDecodeUni,t:lowercase"

# CVE: CVE-2017-9248
# CVSS: 7.5
# Publish: 2017-07-03T19:29:00
# Telerik.Web.UI.dll in Progress Telerik UI for ASP.NET AJAX before R2 2017 SP1 and Sitefinity before 10.0.6412.0 does not properly protect Telerik.Web.UI.DialogParametersEncryptionKey or the MachineKey, which makes it easier for remote attackers to defeat cryptographic protection mechanisms, leading to a MachineKey leak, arbitrary file uploads or downloads, XSS, or ASP.NET ViewState compromise.
SecRule REQUEST_FILENAME "@rx (?i:((\/Telerik\.Web\.UI\.DialogHandler\.as(p|h)x)|(\/DesktopModules\/Admin\/RadEditorProvider\/DialogHandler\.as(p|h)x)))" \
	"id:66600052,msg:'POL-2017-9248',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePathWin,t:lowercase,rev:4,severity:2,tag:'Telerik'"

# CVE: CVE-2017-11317
# CVSS: 7.5
# Publish: 2017-08-23T17:29:00
# Telerik.Web.UI in Progress Telerik UI for ASP.NET AJAX before R1 2017 and R2 before R2 2017 SP2 uses weak RadAsyncUpload encryption, which allows remote attackers to perform arbitrary file uploads or execute arbitrary code.
SecRule REQUEST_FILENAME "@rx (?i:(\/Telerik\.Web\.UI\.WebResource\.axd))" \
	"id:66600053,chain,msg:'POL-2017-11317',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePathWin,t:lowercase,rev:1,severity:2,tag:'Telerik'"
SecRule ARGS:type "@contains rau" \
	"t:none,t:trim,t:lowercase"

# CVE: CVE-2017-11357
# CVSS: 7.5
# Publish: 2017-08-23T17:29:00
# Progress Telerik UI for ASP.NET AJAX before R2 2017 SP2 does not properly restrict user input to RadAsyncUpload, which allows remote attackers to perform arbitrary file uploads or execute arbitrary code.
SecRule REQUEST_FILENAME "@rx (?i:(\/Telerik\.Web\.UI\.WebResource\.axd))" \
	"id:66600054,chain,msg:'POL-2017-11357',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePathWin,t:lowercase,rev:1,severity:2,tag:'Telerik'"
SecRule ARGS:type "@contains rau" \
	"t:none,t:trim,t:lowercase"

# CVE: CVE-2017-11317
# CVSS: 7.5
# Publish: 2017-08-23T17:29:00
# Telerik.Web.UI in Progress Telerik UI for ASP.NET AJAX before R1 2017 and R2 before R2 2017 SP2 uses weak RadAsyncUpload encryption, which allows remote attackers to perform arbitrary file uploads or execute arbitrary code.
SecRule REQUEST_FILENAME "@rx (?i:((\/Telerik\.Web\.UI\.DialogHandler\.as(p|h)x)|(\/DesktopModules\/Admin\/RadEditorProvider\/DialogHandler\.as(p|h)x)))" \
	"id:66600055,msg:'POL-2017-11317',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePathWin,t:lowercase,rev:4,severity:2,tag:'Telerik'"

# CVE: CVE-2016-10033
# CVSS: 7.5
# Publish: 2016-12-30T19:59:00
# The mailSend function in the isMail transport in PHPMailer before 5.2.18 might allow remote attackers to pass extra parameters to the mail command and consequently execute arbitrary code via a \" (backslash double quote) in a crafted Sender property.
# SecRule ARGS "@rx \".+?\\\".+?-be.+?\"@.+?\..+|\".+?\\\'.+?-be.+?\"@.+?\..+" "id:66600056,msg:'POL-2016-10033',phase:2,deny,status:403,log,t:none,t:trim,rev:1,severity:2,tag:'PHPMailer, ZendMail, SwiftMailer'"

# CVE: CVE-2016-10033
# CVSS: 7.5
# Publish: 2016-12-30T19:59:00
# The mailSend function in the isMail transport in PHPMailer before 5.2.18 might allow remote attackers to pass extra parameters to the mail command and consequently execute arbitrary code via a \" (backslash double quote) in a crafted Sender property.
SecRule ARGS "@rx (?i:(\".*?\\\'.+?\"\s*?@)|(\".*?\\\\\".+?\"\s*?@))" "id:66600057,msg:'POL-2016-10033',phase:2,deny,status:403,log,t:none,t:trim,rev:1,severity:2,tag:'PHPMailer, ZendMail, SwiftMailer'"

# CVE: CVE-2014-8684
# CVSS: 7.5
# Publish: 2017-09-19T19:29:00
# CodeIgniter before 3.0 and Kohana 3.2.3 and earlier and 3.3.x through 3.3.2 make it easier for remote attackers to spoof session cookies and consequently conduct PHP object injection attacks by leveraging use of standard string comparison operators to compare cryptographic hashes.
SecRule REQUEST_FILENAME "@contains /set_general_setup" \
	"id:66600058,chain,msg:'POL-2014-8684',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,rev:1,severity:2,tag:'CodeIgniter'"
SecRule ARGS_POST:general_setup "@rx description=(.*?);" \
	"t:none,t:trim,t:lowercase,t:urlDecode"

# CVE: CVE-2012-4236
# CVSS: 4.3
# Publish: 2012-08-20T19:55:00
# Cross-site scripting (XSS) vulnerability in the refresh_page function in application/modules/_main/views/_top.php in Total Shop UK eCommerce Open Source before 2.1.2_p1 allows remote attackers to inject arbitrary web script or HTML via the PATH_INFO.
SecRule REQUEST_URI "@rx \x00(.*?)([;\"}{]|//)" \
	"id:66600059,msg:'POL-2012-4236',phase:2,deny,status:403,log,t:none,t:trim,t:normalizePath,t:urlDecode,rev:1,severity:2,tag:'CodeIgniter'"

# CVE: CVE-2018-8284
# CVSS: 9.3
# Publish: 2018-07-11T00:29:00
# A remote code execution vulnerability exists when the Microsoft .NET Framework fails to validate input properly, aka ".NET Framework Remote Code Injection Vulnerability." This affects Microsoft .NET Framework 2.0, Microsoft .NET Framework 3.0, Microsoft .NET Framework 4.6.2/4.7/4.7.1/4.7.2, Microsoft .NET Framework 4.5.2, Microsoft .NET Framework 4.6, Microsoft .NET Framework 4.7/4.7.1/4.7.2, Microsoft .NET Framework 4.7.1/4.7.2, Microsoft .NET Framework 3.5, Microsoft .NET Framework 3.5.1, Microsoft .NET Framework 4.6/4.6.1/4.6.2, Microsoft .NET Framework 4.6/4.6.1/4.6.2/4.7/4.7.1/4.7.1/4.7.2, Microsoft .NET Framework 4.7.2.
SecRule REQUEST_FILENAME "@contains /_vti_bin/webpartpages.asmx" \
	"id:66600060,msg:'POL-2018-8284',phase:1,pass,nolog,t:none,t:lowercase,t:normalizePathWin,ctl:requestBodyProcessor=URLENCODED,tag:'SharePoint'"

SecRule REQUEST_FILENAME "@contains /_vti_bin/webpartpages.asmx" \
	"id:66600061,chain,msg:'POL-2018-8284',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePathWin,rev:3,severity:2,tag:'SharePoint'"
SecRule REQUEST_BODY "@rx (?i:(<.*?Code.*?>.*?</.*?Code.*?>))" \
	"t:none"

# CVE: CVE-2013-4547
# CVSS: 7.5
# Publish: 2013-11-23T18:55:00
# nginx 0.8.41 through 1.4.3 and 1.5.x before 1.5.7 allows remote attackers to bypass intended restrictions via an unescaped space character in a URI.
SecRule REQUEST_FILENAME "@rx \0" "id:66600062,msg:'POL-2013-4547',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,t:urlDecodeUni,rev:1,severity:2,tag:'Nginx'"

# CVE: CVE-2013-7149
# CVSS: 7.5
# Publish: 2013-12-28T04:53:00
# SQL injection vulnerability in www/delivery/axmlrpc.php (aka the XML-RPC delivery invocation script) in Revive Adserver before 3.0.2, and OpenX Source 2.8.11 and earlier, allows remote attackers to execute arbitrary SQL commands via the what parameter to an XML-RPC method.
SecRule REQUEST_FILENAME "@endsWith axmlrpc.php" "id:66600063,chain,phase:1,pass,setvar:'TX.openx_axmlrpc=1',nolog,t:none,t:lowercase,tag:'Openx',msg:'POL-2013-7149'"
SecRule REQUEST_HEADERS:Content-Type "@within text/xml application/xml" "t:none,t:normalizePath,t:lowercase,ctl:requestBodyProcessor=XML"

SecRule TX:openx_axmlrpc "@eq 1" "id:66600064,chain,phase:2,deny,status:403,log,tag:'Openx',t:none,t:lowercase,rev:1,severity:2,msg:'POL-2013-7149'"
SecRule XML:/methodCall/params/param/value/string/text() "@rx [^\w\ \.]" "t:none,t:urlDecodeUni,t:lowercase"

# CVE: CVE-2016-9920
# CVSS: 6
# Publish: 2016-12-08T18:59:00
# steps/mail/sendmail.inc in Roundcube before 1.1.7 and 1.2.x before 1.2.3, when no SMTP server is configured and the sendmail program is enabled, does not properly restrict the use of custom envelope-from addresses on the sendmail command line, which allows remote authenticated users to execute arbitrary code via a modified HTTP request that sends a crafted e-mail message.
#########################################################################
# VT-2018-02495
# Roundcube 1.0.0 -> 1.2.2 - Remote Code Execution
# Deny option -OQueueDirectory and option -X (santize _from by filter [\s])
SecRule ARGS:_task "@eq mail" \
        "id:66600065,\
        rev:1,\
        status:403,\
        severity:2,\
        log,\
        tag:'Roundcube',\
        phase:2,\
        chain,\
        deny,\
        t:none,\
        t:lowercase,\
        t:urlDecodeUni,\
        msg:'POL-2016-9920'"
SecRule ARGS:_action "@eq send" \
        "t:none,\
        t:lowercase,\
        t:urlDecodeUni,\
        chain"
SecRule ARGS:_from "[\s]" \
        "t:none,\
        t:lowercase,\
        t:urlDecodeUni,\
        t:removeNulls"

# CVE: CVE-2015-8770
# CVSS: 6
# Publish: 2016-01-29T19:59:00
# Directory traversal vulnerability in the set_skin function in program/include/rcmail_output_html.php in Roundcube before 1.0.8 and 1.1.x before 1.1.4 allows remote authenticated users with certain permissions to read arbitrary files or possibly execute arbitrary code via a .. (dot dot) in the _skin parameter to index.php.
#########################################################################
# VT-2018-02494
# Roundcube Webmail 1.1.3 - Directory Traversal
# Deny use relative path
SecRule ARGS:_task "@contains settings" \
        "id:66600066,\
        rev:1,\
        status:403,\
        severity:2,\
        log,\
        tag:'Roundcube',\
        phase:2,\
        chain,\
        deny,\
        t:none,\
        t:lowercase,\
        t:urlDecodeUni,\
        msg:'POL-2015-8770'"
SecRule ARGS:_action "@contains save-prefs" \
        "t:none,\
        t:lowercase,\
        t:urlDecodeUni,\
        chain"
SecRule ARGS:_skin "@contains .." \
        "t:none,\
        t:lowercase,\
        t:urlDecodeUni"

# CVE: CVE-2013-6172
# CVSS: 7.5
# Publish: 2013-11-05T18:55:00
# steps/utils/save_pref.inc in Roundcube webmail before 0.8.7 and 0.9.x before 0.9.5 allows remote attackers to modify configuration settings via the _session parameter, which can be leveraged to read arbitrary files, conduct SQL injection attacks, and execute arbitrary code.
#########################################################################
# VT-2018-02493
# RCE in Roundcube webmail before 0.8.7 and 0.9.x before 0.9.5
# Whitelist _session follow version 0.9.5.
SecRule ARGS:_action "@contains save-pref" \
        "id:66600067,\
        rev:1,\
        status:403,\
        severity:2,\
        log,\
        tag:'Roundcube',\
        phase:2,\
        chain,\
        deny,\
        t:none,\
        t:lowercase,\
        t:urlDecodeUni,\
        msg:'POL-2013-6172'"

SecRule ARGS:_session "!@streq list_attrib/columns" \
        "t:none,\
        t:lowercase,\
        t:urlDecodeUni"

# CVE: CVE-2018-9846
# CVSS: 6.8
# Publish: 2018-04-07T21:29:00
# In Roundcube from versions 1.2.0 to 1.3.5, with the archive plugin enabled and configured, it's possible to exploit the unsanitized, user-controlled "_uid" parameter (in an archive.php _task=mail&_mbox=INBOX&_action=plugin.move2archive request) to perform an MX (IMAP) injection attack by placing an IMAP command after a %0d%0a sequence. NOTE: this is less easily exploitable in 1.3.4 and later because of a Same Origin Policy protection mechanism.
SecRule ARGS:_action "@contains plugin.move2archive" \
        "id:66600068,\
        rev:1,\
        status:403,\
        severity:2,\
        log,\
        tag:'Roundcube',\
        phase:2,\
        chain,\
        deny,\
        t:none,\
        t:lowercase,\
        t:urlDecodeUni,\
        msg:'POL-2018-9846'"
SecRule ARGS:_uid "!@rx ^[0-9]+$" \
        "t:none,\
        t:lowercase,\
        t:urlDecodeUni"

# CVE: CVE-2012-1823
# CVSS: 7.5
# Publish: 2012-05-11T10:15:00
# sapi/cgi/cgi_main.c in PHP before 5.3.12 and 5.4.x before 5.4.2, when configured as a CGI script (aka php-cgi), does not properly handle query strings that lack an = (equals sign) character, which allows remote attackers to execute arbitrary code by placing command-line options in the query string, related to lack of skipping a certain php_getopt for the 'd' case.
SecRule ARGS_NAMES "@rx -[dtcnbsh?](\s|$)" \
    "id:66600069,\
    deny,\
    status:403,\
    phase:2,\
    rev:1,\
    severity:2,\
    log,\
    tag:'Apache',\
    tag:'PHP',\
    t:none,\
    t:lowercase,\
    t:trim,\
    t:urlDecodeUni,\
    t:urlDecode,\
    t:removeNulls,\
    msg:'POL-2012-1823'"

# CVE: CVE-2017-10271
# CVSS: 5
# Publish: 2017-10-19T17:29:00
# Vulnerability in the Oracle WebLogic Server component of Oracle Fusion Middleware (subcomponent: WLS Security). Supported versions that are affected are 10.3.6.0.0, 12.1.3.0.0, 12.2.1.1.0 and 12.2.1.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via T3 to compromise Oracle WebLogic Server. Successful attacks of this vulnerability can result in takeover of Oracle WebLogic Server. CVSS 3.0 Base Score 7.5 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H).
SecRule REQUEST_FILENAME "@rx (?i:((\/wls-wsat\/CoordinatorPortType)|(\/wls-wsat\/CoordinatorPortType11)|(\/wls-wsat\/CoordinatorPortType12)))" \
	"id:66600070,msg:'POL-2017-10271',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePathWin,t:lowercase,rev:1,severity:2,tag:'WebLogic'"

# CVE: CVE-2017-10271
# CVSS: 5
# Publish: 2017-10-19T17:29:00
# Vulnerability in the Oracle WebLogic Server component of Oracle Fusion Middleware (subcomponent: WLS Security). Supported versions that are affected are 10.3.6.0.0, 12.1.3.0.0, 12.2.1.1.0 and 12.2.1.2.0. Easily exploitable vulnerability allows unauthenticated attacker with network access via T3 to compromise Oracle WebLogic Server. Successful attacks of this vulnerability can result in takeover of Oracle WebLogic Server. CVSS 3.0 Base Score 7.5 (Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H).
SecRule REQUEST_FILENAME "@rx (/wls-wsat/coordinatorporttype|/wls-wsat/coordinatorporttype11|/wls-wsat/coordinatorporttype12|/wls-wsat/participantportype|/wls-wsat/participantportype11|/wls-wsat/registrationporttyperpc|/wls-wsat/registrationporttyperpc11|/wls-wsat/registrationrequesterportype|/wls-wsat/registrationrequesterporttype11)" "id:66600071,phase:1,deny,status:403,log,tag:'WebLogic',t:normalizePathWin,t:lowercase,rev:1,severity:2,msg:'POL-2017-10271'"

# CVE: CVE-2018-2894
# CVSS: 7.5
# Publish: 2018-07-18T13:29:00
# Vulnerability in the Oracle WebLogic Server component of Oracle Fusion Middleware (subcomponent: WLS - Web Services). Supported versions that are affected are 12.1.3.0, 12.2.1.2 and 12.2.1.3. Easily exploitable vulnerability allows unauthenticated attacker with network access via HTTP to compromise Oracle WebLogic Server. Successful attacks of this vulnerability can result in takeover of Oracle WebLogic Server. CVSS 3.0 Base Score 9.8 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:H/I:H/A:H).
SecRule REQUEST_FILENAME "@rx (\/ws_utc\/resources\/setting\/keystore|\/ws_utc\/resources\/ws\/config\/import)" \
        "id:66600072,\
        rev:1,\
        status:403,\
        severity:2,\
        log,\
        tag:'Roundcube',\
        phase:2,\
        chain,\
        deny,\
        t:none,\
        t:lowercase,\
        t:normalizePathWin,\
        t:urlDecodeUni,\
        msg:'POL-2018-2894'"
SecRule MULTIPART_FILENAME "@rx \.(jsp|jsf|xhtm|xhtml|html|htaccess|jspx)$" \
        "t:none,\
        t:lowercase,\
        t:urlDecodeUni"

# CVE: CVE-2018-8947
# CVSS: 5
# Publish: 2018-03-25T16:29:00
# rap2hpoutre Laravel Log Viewer before v0.13.0 relies on Base64 encoding for l, dl, and del requests, which makes it easier for remote attackers to bypass intended access restrictions, as demonstrated by reading arbitrary files via a dl request.
SecRule ARGS:dl|ARGS:del "@rx \.\." \
	"id:66600073,chain,msg:'POL-2018-8947',phase:2,deny,status:403,log,t:trim,t:lowercase,t:urlDecodeUni,t:Base64Decode,rev:1,severity:2,tag:'Laravel'"
SecRule REQUEST_FILENAME "@contains logs" \
	"t:none,t:trim,t:lowercase"

# CVE: CVE-2019-9621
# CVSS: 5
# Publish: 2019-04-30T18:29:00
# Zimbra Collaboration Suite before 8.6 patch 13, 8.7.x before 8.7.11 patch 10, and 8.8.x before 8.8.10 patch 7 or 8.8.x before 8.8.11 patch 3 allows SSRF via the ProxyServlet component.
SecRule REQUEST_FILENAME "@contains /proxy" \
	"id:66600074,chain,msg:'POL-2019-9621',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePathWin,rev:1,severity:2,tag:'Zimbra'"
SecRule ARGS:target "@rx .+" \
	"chain,t:none"
SecRule REQUEST_HEADERS:Host "@rx .*:7071" \
	"chain,t:none"
SecRule REQUEST_COOKIES:ZM_ADMIN_AUTH_TOKEN "@rx .+" \
	"t:none"


# CVE: CVE-2019-9670
# CVSS: 7.5
# Publish: 2019-05-29T22:29:00
# mailboxd component in Synacor Zimbra Collaboration Suite 8.7.x before 8.7.11p10 has an XML External Entity injection (XXE) vulnerability.
SecRule REQUEST_FILENAME "@contains /autodiscover" \
	"id:66600075,msg:'POL-2019-9670',phase:2,pass,nolog,t:none,t:lowercase,ctl:forceRequestBodyVariable=On,tag:'Zimbra'"

SecRule REQUEST_FILENAME "@contains /autodiscover" \
	"id:66600076,chain,msg:'POL-2019-9670',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePathWin,rev:1,severity:2,tag:'Zimbra'"
SecRule REQUEST_BODY "@rx <!doctype\s*request" \
	"t:none,t:lowercase"


# CVE: CVE-2014-9155
# CVSS: 4
# Publish: 2014-12-01T16:59:00
# Directory traversal vulnerability in the Avatar Uploader module 6.x-1.x before 6.x-1.2 and 7.x-1.x before 7.x-1.0-beta6 for Drupal allows remote authenticated users to read arbitrary files via a .. (dot dot) in the path of a cropped picture in the uploader panel.
SecRule TX:drupal "@eq 1" \
	"id:66600077,chain,msg:'POL-2014-9155',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_URI|ARGS:q "@contains au/view" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:file "@contains .." \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-2129
# CVSS: 4.3
# Publish: 2013-06-24T16:55:00
# Cross-site scripting (XSS) vulnerability in the Webform module 6.x-3.x before 6.x-3.19 for Drupal allows remote authenticated users with the "edit own webform content" or "edit all webform content" permissions to inject arbitrary web script or HTML via a component label.
SecRule TX:drupal "@eq 1" \
	"id:66600078,chain,msg:'POL-2013-2129',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@contains webform_component" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:add[name]|ARGS:name "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlentityDecode"


# CVE: CVE-2015-3359
# CVSS: 3.5
# Publish: 2015-04-21T16:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Room Reservations module before 7.x-1.1 for Drupal allow remote authenticated users with the "Administer the room reservations system" permission to inject arbitrary web script or HTML via the (1) node title of a "Room Reservations Category" or (2) body of a "Room Reservations Room" node.
SecRule TX:drupal "@eq 1" \
	"id:66600079,chain,msg:'POL-2015-3359',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq room_reservations_category_node_form" \
	"chain,t:none"
SecRule ARGS:q|REQUEST_URI "@pm add edit room-reservations-category" \
	"chain,t:none,t:normalizePath,t:lowercase,t:urlDecodeUni"
SecRule ARGS_POST:title "@contains <" \
	"t:none,t:lowercase,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-3453
# CVSS: 6.5
# Publish: 2014-05-17T19:55:00
# Eval injection vulnerability in the flag_import_form_validate function in includes/flag.export.inc in the Flag module 7.x-3.0, 7.x-3.5, and earlier for Drupal allows remote authenticated administrators to execute arbitrary PHP code via the "Flag import code" text area to admin/structure/flags/import.  NOTE: this issue could also be exploited by other attackers if the administrator ignores a security warning on the permissions assignment page.
SecRule ARGS_POST:import "@rx \b(?:(?!array)(?!flags\[))(\$)*([a-zA-Z_\x7f-\xff][a-zA-Z0-9_\x7f-\xff]*\s*(\[.*|\(.*))" \
	"id:66600080,chain,msg:'POL-2014-3453',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_URI "@contains admin/structure/flags/import" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2016-1913
# CVSS: 3.5
# Publish: 2016-01-15T20:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Redhen module 7.x-1.x before 7.x-1.11 for Drupal allow remote authenticated users with certain access to inject arbitrary web script or HTML via unspecified vectors, related to (1) individual contacts, (2) notes, or (3) engagement scores.
SecRule ARGS:q|REQUEST_FILENAME "@contains redhen/contact" \
	"id:66600081,chain,msg:'POL-2016-1913',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'Drupal'"
SecRule ARGS:first_name|ARGS:middle_name|ARGS:last_name "@contains <" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_COOKIES_NAMES "@rx ^sess[0-9a-f]{32}$" \
	"t:none,t:lowercase"

SecRule ARGS:q "@contains structure/redhen/engagement_scores/" \
	"id:66600082,chain,msg:'POL-2016-1913',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePathWin,t:lowercase,rev:2,severity:2,tag:'Drupal'"
SecRule &ARGS:score "@ge 1" \
	"chain,t:none"
SecRule ARGS:label "@contains <" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_COOKIES_NAMES "@rx ^sess[0-9a-f]{32}$" \
	"t:none,t:lowercase"

SecRule ARGS:q "@pm structure/taxonomy/note_type/ taxonomy/term" \
	"id:66600083,chain,msg:'POL-2016-1913',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePathWin,t:lowercase,rev:2,severity:2,tag:'Drupal'"
SecRule ARGS:name "@contains <" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_COOKIES_NAMES "@rx ^sess[0-9a-f]{32}$" \
	"t:none,t:lowercase"


# CVE: CVE-2015-4350
# CVSS: 6.8
# Publish: 2015-06-15T14:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Spider Catalog module for Drupal allow remote attackers to hijack the authentication of administrators for requests that delete (1) products, (2) ratings, or (3) categories via unspecified vectors.
SecRule TX:drupal "!@eq 1" \
	"id:66600084,phase:2,pass,nolog,t:none,skip:4,rev:1,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@pm admin/settings/spider_catalog/products admin/settings/spider_catalog/categories" \
	"id:66600085,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_spider_catalog=1',expirevar:'SESSION.dp_spider_catalog=300',t:none,t:lowercase"

SecRule ARGS_POST:form_id "@pm spider_catalog_product_edit_ratings spider_catalog_product_edit_reviews spider_catalog_category_edit spider_catalog_product_edit" \
	"id:66600086,chain,msg:'POL-2015-4350',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule &SESSION:dp_spider_catalog "!@eq 1" \
	"t:none"

SecRule ARGS_GET:q|REQUEST_FILENAME "@rx admin\/settings\/spider_catalog(\/products(\/edit\/(?:reviews|ratings))?)?$" \
	"id:66600087,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_spider_catalog_del=1',expirevar:'SESSION.dp_spider_catalog_del=300',t:none,t:lowercase"

SecRule &SESSION:dp_spider_catalog_del "!@eq 1" \
	"id:66600088,chain,msg:'POL-2015-4350',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule &ARGS_GET:product_id|&ARGS_GET:category_id "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx admin\/settings\/spider_catalog\/(?:products|categories)\/(?:edit|delete)(\/(?:reviews|ratings)\/delete)?$" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2014-9499
# CVSS: 3.5
# Publish: 2015-01-09T18:59:00
# Cross-site scripting (XSS) vulnerability in the Godwin's Law module before 7.x-1.1 for Drupal, when using the dblog module, allows remote authenticated users to inject arbitrary web script or HTML via a Watchdog message.
SecRule TX:drupal "@eq 1" \
	"id:66600089,chain,msg:'POL-2014-9499',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'Drupal'"
SecRule ARGS:form_id "@streq godwins_law_admin_settings" \
	"chain,t:none,t:lowercase"
SecRule ARGS:godwins_law_message|ARGS:godwins_law_message_noaction "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2015-4353
# CVSS: 5.8
# Publish: 2015-06-15T14:59:00
# Cross-site request forgery (CSRF) vulnerability in the Custom Sitemap module for Drupal allows remote attackers to hijack the authentication of administrators for requests that delete sitemaps via unspecified vectors.
SecRule TX:drupal "!@eq 1" \
	"id:66600090,phase:2,pass,nolog,t:none,skip:3,rev:1,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@endsWith admin/config/search/custom-sitemap" \
	"id:66600091,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:2,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_custom_sitemap=1',expirevar:'SESSION.dp_custom_sitemap=300',t:none,t:lowercase"

SecRule ARGS_POST:form_id "@streq custom_sitemap_files_list_form" \
	"id:66600092,chain,msg:'POL-2015-4353',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule &SESSION:dp_custom_sitemap "!@eq 1" \
	"t:none"

SecRule &SESSION:dp_custom_sitemap "!@eq 1" \
	"id:66600093,chain,msg:'POL-2015-4353',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule &ARGS_GET:destination "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx admin\/config\/search\/custom-sitemap\/\d+\/delete" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2013-4380
# CVSS: 2.1
# Publish: 2014-05-20T14:55:00
# Cross-site scripting (XSS) vulnerability in the MediaFront module 6.x-1.x before 6.x-1.6, 7.x-1.x before 7.x-1.6, and 7.x-2.x before 7.x-2.1 for Drupal allows remote authenticated users with the "administer mediafront" permission to inject arbitrary web script or HTML via the preset settings.
SecRule ARGS_POST:/player_settings\[presentation\]\[height\]/|ARGS_POST:/player_settings\[presentation\]\[width\]/ "[^0-9]" \
	"id:66600094,chain,msg:'POL-2013-4380',phase:2,deny,log,t:none,t:htmlEntityDecode,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_URI "@contains mediafront/preset/admin" \
	"t:none,t:urlDecodeUni,t:lowercase"

# CVE: CVE-2015-3386
# CVSS: 3.5
# Publish: 2015-04-21T18:59:00
# Cross-site scripting (XSS) vulnerability in the Node Access Product module for Drupal allows remote authenticated users to inject arbitrary web script or HTML via a node title.
SecRule TX:drupal "@eq 1" \
	"id:66600095,chain,msg:'POL-2015-3386',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@pm product_node_form views_ui_edit_display_form taxonomy_form_vocabulary taxonomy_form_term" \
	"chain,t:none"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx node\/add|node\/\d+\/edit|admin\/structure\/taxonomy|taxonomy\/term|admin\/structure\/views" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:title|ARGS_POST:name "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-5169
# CVSS: 3.5
# Publish: 2014-10-20T17:55:00
# Cross-site scripting (XSS) vulnerability in the Date module before 7.x-2.8 for Drupal allows remote authenticated users with the permission to create a date field to inject arbitrary web script or HTML via the date field title.
SecRule TX:drupal "@eq 1" \
	"id:66600096,chain,msg:'POL-2014-5169',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq field_ui_field_overview_form" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_URI "@pm structures types fields" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:fields[_add_new_field][type]|ARGS_POST:fields[_add_new_field][widget_type] "@pm date datetime datestamp date_popup date_text" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:fields[_add_new_field][label] "@contains <" \
	"t:none,t:lowercase,t:urlDecodeUni,t:htmlEntityDecode"

SecRule TX:drupal "@eq 1" \
	"id:66600097,chain,msg:'POL-2014-5169',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq field_ui_field_edit_form" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_URI "@pm structures types fields" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:fields[_add_new_field][label]|ARGS_POST:instance[label] "@contains <" \
	"t:none,t:lowercase,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-3383
# CVSS: 5.8
# Publish: 2015-04-21T18:59:00
# Open redirect vulnerability in the Node basket module for Drupal allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via unspecified vectors. <a href="http://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a>
SecRule TX:drupal "@eq 1" \
	"id:66600098,chain,msg:'POL-2015-3383',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx node\/\d+\/(?:pick-up|throw-out)" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_GET:destination "!@rx node\/\d+$" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2015-3382
# CVSS: 5.8
# Publish: 2015-04-21T18:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Node basket module for Drupal allow remote attackers to hijack the authentication of arbitrary users for requests that (1) add or (2) remove nodes from a basket via unspecified vectors. Per the <a href="https://www.drupal.org/node/2424419">advisory</a>:  "A malicious user can cause another user to add/remove nodes of the basket by getting his browser to make a request to a specially-crafted URL."  Only integrity and availability are affected.
SecRule TX:drupal "!@eq 1" \
	"id:66600099,phase:2,pass,nolog,t:none,skip:2,rev:1,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@rx node\/\d+$" \
	"id:66600100,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_node=1',expirevar:'SESSION.dp_node=300',t:none,t:lowercase"

SecRule &ARGS_GET:destination "@ge 1" \
	"id:66600101,chain,msg:'POL-2015-3382',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx node\/\d+\/(?:pick-up|throw-out)" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule &SESSION:dp_node "!@eq 1" \
	"t:none"


# CVE: CVE-2015-4352
# CVSS: 5.8
# Publish: 2015-06-15T14:59:00
# Cross-site request forgery (CSRF) vulnerability in the Spider Video Player module for Drupal allows remote attackers to hijack the authentication of administrators for requests that delete videos via unspecified vectors.
SecRule TX:drupal "!@eq 1" \
	"id:66600102,phase:2,pass,nolog,t:none,skip:4,rev:1,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/settings/spider_video_player" \
	"id:66600103,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_spider_video_player=1',expirevar:'SESSION.dp_spider_video_player=300',t:none,t:lowercase"

SecRule ARGS_POST:form_id "@pm spider_video_player_tag_edit spider_video_player_video_edit spider_video_player_playlist_edit spider_video_player_add_video_form" \
	"id:66600104,chain,msg:'POL-2015-4352',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule &SESSION:dp_spider_video_player "!@eq 1" \
	"t:none"

SecRule ARGS_GET:q|REQUEST_FILENAME "@rx admin\/settings\/spider_video_player(?:\/tags|\/videos)?$" \
	"id:66600105,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_spider_video_player_del=1',expirevar:'SESSION.dp_spider_video_player_del=300',t:none,t:lowercase"

SecRule &ARGS_GET:tag_id|&ARGS_GET:playlist_id|&ARGS_GET:video_id "@ge 1" \
	"id:66600106,chain,msg:'POL-2015-4352',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule &SESSION:dp_spider_video_player_del "!@eq 1" \
	"chain,t:none"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx admin\/settings\/spider_video_player\/(?:tags|videos|playlists)\/delete$" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2015-4351
# CVSS: 4.9
# Publish: 2015-06-15T14:59:00
# The Spider Video Player module for Drupal allows remote authenticated users with the "access Spider Video Player administration" permission to delete arbitrary files via a crafted URL.
SecRule TX:drupal "@eq 1" \
	"id:66600107,chain,msg:'POL-2015-4351',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:tag_id|ARGS_GET:playlist_id|ARGS_GET:video_id "@rx \D" \
	"chain,t:none"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx admin\/settings\/spider_video_player\/(?:tags|videos|playlists)\/delete$" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2015-3372
# CVSS: 3.5
# Publish: 2015-04-21T16:59:00
# Cross-site scripting (XSS) vulnerability in the Node Invite module before 6.x-2.5 for Drupal allows remote authenticated users to inject arbitrary web script or HTML via a node title.
SecRule TX:drupal "@eq 1" \
	"id:66600108,chain,msg:'POL-2015-3372',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule &ARGS_POST:node_invites_enabled "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx node\/add|node\/\d+\/edit" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:title "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-3352
# CVSS: 6.8
# Publish: 2015-04-21T16:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Jammer module before 6.x-1.8 and 7.x-1.x before 7.x-1.4 for Drupal allow remote attackers to hijack the authentication of administrators for requests that delete a setting for (1) hidden form elements or (2) status messages via unspecified vectors, related to "report administration."
SecRule TX:drupal "!@eq 1" \
	"id:66600109,phase:2,pass,nolog,t:none,skip:4,rev:1,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@rx admin\/config\/user-interface\/jammer_(?:messages|generic)$|admin\/settings\/jammer\/(?:generic|jammer_messages)$" \
	"id:66600110,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_jammer_del=100',expirevar:'SESSION.dp_jammer_del=300',t:none,t:lowercase"

SecRule &SESSION:dp_jammer_del "!@eq 1" \
	"id:66600111,chain,msg:'POL-2015-3352',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx admin\/config\/user-interface\/jammer_(?:generic|messages)\/delete\/\d+$|admin\/settings\/jammer\/(?:generic|jammer_messages)\/delete\/\d+$" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"

SecRule ARGS_GET:q|REQUEST_FILENAME "@rx admin\/config\/user-interface\/(?:jammer|shortcut)|admin\/settings\/jammer(?:\/generic|\/jammer_messages)?$" \
	"id:66600112,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_jammer=1',expirevar:'SESSION.dp_jammer=300',t:none,t:lowercase"

SecRule ARGS_POST:form_id "@pm _jammer_generic_admin_settings jammer_admin_settings _jammer_messages_settings shortcut_set_add_form shortcut_link_delete" \
	"id:66600113,chain,msg:'POL-2015-3352',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule &SESSION:dp_jammer "!@eq 1" \
	"t:none"


# CVE: CVE-2015-4385
# CVSS: 2.1
# Publish: 2015-06-15T14:59:00
# Cross-site scripting (XSS) vulnerability in unspecified administration pages in the Imagefield Info module 7.x-1.x before 7.x-1.2 for Drupal allows remote authenticated users with the "Administer image styles" permission to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:drupal "@eq 1" \
	"id:66600114,chain,msg:'POL-2015-4385',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@pm image_style_add_form image_style_form" \
	"chain,t:none"
SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/config/media/image-styles" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:name|ARGS_POST:label "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-4370
# CVSS: 3.5
# Publish: 2015-06-15T14:59:00
# Cross-site scripting (XSS) vulnerability in the Site Documentation module before 6.x-1.5 for Drupal allows remote authenticated users with certain permissions to inject arbitrary web script or HTML via vectors related to taxonomy terms.
SecRule TX:drupal "@eq 1" \
	"id:66600115,chain,msg:'POL-2015-4370',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq taxonomy_form_term" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/content/taxonomy" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:name|ARGS_POST:description "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-4373
# CVSS: 3.5
# Publish: 2015-06-15T14:59:00
# Cross-site scripting (XSS) vulnerability in the OG tabs module before 7.x-1.1 for Drupal allows remote authenticated users with certain permissions to inject arbitrary web script or HTML via vectors related to nodes posted in an Organic Groups group.
SecRule TX:drupal "@eq 1" \
	"id:66600116,chain,msg:'POL-2015-4373',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule &ARGS_POST:/^og_group_ref/ "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx node\/add|node\/\d+\/edit" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:title "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-3933
# CVSS: 3.5
# Publish: 2014-06-02T14:55:00
# Cross-site scripting (XSS) vulnerability in the address components field formatter in the AddressField Tokens module 7.x-1.x before 7.x-1.4 for Drupal allows remote authenticated users to inject arbitrary web script or HTML via an address field.
SecRule TX:drupal "@eq 1" \
	"id:66600117,chain,msg:'POL-2014-3933',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq webform_node_form" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_URI "@pm webform add edit" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:field_address_title[und][0][thoroughfare]|ARGS_POST:field_address_title[und][0][premise] "@contains <" \
	"t:none,t:lowercase,t:urlDecodeUni"


# CVE: CVE-2015-4356
# CVSS: 3.5
# Publish: 2015-06-15T14:59:00
# Cross-site scripting (XSS) vulnerability in the view-based webform results table in the Webform module 7.x-4.x before 7.x-4.4 for Drupal allows remote authenticated users with certain permissions to inject arbitrary web script or HTML via a webform.
SecRule ARGS:form_id "@streq webform_client_form_6" \
	"id:66600118,chain,msg:'POL-2015-4356',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule &ARGS:form_build_id "@ge 1" \
	"chain,t:none"
SecRule ARGS:op "@streq submit" \
	"chain,t:none,t:lowercase"
SecRule ARGS:/submitted\[[\w]*\]/ "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"

SecRule ARGS:form_id "@streq webform_client_form_6" \
	"id:66600119,chain,msg:'POL-2015-4356',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule &ARGS:form_build_id "@ge 1" \
	"chain,t:none"
SecRule ARGS:op "@streq submit" \
	"chain,t:none,t:lowercase"
SecRule ARGS:/submitted\[[\w]*\]/ "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2015-3392
# CVSS: 3.5
# Publish: 2015-04-21T18:59:00
# Cross-site scripting (XSS) vulnerability in the Ajax Timeline module before 7.x-1.1 for Drupal allows remote authenticated users to inject arbitrary web script or HTML via a node title.
SecRule TX:drupal "@eq 1" \
	"id:66600120,chain,msg:'POL-2015-3392',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx node\/add|node\/\d+\/edit" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:title "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-4349
# CVSS: 5.8
# Publish: 2015-06-15T14:59:00
# Cross-site request forgery (CSRF) vulnerability in the Spider Contacts module for Drupal allows remote attackers to hijack the authentication of administrators for requests that delete contact categories via unspecified vectors.
SecRule TX:drupal "!@eq 1" \
	"id:66600121,phase:2,pass,nolog,t:none,skip:4,rev:1,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@pm admin/settings/spider_contacts/categories admin/settings/spider_contacts/contacts" \
	"id:66600122,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_spider_contacts=1',expirevar:'SESSION.dp_spider_contacts=300',t:none,t:lowercase"

SecRule ARGS_POST:form_id "@pm spider_contacts_categories spider_contacts_category_edit spider_contacts_contact_edit spider_contacts_contacts" \
	"id:66600123,chain,msg:'POL-2015-4349',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule &SESSION:dp_spider_contacts "!@eq 1" \
	"t:none"

SecRule ARGS_GET:q|REQUEST_FILENAME "@rx admin\/settings\/spider_contacts\/(?:categories|contacts)$" \
	"id:66600124,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_spider_contacts_del=1',expirevar:'SESSION.dp_spider_contacts_del=300',t:none,t:lowercase"

SecRule &SESSION:dp_spider_contacts_del "!@eq 1" \
	"id:66600125,chain,msg:'POL-2015-4349',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule &ARGS_GET:contact_id|&ARGS_GET:category_id "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx admin\/settings\/spider_contacts\/(?:contacts|categories)\/delete$" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2015-4354
# CVSS: 3.5
# Publish: 2015-06-15T14:59:00
# Cross-site scripting (XSS) vulnerability in the Ubercart Webform Integration module before 6.x-1.8 and 7.x before 7.x-2.4 for Drupal allows remote authenticated users with certain permissions to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:drupal "@eq 1" \
	"id:66600126,chain,msg:'POL-2015-4354',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq product_node_form" \
	"chain,t:none"
SecRule ARGS:q|REQUEST_URI "@pm add edit product" \
	"chain,t:none,t:normalizePath,t:lowercase,t:urlDecodeUni"
SecRule ARGS_POST:title|ARGS_POST:model "@contains <" \
	"t:none,t:lowercase,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-4357
# CVSS: 3.5
# Publish: 2015-06-15T14:59:00
# Cross-site scripting (XSS) vulnerability in the Webform module before 6.x-3.22, 7.x-3.x before 7.x-3.22, and 7.x-4.x before 7.x-4.4 for Drupal allows remote authenticated users with certain permissions to inject arbitrary web script or HTML via a node title, which is used as the default title of a webform block.
SecRule TX:drupal "@eq 1" \
	"id:66600127,chain,msg:'POL-2015-4357',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS:form_id "@streq webform_node_form" \
	"chain,t:none,t:lowercase"
SecRule ARGS:op "@streq save" \
	"chain,t:none,t:lowercase"
SecRule ARGS:menu[link_title] "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2015-3375
# CVSS: 5.8
# Publish: 2015-04-21T16:59:00
# Cross-site request forgery (CSRF) vulnerability in the Shibboleth Authentication module before 6.x-4.1 and 7.x-4.x before 7.x-4.1 for Drupal allows remote attackers to hijack the authentication of administrators for requests that delete user role matching rules via unspecified vectors. Per the <a href="https://www.drupal.org/node/2411737">advisory</a>:  "A malicious attacker can delete matching rules from the list by getting the administrator's browser to make a request to a specially-crafted URL while the administrator is logged in."  Only integrity and availability are affected
SecRule TX:drupal "!@eq 1" \
	"id:66600128,phase:2,pass,nolog,t:none,skip:3,rev:1,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@pm admin/config/people/shib_auth/new admin/config/people/shib_auth/edit admin/config/people/shib_auth/rules" \
	"id:66600129,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,skip:2,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_shib_auth=1',expirevar:'SESSION.dp_shib_auth=300',t:none,t:lowercase"

SecRule ARGS_POST:form_id "@pm shib_auth_new_rule shib_auth_edit_rule" \
	"id:66600130,chain,msg:'POL-2015-3375',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule &SESSION:dp_shib_auth "!@eq 1" \
	"t:none"

SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/config/people/shib_auth/delete" \
	"id:66600131,chain,msg:'POL-2015-3375',phase:2,deny,status:403,log,t:none,t:normalizePath,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:dp_shib_auth "!@eq 1" \
	"t:none"


# CVE: CVE-2015-4348
# CVSS: 6
# Publish: 2015-06-15T14:59:00
# SQL injection vulnerability in the Spider Contacts module for Drupal allows remote authenticated users with the "access Spider Contacts category administration" permission to execute arbitrary SQL commands via unspecified vectors.
SecRule ARGS_POST:form_id "@streq spider_contacts_category_edit" \
	"id:66600132,chain,msg:'POL-2015-4348',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:category_name|ARGS_POST:category_description "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-3351
# CVSS: 6.8
# Publish: 2015-04-21T16:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Log Watcher module before 6.x-1.2 for Drupal allow remote attackers to hijack the authentication of administrators for requests that (1) enable, (2) disable, or (3) delete a report via unspecified vectors.
SecRule TX:drupal "!@eq 1" \
	"id:66600133,phase:2,pass,nolog,t:none,skip:3,rev:2,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@endsWith admin/reports/logwatcher" \
	"id:66600134,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:2,rev:2,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_logwatcher=1',expirevar:'SESSION.dp_logwatcher=300',t:none,t:lowercase"

SecRule &SESSION:dp_logwatcher "!@eq 1" \
	"id:66600135,chain,msg:'POL-2015-3351',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx admin\/reports\/logwatcher\/(?:(de)?activate|delete)\/\d+$" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"

SecRule ARGS_POST:form_id "@streq _logwatcher_admin_settings" \
	"id:66600136,chain,msg:'POL-2015-3351',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'Drupal'"
SecRule &SESSION:dp_logwatcher "!@eq 1" \
	"t:none"


# CVE: CVE-2015-3367
# CVSS: 6.8
# Publish: 2015-04-21T16:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Patterns module before 7.x-2.2 for Drupal allow remote attackers to hijack the authentication of administrators for requests that (1) restore, (2) publish, or (3) unpublish a pattern via unspecified vectors. Per the <a href="https://www.drupal.org/node/2411539">advisory</a>:  "A malicious user could cause an administrator to restore, publish and unpublish patterns by getting the administrator's browser to make a request to a specially-crafted URL."  Only integrity and availability are affected.
SecRule TX:drupal "!@eq 1" \
	"id:66600137,phase:2,pass,nolog,t:none,skip:4,rev:2,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@endsWith admin/patterns" \
	"id:66600138,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:2,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_patterns=1',expirevar:'SESSION.dp_patterns=300',t:none,t:lowercase"

SecRule &SESSION:dp_patterns "!@eq 1" \
	"id:66600139,chain,msg:'POL-2015-3367',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx admin\/patterns\/(?:publish|unpublish|restore)\/\d+$" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"

SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/patterns" \
	"id:66600140,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:2,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_patterns_edit=1',expirevar:'SESSION.dp_patterns_edit=300',t:none,t:lowercase"

SecRule ARGS_POST:form_id "@pm patterns_trash_pattern patterns_edit patterns_enable_pattern patterns_quickrun patterns_import_source" \
	"id:66600141,chain,msg:'POL-2015-3367',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'Drupal'"
SecRule &SESSION:dp_patterns_edit "!@eq 1" \
	"t:none"


# CVE: CVE-2013-0259
# CVSS: 2.1
# Publish: 2013-03-27T21:55:00
# Cross-site scripting (XSS) vulnerability in the Boxes module 7.x-1.x before 7.x-1.1 for Drupal allows remote authenticated users with administer or edit boxes permissions to inject arbitrary web script or HTML via the subject parameter.
SecRule TX:drupal "@eq 1" \
	"id:66600142,chain,msg:'POL-2013-0259',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS:form_id "@streq boxes_box_form" \
	"chain,t:none,t:lowercase"
SecRule ARGS:op "@streq save" \
	"chain,t:none,t:lowercase"
SecRule ARGS:title "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2014-1611
# CVSS: 4.3
# Publish: 2014-01-30T18:55:00
# Cross-site scripting (XSS) vulnerability in the Anonymous Posting module 7.x-1.2 and 7.x-1.3 for Drupal allows remote attackers to inject arbitrary web script or HTML via the contact name field.
SecRule TX:drupal "@eq 1" \
	"id:66600143,chain,msg:'POL-2014-1611',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:/^field_anonymous_author/ "@contains <" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx node\/add|node\/\d+\/edit" \
	"t:none,t:urlDecodeUni,t:normalizePath"


# CVE: CVE-2014-8379
# CVSS: 3.5
# Publish: 2014-10-21T15:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Marketo MA module before 7.x-1.5 for Drupal allow remote authenticated users with certain permissions to inject arbitrary web script or HTML via vectors related to field titles to the (1) Webform or (2) User sub-modules.
SecRule TX:drupal "@eq 1" \
	"id:66600144,chain,msg:'POL-2014-8379',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@pm webform_component_edit_form field_ui_field_edit_form webform_components_form field_ui_field_overview_form" \
	"chain,t:none"
SecRule ARGS_POST:name|ARGS_POST:instance[label]|ARGS_POST:add[name]|ARGS_POST:fields[_add_new_field][label] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-3374
# CVSS: 5.8
# Publish: 2015-04-21T16:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Corner module for Drupal allow remote attackers to hijack the authentication of administrators for requests that (1) enable or (2) disable corners via unspecified vectors. Per the <a href="https://www.drupal.org/node/2411741">advisory</a>:  "A malicious user can cause an administrator to enable and disable corners by getting the administrator's browser to make a request to a specially-crafted URL while the administrator is logged in."  Only integrity and availability are affected.
SecRule TX:drupal "!@eq 1" \
	"id:66600145,phase:2,pass,nolog,t:none,skip:4,rev:1,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/build/corner" \
	"id:66600146,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_corner=1',expirevar:'SESSION.dp_corner=300',t:none,t:lowercase"

SecRule ARGS_POST:form_id "@streq corner_admin_configure" \
	"id:66600147,chain,msg:'POL-2015-3374',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule &SESSION:dp_corner "!@eq 1" \
	"t:none"

SecRule ARGS_GET:q|REQUEST_FILENAME "@endsWith admin/build/corner" \
	"id:66600148,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_corner_config=1',expirevar:'SESSION.dp_corner_config=300',t:none,t:lowercase"

SecRule &SESSION:dp_corner_config "!@eq 1" \
	"id:66600149,chain,msg:'POL-2015-3374',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx admin\/build\/corner\/\d+\/(?:enable|disable|delete|clone)$" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2015-4358
# CVSS: 3.5
# Publish: 2015-06-15T14:59:00
# Cross-site scripting (XSS) vulnerability in unspecified administration pages in the Ubercart Discount Coupons module 6.x-1.x before 6.x-1.8 for Drupal allows remote authenticated users with certain permissions to inject arbitrary web script or HTML via vectors related to taxonomy terms.
SecRule TX:drupal "@eq 1" \
	"id:66600150,chain,msg:'POL-2015-4358',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS:form_id "@pm taxonomy_form_vocabulary user_admin_role user_admin_new_role" \
	"chain,t:none,t:lowercase"
SecRule ARGS:name "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2015-3376
# CVSS: 3.5
# Publish: 2015-04-21T16:59:00
# Cross-site scripting (XSS) vulnerability in the Quizzler module before 7-x.1.16 for Drupal allows remote authenticated users to inject arbitrary web script or HTML via a node title.
SecRule TX:drupal "@eq 1" \
	"id:66600151,chain,msg:'POL-2015-3376',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule &ARGS_POST:quizzler_qid "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx node\/add|node\/\d+\/edit" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:title|ARGS_POST:/^quizzler_multi_option_\d_\d_value/|ARGS_POST:/^quizzler_multi_\d_question/ "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-3363
# CVSS: 6.8
# Publish: 2015-04-21T16:59:00
# Cross-site request forgery (CSRF) vulnerability in the Contact Form Fields module before 6.x-2.3 for Drupal allows remote attackers to hijack the authentication of administrators for requests that delete fields via unspecified vectors.
SecRule TX:drupal "!@eq 1" \
	"id:66600152,phase:2,pass,nolog,t:none,skip:4,rev:1,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@endsWith admin/build/contact/manage" \
	"id:66600153,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_contact_del=1',expirevar:'SESSION.dp_contact_del=300',t:none,t:lowercase"

SecRule &SESSION:dp_contact_del "!@eq 1" \
	"id:66600154,chain,msg:'POL-2015-3363',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx admin\/build\/contact\/field_\w{1,128}\/delete$" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"

SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/build/contact" \
	"id:66600155,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_contact=1',expirevar:'SESSION.dp_contact=300',t:none,t:lowercase"

SecRule ARGS_POST:form_id "@pm contact_field_list_field contact_field_add_field_" \
	"id:66600156,chain,msg:'POL-2015-3363',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule &SESSION:dp_contact "!@eq 1" \
	"t:none"


# CVE: CVE-2014-8748
# CVSS: 3.5
# Publish: 2014-10-13T18:55:00
# Cross-site scripting (XSS) vulnerability in the Google Doubleclick for Publishers (DFP) module 7.x-1.x before 7.x-1.2 for Drupal allows remote authenticated users with the "administer dfp" permission to inject arbitrary web script or HTML via a slot name.
SecRule TX:drupal "@eq 1" \
	"id:66600157,chain,msg:'POL-2014-8748',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_URI "@contains dfp_ads" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:slot "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-8744
# CVSS: 3.5
# Publish: 2014-10-13T18:55:00
# Cross-site scripting (XSS) vulnerability in the Nivo Slider module 7.x-2.x before 7.x-1.11 for Drupal allows remote authenticated users with the "administer nivo slider" permission to inject arbitrary web script or HTML via an image title.
SecRule TX:drupal "@eq 1" \
	"id:66600158,chain,msg:'POL-2014-8744',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_URI "@contains structure/nivo-slider" \
	"chain,t:none,t:lowercase,t:normalizePath"
SecRule ARGS_POST:images[0][title] "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-8705
# CVSS: 7.5
# Publish: 2017-03-17T14:59:00
# PHP remote file inclusion vulnerability in editInplace.php in Wonder CMS 2014 allows remote attackers to execute arbitrary PHP code via a URL in the hook parameter.
SecRule TX:drupal "@eq 1" \
	"id:66600159,chain,msg:'POL-2014-8705',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq tribune_node_form" \
	"chain,t:none"
SecRule REQUEST_URI "@pm tribune add edit" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:title "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-4372
# CVSS: 3.5
# Publish: 2015-06-15T14:59:00
# Cross-site scripting (XSS) vulnerability in the Image Title module before 7.x-1.1 for Drupal allows remote authenticated users with certain permissions to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:drupal "@eq 1" \
	"id:66600160,chain,msg:'POL-2015-4372',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule &ARGS_POST:current_title_image_status|&ARGS_POST:/files\[image_title_upload]/ "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx node\/add|node\/\d+\/edit" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:title "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-4374
# CVSS: 3.5
# Publish: 2015-06-16T17:59:00
# Cross-site scripting (XSS) vulnerability in the Webform module before 6.x-3.23, 7.x-3.x before 7.x-3.23, and 7.x-4.x before 7.x-4.5 for Drupal allows remote authenticated users with certain permissions to inject arbitrary web script or HTML via a component name in the recipient (To) address of an email.
SecRule TX:drupal "@eq 1" \
	"id:66600161,chain,msg:'POL-2015-4374',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@pm webform_component_edit_form webform_components_form" \
	"chain,t:none"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx node\/\d+\/webform|node\/\d+\/webform\/components" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:name|ARGS_POST:add[name] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-4376
# CVSS: 3.5
# Publish: 2015-06-15T14:59:00
# Cross-site scripting (XSS) vulnerability in the Profile2 Privacy module 7.x-1.x before 7.x-1.5 for Drupal allows remote authenticated users with the "Administer Profile2 Privacy Levels" permission to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:drupal "@eq 1" \
	"id:66600162,chain,msg:'POL-2015-4376',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq profile2_privacy_level_form" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/config/people/profile2_privacy/level" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:title|ARGS_POST:description "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-4377
# CVSS: 2.1
# Publish: 2015-06-15T14:59:00
# Cross-site scripting (XSS) vulnerability in unspecified administration pages in the Petition module 6.x-1.x before 6.x-1.3 for Drupal allows remote authenticated users with the "create petition" permission to inject arbitrary web script or HTML via unknown vectors.
SecRule TX:drupal "!@eq 1" \
	"id:66600163,phase:2,pass,nolog,t:none,skip:2,rev:1,severity:2,tag:'Drupal'"

SecRule ARGS_POST:form_id "@streq petition_node_form" \
	"id:66600164,chain,msg:'POL-2015-4377',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:title|ARGS_POST:menu[link_title]|ARGS_POST:body|ARGS_POST:appeal|ARGS_POST:thank_you_page "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_POST:form_id "@streq petition_signup_form_data" \
	"id:66600165,chain,msg:'POL-2015-4377',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:comment "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-8376
# CVSS: 3.5
# Publish: 2014-10-21T15:55:00
# Cross-site scripting (XSS) vulnerability in the context administration sub-panel in the Site Banner module before 7.x-4.1 for Drupal allows remote authenticated users with the "Administer contexts" Context UI module permission to inject arbitrary web script or HTML via vectors related to context settings.
SecRule TX:drupal "@eq 1" \
	"id:66600166,chain,msg:'POL-2014-8376',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS:q|REQUEST_FILENAME "@contains /structure/context/list/" \
	"chain,t:none,t:normalizePath,t:lowercase,t:urlDecodeUni"
SecRule ARGS_POST:reactions[plugins][change_banner_text][site_banner_tag_prepend_text]|ARGS_POST:reactions[plugins][change_banner_text][site_banner_tag_delimiter_text]|ARGS_POST:reactions[plugins][change_banner_text][site_banner_tag_append_text] "@contains <" \
	"t:none,t:lowercase,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-9740
# CVSS: 2.1
# Publish: 2015-07-06T15:59:00
# Cross-site scripting (XSS) vulnerability in the Rules Link module 7.x-1.x before 7.x-1.1 for Drupal allows remote authenticated users with the "administer rules links" permission to inject arbitrary web script or HTML via unspecified vectors, which are not properly handled in the (1) question and (2) description strings in a confirmation form for a triggering Rules link.
SecRule TX:drupal "@eq 1" \
	"id:66600167,chain,msg:'POL-2014-9740',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq rules_link_form" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:question|ARGS_POST:description "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-9362
# CVSS: 3.5
# Publish: 2014-12-10T20:59:00
# Cross-site scripting (XSS) vulnerability in the path-based meta tag editing form in the Meta tags quick module 7.x-2.x before 7.x-2.8 for Drupal allows remote authenticated users with the "Edit path based meta tags" permission to inject arbitrary web script or HTML via vectors related to deleting a Path-based Metatag.
SecRule TX:drupal "@eq 1" \
	"id:66600168,chain,msg:'POL-2014-9362',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq metatags_quick_admin_path_based_edit" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:path "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-3349
# CVSS: 6.8
# Publish: 2015-04-21T16:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Htaccess module before 7.x-2.3 for Drupal allow remote attackers to hijack the authentication of administrators for requests that (1) deploy or (2) delete an .htaccess file via unspecified vectors.
SecRule TX:drupal "!@eq 1" \
	"id:66600169,phase:2,pass,nolog,t:none,skip:4,rev:1,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@endsWith admin/config/system/htaccess/deployment" \
	"id:66600170,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_htaccess=1',expirevar:'SESSION.dp_htaccess=300',t:none,t:lowercase"

SecRule &SESSION:dp_htaccess "!@eq 1" \
	"id:66600171,chain,msg:'POL-2015-3349',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx admin\/config\/system\/htaccess\/deployment\/(?:delete|download|deploy)\/\d+$" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"

SecRule ARGS_GET:q|REQUEST_FILENAME "@endsWith admin/config/system/htaccess/generate" \
	"id:66600172,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_htaccess_generate=1',expirevar:'SESSION.dp_htaccess_generate=300',t:none,t:lowercase"

SecRule ARGS_POST:form_id "@streq htaccess_generate" \
	"id:66600173,chain,msg:'POL-2015-3349',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule &SESSION:dp_htaccess_generate "!@eq 1" \
	"t:none"


# CVE: CVE-2015-3387
# CVSS: 3.5
# Publish: 2015-04-21T18:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Taxonomy Tools module before 7.x-1.4 for Drupal allow remote authenticated users to inject arbitrary web script or HTML via a (1) node or (2) taxonomy term title.
SecRule TX:drupal "@eq 1" \
	"id:66600174,chain,msg:'POL-2015-3387',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'Drupal'"
SecRule ARGS:form_id "@streq taxonomy_form_term" \
	"chain,t:none,t:lowercase"
SecRule ARGS:name "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2014-9498
# CVSS: 3.5
# Publish: 2015-01-09T18:59:00
# Cross-site scripting (XSS) vulnerability in the Webform Invitation module 7.x-1.x before 7.x-1.3 and 7.x-2.x before 7.x-2.4 for Drupal allows remote authenticated users with the Webform: Create new content, Webform: Edit own content, or Webform: Edit any content permission to inject arbitrary web script or HTML via a node title.
SecRule TX:drupal "@eq 1" \
	"id:66600175,chain,msg:'POL-2014-9498',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS:form_id "@streq webform_node_form" \
	"chain,t:none,t:lowercase"
SecRule ARGS:title "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2015-2086
# CVSS: 3.5
# Publish: 2015-02-26T15:59:00
# Cross-site scripting (XSS) vulnerability in the live preview in the Panopoly Magic module before 7.x-1.17 for Drupal allows remote authenticated users to inject arbitrary web script or HTML via a pane title.
SecRule TX:drupal "@eq 1" \
	"id:66600176,chain,msg:'POL-2015-2086',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq panels_flexible_config_item_form" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:title "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-3370
# CVSS: 6.8
# Publish: 2015-04-21T16:59:00
# Cross-site request forgery (CSRF) vulnerability in the Node Invite module before 6.x-2.5 for Drupal allows remote attackers to hijack the authentication of users with the "node_invite_can_manage_invite" permission for requests that re-enable node invitations via unspecified vectors.
SecRule TX:drupal "!@eq 1" \
	"id:66600177,phase:2,pass,nolog,t:none,skip:3,rev:1,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@pm node_invite/invite admin/settings/node_invite admin/settings/node_invite/notifications node_invite/revoke node_invite/rsvp admin/settings/node_invite/manage manage_invites" \
	"id:66600178,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,skip:2,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_node_invite=1',expirevar:'SESSION.dp_node_invite=300',t:none,t:lowercase"

SecRule ARGS_POST:form_id "@pm node_invite_send node_invite_admin_settings_form node_invite_notifications_form node_invite_revoke node_invite_rsvp" \
	"id:66600179,chain,msg:'POL-2015-3370',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@pm node_invite/invite admin/settings/node_invite admin/settings/node_invite/notifications node_invite/revoke node_invite/rsvp" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:dp_node_invite "!@eq 1" \
	"t:none"

SecRule ARGS_GET:q|REQUEST_FILENAME "@pm node_invite/reinstate node_invite/resend" \
	"id:66600180,chain,msg:'POL-2015-3370',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,rev:1,severity:2,tag:'Drupal'"
SecRule &ARGS_GET:destination "@ge 1" \
	"chain,t:none"
SecRule &SESSION:dp_node_invite "!@eq 1" \
	"t:none"


# CVE: CVE-2015-3353
# CVSS: 3.5
# Publish: 2015-04-21T16:59:00
# Cross-site scripting (XSS) vulnerability in the Field Display Label module before 7.x-1.3 for Drupal allows remote authenticated users to inject arbitrary web script or HTML via the alternate field label in content types settings.
SecRule TX:drupal "@eq 1" \
	"id:66600181,chain,msg:'POL-2015-3353',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/structure/types/manage" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:instance[display_label] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-3346
# CVSS: 7.5
# Publish: 2015-04-21T16:59:00
# SQL injection vulnerability in the WikiWiki module before 6.x-1.2 for Drupal allows remote attackers to execute arbitrary SQL commands via unspecified vectors.
SecRule TX:drupal "@eq 1" \
	"id:66600182,chain,msg:'POL-2015-3346',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@pm wikiwiki_add_form wikiwiki_edit_form" \
	"chain,t:none"
SecRule ARGS_POST:title "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-3364
# CVSS: 4.3
# Publish: 2015-04-21T16:59:00
# Cross-site scripting (XSS) vulnerability in the Content Analysis module before 6.x-1.7 for Drupal allows remote attackers to inject arbitrary web script or HTML via unspecified vectors, which are not properly handled in a log message.
SecRule TX:drupal "@eq 1" \
	"id:66600183,chain,msg:'POL-2015-3364',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@contains contentanalysis/analyze_js" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:/^ao_contentanalysis/ "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-3368
# CVSS: 3.5
# Publish: 2015-04-21T16:59:00
# Cross-site scripting (XSS) vulnerability in the administration user interface in the Classified Ads module before 6.x-3.1 and 7.x-3.x before 7.x-3.1 for Drupal allows remote authenticated users with the "administer taxonomy" permission to inject arbitrary web script or HTML via a category name.
SecRule TX:drupal "@eq 1" \
	"id:66600184,chain,msg:'POL-2015-3368',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq taxonomy_form_term" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:name "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-7980
# CVSS: 3.5
# Publish: 2014-10-08T18:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in template.php in Zen theme 7.x-3.x before 7.x-3.3 and 7.x-5.x before 7.x-5.5 for Drupal allow remote authenticated users with the "administer themes" permission to inject arbitrary web script or HTML via the skip_link_text setting and unspecified other theme settings.
SecRule TX:drupal "@eq 1" \
	"id:66600185,chain,msg:'POL-2014-7980',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS:q|REQUEST_FILENAME "@contains /appearance/settings/zen" \
	"chain,t:none,t:normalizePath,t:lowercase,t:urlDecodeUni"
SecRule ARGS_POST:var "@streq theme_zen_settings" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:zen_jump_link_target|ARGS_POST:zen_jump_link_text "@rx \"|<" \
	"t:none,t:lowercase,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-2715
# CVSS: 2.1
# Publish: 2013-03-27T21:55:00
# Cross-site scripting (XSS) vulnerability in the admin view in the Search API (search_api) module 7.x-1.x before 7.x-1.4 for Drupal allows remote authenticated users with certain permissions to inject arbitrary web script or HTML via a crafted field name.
SecRule TX:drupal "@eq 1" \
	"id:66600186,chain,msg:'POL-2013-2715',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS:form_id "@streq search_api_admin_index_workflow" \
	"chain,t:none,t:lowercase"
SecRule ARGS:/^callbacks\[search_api_alter_add_aggregation\]\[settings\]\[fields\]\[search_api_aggregation_[\d]+\]\[name\]$/ "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-8745
# CVSS: 3.5
# Publish: 2014-10-13T18:55:00
# Cross-site scripting (XSS) vulnerability in the Custom Search module 6.x-1.x before 6.x-1.13 and 7.x-1.x before 7.x-1.15 for Drupal allows remote authenticated users with the "administer taxonomy" permission to inject arbitrary web script or HTML via a taxonomy vocabulary label.
SecRule TX:drupal "@eq 1" \
	"id:66600187,chain,msg:'POL-2014-8745',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS:form_id "@streq taxonomy_form_vocabulary" \
	"chain,t:none,t:lowercase"
SecRule ARGS:name "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-4382
# CVSS: 6.8
# Publish: 2015-06-15T14:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Invoice module 6.x-1.x before 6.x-1.2 and 7.x-1.x before 7.x-1.3 for Drupal allow remote attackers to hijack the authentication of arbitrary users for requests that (1) create, (2) delete, or (3) alter invoices via unspecified vectors.
SecRule TX:drupal "!@eq 1" \
	"id:66600188,phase:2,pass,nolog,skip:8,rev:2,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@pm admin/config/system/invoice node/add/invoice invoice/save/item invoice/edit/item" \
	"id:66600189,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,skip:3,rev:2,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_invoice=1',expirevar:'SESSION.dp_invoice=300',t:none,t:lowercase"

SecRule ARGS_GET:q|REQUEST_FILENAME "@pm admin/config/system/invoice node/add/invoice invoice/save/item" \
	"id:66600190,chain,msg:'POL-2015-4382',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,rev:2,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@pm invoice_settings_form invoice_node_form" \
	"chain,t:none"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:dp_invoice "!@eq 1" \
	"t:none"

SecRule ARGS_GET:q|REQUEST_FILENAME "@pm admin/config/system/invoice node/add/invoice invoice/save/item" \
	"id:66600191,chain,msg:'POL-2015-4382',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,rev:2,severity:2,tag:'Drupal'"
SecRule &ARGS_POST:token "@ge 1" \
	"chain,t:none"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:dp_invoice "!@eq 1" \
	"t:none"

SecRule ARGS_GET:q|REQUEST_FILENAME "@contains invoice/delete/item" \
	"id:66600192,chain,msg:'POL-2015-4382',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'Drupal'"
SecRule &ARGS_GET:invoice_number "@ge 1" \
	"chain,t:none"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:dp_invoice "!@eq 1" \
	"t:none"

SecRule ARGS_GET:q|REQUEST_FILENAME "@rx node\/\d+\/delete&?|invoice\/delete\/item|node\/\d+\/edit" \
	"id:66600193,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:3,rev:2,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_invoice_dl_et=1',expirevar:'SESSION.dp_invoice_dl_et=300',t:none,t:lowercase"

SecRule ARGS_POST:form_id "@streq node_delete_confirm" \
	"id:66600194,chain,msg:'POL-2015-4382',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@contains invoice/delete/item" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:dp_invoice_dl_et "!@eq 1" \
	"t:none"

SecRule ARGS_POST:form_id "@pm invoice_settings_form invoice_node_form" \
	"id:66600195,chain,msg:'POL-2015-4382',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx node\/\d+\/edit" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:dp_invoice_dl_et "!@eq 1" \
	"t:none"

SecRule &SESSION:dp_invoice_dl_et "!@eq 1" \
	"id:66600196,chain,msg:'POL-2015-4382',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@pm admin/config/system/invoice node/add/invoice invoice/save/item" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath"
SecRule &ARGS_POST:token "@ge 1" \
	"chain,t:none"
SecRule REQUEST_METHOD "@streq post" \
	"t:none,t:lowercase"


# CVE: CVE-2015-3357
# CVSS: 3.5
# Publish: 2015-04-21T16:59:00
# Cross-site scripting (XSS) vulnerability in the Wishlist module before 6.x-2.7 and 7.x-2.x before 7.x-2.7 for Drupal allows remote authenticated users with the "access wishlists" permission to inject arbitrary web script or HTML via unspecified vectors, which are not properly handled in a log message.
SecRule TX:drupal "@eq 1" \
	"id:66600197,chain,msg:'POL-2015-3357',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq wishlist_node_form" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:log "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-3344
# CVSS: 3.5
# Publish: 2015-04-21T16:59:00
# Cross-site scripting (XSS) vulnerability in the Course module 6.x-1.x before 6.x-1.2 and 7.x-1.x before 7.x-1.4 for Drupal allows remote authenticated users to inject arbitrary web script or HTML via a node title.
SecRule TX:drupal "@eq 1" \
	"id:66600198,chain,msg:'POL-2015-3344',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule &ARGS_POST:course[outline] "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:form_id "@endsWith _node_form" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:title "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-8077
# CVSS: 3.5
# Publish: 2014-10-09T14:55:00
# Cross-site scripting (XSS) vulnerability in the NewsFlash theme 6.x-1.x before 6.x-1.7 and 7.x-1.x before 7.x-2.5 for Drupal allows remote authenticated users with the "administer themes" permission to inject arbitrary web script or HTML via vectors related to font family CSS property.
SecRule TX:drupal "@eq 1" \
	"id:66600199,chain,msg:'POL-2014-8077',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_URI "@contains appearance" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:var|ARGS_POST:form_id "@pm theme_newsflash_settings system_theme_settings" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:newsflash_customfont "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-3354
# CVSS: 5.8
# Publish: 2015-04-21T16:59:00
# Cross-site request forgery (CSRF) vulnerability in the Wishlist module before 6.x-2.7 and 7.x-2.x before 7.x-2.7 for Drupal allows remote attackers to hijack the authentication of arbitrary users for requests that delete wishlist purchase intentions via unspecified vectors.
SecRule TX:drupal "@eq 1" \
	"id:66600200,chain,msg:'POL-2015-3354',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx wishlist\/item\/\d+\/return" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:dp_node "!@eq 1" \
	"t:none"


# CVE: CVE-2015-1567
# CVSS: 4.3
# Publish: 2015-02-09T17:59:00
# Cross-site scripting (XSS) vulnerability in the admin page in the GD Infinite Scroll module before 7.x-1.4 for Drupal allows remote authenticated users with the "edit gd infinite scroll settings" permission to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:drupal "@eq 1" \
	"id:66600201,chain,msg:'POL-2015-1567',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq gd_infinite_scroll_form" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/config/user-interface/gd-infinite-scroll" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:url "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-1621
# CVSS: 3.5
# Publish: 2015-02-17T15:59:00
# Cross-site scripting (XSS) vulnerability in the Webform prepopulate block module before 7.x-3.1 for Drupal allows remote authenticated users to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:drupal "@eq 1" \
	"id:66600202,chain,msg:'POL-2015-1621',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq webform_node_form" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:title "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-4359
# CVSS: 3.5
# Publish: 2015-06-15T14:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Registration codes module before 6.x-1.6, 6.x-2.x before 6.x-2.8, and 7.x-1.x before 7.x-1.2 for Drupal allow remote authenticated users with permission to create or edit taxonomy terms or nodes to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:drupal "@eq 1" \
	"id:66600203,chain,msg:'POL-2015-4359',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS:q|REQUEST_FILENAME "@contains /config/people/regcode/" \
	"chain,t:none,t:normalizePath,t:lowercase,t:urlDecodeUni"
SecRule ARGS_POST:form_id "@pm regcode_admin_settings regcode_voucher_admin_form regcode_dynamic_settings" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:regcode_field_title|ARGS_POST:regcode_field_description|ARGS_POST:regcode_voucher_fieldset_title|ARGS_POST:regcode_voucher_field_description|ARGS_POST:name "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-5488
# CVSS: 2.1
# Publish: 2015-08-18T17:59:00
# Cross-site scripting (XSS) vulnerability in the MailChimp Signup submodule in the MailChimp module 7.x-3.x before 7.x-3.3 for Drupal allows remote authenticated users with the "administer mailchimp" permission to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:drupal "@eq 1" \
	"id:66600204,chain,msg:'POL-2015-5488',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq mailchimp_signup_form" \
	"chain,t:none"
SecRule ARGS_POST:title|ARGS_POST:description|ARGS_POST:settings[confirmation_message] "@contains <" \
	"chain,t:none,t:urlDecodeUni"
SecRule ARGS:q|REQUEST_FILENAME "@contains mailchimp/signup" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2015-5507
# CVSS: 4.3
# Publish: 2015-08-18T18:00:00
# Cross-site scripting (XSS) vulnerability in the Inline Entity Form module 7.x-1.x before 7.x-1.6 for Drupal allows remote authenticated users with permission to create or edit fields to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:drupal "@eq 1" \
	"id:66600205,chain,msg:'POL-2015-5507',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:instance[description] "@contains <" \
	"chain,t:none,t:urlDecodeUni"
SecRule ARGS_POST:form_id "@contains field_ui_field_edit_form" \
	"t:none"


# CVE: CVE-2015-5497
# CVSS: 3.5
# Publish: 2015-08-18T17:59:00
# Cross-site scripting (XSS) vulnerability in the Web Links module 6.x-2.x before 6.x-2.6 and 7.x-1.x before 7.x-1.0 for Drupal allows remote authenticated users with certain permissions to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:drupal "@eq 1" \
	"id:66600206,chain,msg:'POL-2015-5497',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq weblinks_node_form" \
	"chain,t:none"
SecRule ARGS_POST:title|ARGS_POST:/body\[und\]\[[0-9]+\]\[value\]/ "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-5513
# CVSS: 2.1
# Publish: 2015-08-18T18:00:00
# Cross-site scripting (XSS) vulnerability in the Shibboleth authentication module 6.x-4.x before 6.x-4.2 and 7.x-4.x before 7.x-4.2 for Drupal allows remote authenticated users with the "Administer blocks" permission to inject arbitrary web script or HTML via unspecified vectors related to a login link.
SecRule TX:drupal "@eq 1" \
	"id:66600207,chain,msg:'POL-2015-5513',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:shib_auth_link_text "@contains <" \
	"chain,t:none,t:urlDecodeUni"
SecRule ARGS_POST:form_id "@within block_admin_configure shib_auth_admin_general" \
	"chain,t:none"
SecRule ARGS:q|REQUEST_FILENAME "@contains shib_auth" \
	"t:none"


# CVE: CVE-2014-8079
# CVSS: 4
# Publish: 2014-10-09T14:55:00
# Cross-site scripting (XSS) vulnerability in the MAYO theme 7.x-1.x before 7.x-1.3 for Drupal allows remote authenticated users with the "administer themes" permission to inject arbitrary web script or HTML via vectors related to header background setting.
SecRule TX:drupal "@eq 1" \
	"id:66600208,chain,msg:'POL-2014-8079',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS:q|REQUEST_FILENAME "@contains /appearance/settings/mayo" \
	"chain,t:none,t:normalizePath,t:lowercase,t:urlDecodeUni"
SecRule ARGS_POST:form_id "@streq system_theme_settings" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:header_bg_file "@contains \"" \
	"t:none,t:lowercase,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-3369
# CVSS: 3.5
# Publish: 2015-04-21T16:59:00
# Cross-site scripting (XSS) vulnerability in the Taxonews module before 6.x-1.2 and 7.x-1.x before 7.x-1.1 for Drupal allows remote authenticated users with the "administer taxonomy" permission to inject arbitrary web script or HTML via a term name in a block.
SecRule TX:drupal "@eq 1" \
	"id:66600209,chain,msg:'POL-2015-3369',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS:q|REQUEST_FILENAME "@contains /structure/block/manage/taxonews/" \
	"chain,t:none,t:normalizePath,t:lowercase,t:urlDecodeUni"
SecRule ARGS_POST:taxonews_empty_messages "@contains <" \
	"t:none,t:lowercase,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-4367
# CVSS: 3.5
# Publish: 2015-06-15T14:59:00
# Cross-site scripting (XSS) vulnerability in the Simple Subscription module before 6.x-1.1 and 7.x-1.x before 7.x-1.1 for Drupal allows remote authenticated users with the "administer blocks" permission to inject arbitrary web script or HTML via vectors related to block content.
SecRule TX:drupal "@eq 1" \
	"id:66600210,chain,msg:'POL-2015-4367',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS:q|REQUEST_FILENAME "@contains /block/manage/simple_subscription/subscribe/" \
	"chain,t:none,t:normalizePath,t:lowercase,t:urlDecodeUni"
SecRule ARGS_POST:simple_subscription_form_header|ARGS_POST:simple_subscription_form_footer "@contains <" \
	"t:none,t:lowercase,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4303
# CVSS: 2.1
# Publish: 2014-06-18T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Touch theme 7.x-1.x before 7.x-1.9 for Drupal allow remote authenticated users with the Administer themes permission to inject arbitrary web script or HTML via vectors related to the (1) Twitter and (2) Facebook username settings.
SecRule TX:drupal "@eq 1" \
	"id:66600211,chain,msg:'POL-2014-4303',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS:q|REQUEST_FILENAME "@contains /appearance/settings/touch" \
	"chain,t:none,t:normalizePath,t:lowercase,t:urlDecodeUni"
SecRule ARGS_POST:form_id "@streq system_theme_settings" \
	"chain,t:none"
SecRule ARGS_POST:twitter_username|ARGS_POST:facebook_username "@contains \"" \
	"t:none,t:lowercase,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-5510
# CVSS: 5.8
# Publish: 2015-08-18T18:00:00
# Open redirect vulnerability in the Content Construction Kit (CCK) 6.x-2.x before 6.x-2.10 for Drupal allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via the destinations parameter, related to administration pages. <a href="http://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a>
SecRule &TX:drupal "@ge 1" \
	"id:66600212,chain,msg:'POL-2015-5510',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS:q|REQUEST_FILENAME "@contains /content/node-type/" \
	"chain,t:none,t:normalizePath,t:lowercase,t:urlDecodeUni"
SecRule ARGS:/^destinations\[\d+\]/ "@contains //" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-5500
# CVSS: 3.5
# Publish: 2015-08-18T18:00:00
# Cross-site scripting (XSS) vulnerability in the Navigate module for Drupal allows remote authenticated users with certain permissions to inject arbitrary web script or HTML via unspecified vectors.
SecRule &TX:drupal "@ge 1" \
	"id:66600213,chain,msg:'POL-2015-5500',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_FILENAME "@contains /navigate/process" \
	"chain,t:none,t:normalizePath,t:lowercase,t:urlDecodeUni"
SecRule ARGS_POST:module|ARGS_POST:name "@pm navigate_favorites navigate_custom set-export set-import" \
	"chain,t:none"
SecRule ARGS_POST:name|ARGS_POST:content|ARGS_POST:value "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-5494
# CVSS: 3.5
# Publish: 2015-08-18T17:59:00
# Cross-site scripting (XSS) vulnerability in the Webform Matrix Component module 7.x-4.x before 7.x-4.13 for Drupal allows remote authenticated users with certain permissions to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:drupal "@eq 1" \
	"id:66600214,chain,msg:'POL-2015-5494',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS:q|REQUEST_FILENAME "@contains /webform/components/" \
	"chain,t:none,t:normalizePath,t:lowercase,t:urlDecodeUni"
SecRule ARGS_POST:/extra\[element\]\[element-\d+\]\[label_name\]/ "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-3371
# CVSS: 5.8
# Publish: 2015-04-21T16:59:00
# Open redirect vulnerability in the Node Invite module before 6.x-2.5 for Drupal allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via the destination parameter. <a href="http://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a>
SecRule TX:drupal "@eq 1" \
	"id:66600215,chain,msg:'POL-2015-3371',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx node_invite\/(?:revoke|resend|rsvp)\/\d" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_GET:destination "!@pm admin/settings/node_invite/manage node/4/manage_invites" \
	"t:none,t:urlDecodeUni,t:normalizePath"

SecRule TX:drupal "@eq 1" \
	"id:66600216,chain,msg:'POL-2015-3371',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/settings/perfecto/delete" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_GET:destination "!@streq admin/settings/perfecto" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2015-5489
# CVSS: 3.5
# Publish: 2015-08-18T17:59:00
# Cross-site scripting (XSS) vulnerability in the Smart Trim module 7.x-1.x before 7.x-1.5 for Drupal allows remote authenticated users with certain permissions to inject arbitrary web script or HTML via vectors involving the field settings form.
SecRule TX:drupal "@eq 1" \
	"id:66600217,chain,msg:'POL-2015-5489',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq field_ui_display_overview_form" \
	"chain,t:none"
SecRule ARGS:q|REQUEST_FILENAME "@contains system/ajax" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:'/^fields.+(?:trim_suffix|more_text)/' "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-5514
# CVSS: 2.6
# Publish: 2015-08-18T18:00:00
# Cross-site scripting (XSS) vulnerability in the Migrate module 7.x-2.x before 7.x-2.8 for Drupal, when the migrate_ui submodule is enabled, allows user-assisted remote attackers to inject arbitrary web script or HTML via a destination field label.
SecRule TX:drupal "@eq 1" \
	"id:66600218,chain,msg:'POL-2015-5514',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS:q|REQUEST_FILENAME "@contains /content/migrate/groups/" \
	"chain,t:none,t:normalizePath,t:lowercase,t:urlDecodeUni"
SecRule ARGS_POST:field_mappings[name][default_value]|ARGS_POST:field_mappings[description][default_value]|ARGS_POST:field_mappings[parent][default_value]|ARGS_POST:field_mappings[parent_name][default_value]|ARGS_POST:field_mappings[format][default_value]|ARGS_POST:field_mappings[weight][default_value]|ARGS_POST:field_mappings[path][default_value] "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-8317
# CVSS: 3.5
# Publish: 2014-10-17T14:55:00
# Cross-site scripting (XSS) vulnerability in the Webform Validation module 6.x-1.x before 6.x-1.6 and 7.x-1.x before 7.x-1.4 for Drupal allows remote authenticated users with certain permissions to inject arbitrary web script or HTML via a component name text.
SecRule TX:drupal "@eq 1" \
	"id:66600219,chain,msg:'POL-2014-8317',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'Drupal'"
SecRule ARGS:q|REQUEST_URI "@pm webform components" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:form_id "@pm webform_components_form webform_component_edit_form" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:name|ARGS_POST:add[name] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-4379
# CVSS: 6.8
# Publish: 2015-06-15T14:59:00
# Cross-site request forgery (CSRF) vulnerability in the Webform Multiple File Upload module 6.x-1.x before 6.x-1.3 and 7.x-1.x before 7.x-1.3 for Drupal allows remote attackers to hijack the authentication of certain users for requests that delete files via unspecified vectors.
SecRule TX:drupal "!@eq 1" \
	"id:66600220,phase:2,pass,nolog,skip:2,rev:1,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@rx node\/\d+\/submission\/\d+\/(multifile_)?delete" \
	"id:66600221,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_webform_mul=1',expirevar:'SESSION.dp_webform_mul=300',t:none,t:lowercase"

SecRule ARGS_POST:form_id "@pm webform_multifile_delete_form webform_submission_delete_form" \
	"id:66600222,chain,msg:'POL-2015-4379',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx node\/\d+\/submission\/\d+\/(multifile_)?delete" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule &SESSION:dp_webform_mul "!@eq 1" \
	"t:none"


# CVE: CVE-2014-8319
# CVSS: 3.5
# Publish: 2014-10-17T14:55:00
# Cross-site scripting (XSS) vulnerability in the easy_social_admin_summary function in the Easy Social module 7.x-2.x before 7.x-2.11 for Drupal allows remote authenticated users with certain permissions to inject arbitrary web script or HTML via a block title.
SecRule TX:drupal "@eq 1" \
	"id:66600223,chain,msg:'POL-2014-8319',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@contains easy_social" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:/easy_social_block_[\d]_title/ "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-1568
# CVSS: 6.8
# Publish: 2015-02-09T17:59:00
# Cross-site request forgery (CSRF) vulnerability in the GD Infinite Scroll module before 7.x-1.4 for Drupal allows remote attackers to hijack the authentication of users with the "edit gd infinite scroll settings" permission for requests that delete settings via unspecified vectors.
SecRule TX:drupal "!@eq 1" \
	"id:66600224,phase:2,pass,nolog,skip:4,rev:1,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/config/user-interface/gd-infinite-scroll" \
	"id:66600225,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_gd_infinite=1',expirevar:'SESSION.dp_gd_infinite=300',t:none,t:lowercase"

SecRule ARGS_POST:form_id "@streq gd_infinite_scroll_form" \
	"id:66600226,chain,msg:'POL-2015-1568',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/config/user-interface/gd-infinite-scroll" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule &SESSION:dp_gd_infinite "!@eq 1" \
	"t:none"

SecRule ARGS_GET:q|REQUEST_FILENAME "@endsWith admin/config/user-interface/gd-infinite-scroll" \
	"id:66600227,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_gd_infinite_del=1',expirevar:'SESSION.dp_gd_infinite_del=300',t:none,t:lowercase"

SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/config/user-interface/gd-infinite-scroll/delete" \
	"id:66600228,chain,msg:'POL-2015-1568',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:dp_gd_infinite_del "!@eq 1" \
	"t:none"


# CVE: CVE-2015-4386
# CVSS: 4.3
# Publish: 2015-06-15T14:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in unspecified administration pages in the EntityBulkDelete module 7.x-1.0 for Drupal allow remote attackers to inject arbitrary web script or HTML via unknown vectors involving creating or editing (1) comments, (2) taxonomy terms, or (3) nodes.
SecRule &TX:drupal "@ge 1" \
	"id:66600229,chain,msg:'POL-2015-4386',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|ARGS_GET:destination|REQUEST_FILENAME "@contains admin/structure/taxonomy/tags" \
	"chain,t:none,t:urlDecodeUni,t:lowercase,t:normalizePath"
SecRule ARGS_POST:form_id "@streq taxonomy_form_term" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:name "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule TX:drupal "@eq 1" \
	"id:66600230,chain,msg:'POL-2015-4386',phase:2,deny,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|ARGS_GET:destination|REQUEST_FILENAME "@pm node/add/article node node/add/page" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath"
SecRule ARGS_POST:form_id "@pm page_node_form article_node_form" \
	"chain,t:none"
SecRule ARGS_POST:title|ARGS_POST:field_tags[und] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule TX:drupal "@eq 1" \
	"id:66600231,chain,msg:'POL-2015-4386',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq comment_node_article_form" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx comment\/\d+\/edit|comment\/reply\/\d+" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:subject "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-4381
# CVSS: 3.5
# Publish: 2015-06-15T14:59:00
# Cross-site scripting (XSS) vulnerability in the Invoice module 6.x-1.x before 6.x-1.2 and 7.x-1.x before 7.x-1.3 for Drupal allows remote authenticated users with the "Administer own invoices" permission to inject arbitrary web script or HTML via unspecified vectors involving nodes of the "Invoice" content type.
SecRule &TX:drupal "@ge 1" \
	"id:66600232,chain,msg:'POL-2015-4381',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/config/system/invoice" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:form_id "@streq invoice_settings_form" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:default_supplier_company_name|ARGS_POST:default_supplier_coc_number|ARGS_POST:default_supplier_vat_number|ARGS_POST:supplier_company_name|ARGS_POST:supplier_coc_number|ARGS_POST:supplier_vat_number "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-5495
# CVSS: 2.1
# Publish: 2015-08-18T17:59:00
# Cross-site scripting (XSS) vulnerability in the Mobile sliding menu module 7.x-2.x before 7.x-2.1 for Drupal allows remote authenticated users with the "administer menu" permission to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:drupal "@eq 1" \
	"id:66600233,chain,msg:'POL-2015-5495',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_URI|REQUEST_FILENAME|ARGS:q "@contains /admin/structure/menu/" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS:link_title "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-3187
# CVSS: 7.5
# Publish: 2016-04-08T14:59:00
# The Prepopulate module 7.x-2.x before 7.x-2.1 for Drupal allows remote attackers to modify the REQUEST superglobal array, and consequently have unspecified impact, via a base64-encoded pp parameter.
SecRule ARGS:pp "@contains =" \
	"id:66600234,chain,msg:'POL-2016-3187',phase:2,deny,status:403,setvar:'TX.pp=%{ARGS:pp}',setvar:'TX.drupal_pp=%{MATCHED_VAR}',log,t:none,t:urlDecodeUni,t:base64DecodeExt,rev:2,severity:2,tag:'Drupal'"
SecRule TX:drupal_pp "!@streq %{ARGS:pp}" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-7307
# CVSS: 4.3
# Publish: 2015-09-21T19:59:00
# Cross-site scripting (XSS) vulnerability in the CMS Updater module 7.x-1.x before 7.x-1.3 for Drupal allows remote attackers to inject arbitrary web script or HTML via unspecified vectors involving the configuration page.
SecRule ARGS:q|REQUEST_FILENAME "@contains cms-updater" \
	"id:66600235,chain,msg:'POL-2015-7307',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'Drupal'"
SecRule ARGS_GET:cmsu_payment_url "@rx \"" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_COOKIES_NAMES "@rx ^sess[0-9a-f]{32}$" \
	"t:none,t:lowercase"


# CVE: CVE-2015-4362
# CVSS: 6.8
# Publish: 2015-06-15T14:59:00
# Cross-site request forgery (CSRF) vulnerability in tracking_code.admin.inc in the Tracking Code module 7.x-1.x before 7.x-1.6 for Drupal allows remote attackers to hijack the authentication of administrators for requests that disable tracking codes via unspecified vectors.
SecRule TX:drupal "!@eq 1" \
	"id:66600236,phase:2,pass,nolog,skip:3,rev:1,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/structure/tracking_code" \
	"id:66600237,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,skip:2,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_tracking_code=1',expirevar:'SESSION.dp_tracking_code=300',t:none,t:lowercase"

SecRule ARGS_POST:form_id "@streq tracking_code_edit_form" \
	"id:66600238,chain,msg:'POL-2015-4362',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/structure/tracking_code" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule &SESSION:dp_tracking_code "!@eq 1" \
	"t:none"

SecRule ARGS_POST:ajax_html_ids[] "@streq tracking-code-overview-form" \
	"id:66600239,chain,msg:'POL-2015-4362',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/structure/tracking_code" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule &SESSION:dp_tracking_code "!@eq 1" \
	"t:none"


# CVE: CVE-2015-6754
# CVSS: 2.1
# Publish: 2015-08-31T19:59:00
# Cross-site scripting (XSS) vulnerability in the administration interface in the Path Breadcrumbs module 7.x-3.x before 7.x-3.3 for Drupal allows remote authenticated users with the "Administer Path Breadcrumbs" permission to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:drupal "@eq 1" \
	"id:66600240,chain,msg:'POL-2015-6754',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@within path_breadcrumbs_ui_edit_form path_breadcrumbs_ui_add_form" \
	"chain,t:none"
SecRule ARGS_POST:name "@contains <" \
	"chain,t:none,t:urlDecodeUni"
SecRule ARGS:q|REQUEST_FILENAME "@contains system/ajax" \
	"t:none,t:urlDecodeUni,t:normalizePath"


# CVE: CVE-2015-6751
# CVSS: 3.5
# Publish: 2015-08-31T18:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Time Tracker module 7.x-1.x before 7.x-1.4 for Drupal allow remote authenticated users with certain permissions to inject arbitrary web script or HTML via a (1) note added to a time entry or an (2) activity used to categorize time tracker entries.
SecRule ARGS_POST:form_id "@within time_tracker_activity_table_form time_tracker_time_entry_form" \
	"id:66600241,chain,msg:'POL-2015-6751',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:note|ARGS_POST:/activities\[\d+\]\[name\]/|ARGS_POST:add_new_activity[new_activity_name] "@contains <" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_COOKIES_NAMES "@rx ^sess[0-9a-f]{32}$" \
	"t:none,t:lowercase"


# CVE: CVE-2015-6807
# CVSS: 2.1
# Publish: 2015-09-04T15:59:00
# Cross-site scripting (XSS) vulnerability in the Mass Contact module 6.x-1.x before 6.x-1.6 and 7.x-1.x before 7.x-1.1 for Drupal allows remote authenticated users with the "administer mass contact" permission to inject arbitrary web script or HTML via a category label.
SecRule ARGS:q|REQUEST_FILENAME "@contains mass_contact" \
	"id:66600242,chain,msg:'POL-2015-6807',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq mass_contact_admin_edit" \
	"chain,t:none"
SecRule ARGS_POST_NAMES "@contains recipients[mass_contact_role]" \
	"chain,t:none,t:urlDecodeUni"
SecRule ARGS_POST:category "@contains <" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_COOKIES_NAMES "@rx ^sess[0-9a-f]{32}$" \
	"t:none,t:lowercase"


# CVE: CVE-2016-3167
# CVSS: 6.4
# Publish: 2016-04-12T15:59:00
# Open redirect vulnerability in the drupal_goto function in Drupal 6.x before 6.38, when used with PHP before 5.4.7, allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via a double-encoded URL in the "destination" parameter. <a href="http://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a>
SecRule ARGS:destination|ARGS:edit[destination] "@contains //" \
	"id:66600243,chain,msg:'POL-2016-3167',phase:3,deny,status:403,log,t:none,t:urlDecodeUni,rev:3,severity:2,tag:'Drupal'"
SecRule RESPONSE_HEADERS:Set-Cookie "@rx ^sess[0-9a-f]{32}\=[0-9a-z]{26}\;" \
	"t:none,t:lowercase"


# CVE: CVE-2015-4396
# CVSS: 5.1
# Publish: 2015-06-15T14:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Keyword Research module 6.x-1.x before 6.x-1.2 for Drupal allow remote attackers to hijack the authentication of users with the "kwresearch admin site keywords" permission for requests that (1) create, (2) delete, or (3) set priorities to keywords via unspecified vectors.
SecRule TX:drupal "!@eq 1" \
	"id:66600244,phase:2,pass,nolog,skip:3,rev:1,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/content/kwresearch/keyword_list" \
	"id:66600245,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:2,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_kwresearch=1',expirevar:'SESSION.dp_kwresearch=300',t:none,t:lowercase"

SecRule ARGS_POST:form_id "@streq kwresearch_site_keywords_edit_form" \
	"id:66600246,chain,msg:'POL-2015-4396',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/content/kwresearch/keyword_list/edit" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule &SESSION:dp_kwresearch "!@eq 1" \
	"t:none"

SecRule ARGS_POST:form "@streq admin_keyword_list" \
	"id:66600247,chain,msg:'POL-2015-4396',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'Drupal'"
SecRule &ARGS_POST:kwresearch_keyword "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:q|REQUEST_FILENAME "@pm toggle_site_keyword_js delete_site_keyword_js" \
	"chain,t:none"
SecRule &SESSION:dp_kwresearch "!@eq 1" \
	"t:none"


# CVE: CVE-2015-5487
# CVSS: 4.3
# Publish: 2015-08-18T17:59:00
# Cross-site scripting (XSS) vulnerability in the Camtasia Relay module 6.x-2.x before 6.x-3.2 and 7.x-2.x before 7.x-1.3 for Drupal allows remote authenticated users with the "view meta information" permission to inject arbitrary web script or HTML via unspecified vectors related to the meta access tab.
SecRule TX:drupal "@eq 1" \
	"id:66600248,chain,msg:'POL-2015-5487',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@streq camtasia_relay_node_form" \
	"chain,t:none"
SecRule ARGS_POST:title|ARGS_POST:'/^camtasia_relay_(?:date|profile|duration|presenter_(?:email|name)|recorder_(?:email|name))/' "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2016-3144
# CVSS: 3.5
# Publish: 2016-04-15T15:59:00
# Cross-site scripting (XSS) vulnerability in the Block Class module 7.x-2.x before 7.x-2.2 for Drupal allows remote authenticated users with the "Administer block classes" permission to inject arbitrary web script or HTML via a class name.
SecRule &TX:drupal "@ge 1" \
	"id:66600249,chain,msg:'POL-2016-3144',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_POST:form_id "@within block_add_block_form block_admin_configure" \
	"chain,t:none"
SecRule ARGS:q|REQUEST_FILENAME "@contains /structure/block/" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:css_class "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-5508
# CVSS: 5.1
# Publish: 2015-08-18T18:00:00
# Cross-site request forgery (CSRF) vulnerability in the XC NCIP Provider module in the eXtensible Catalog (XC) Drupal Toolkit allows remote attackers to hijack the authentication of users with the "administer ncip providers" permission for requests that alter NCIP providers via a crafted request.
SecRule TX:drupal "!@eq 1" \
	"id:66600250,phase:2,pass,nolog,skip:2,rev:1,severity:2,tag:'Drupal'"

SecRule ARGS_GET:q|REQUEST_FILENAME "@contains admin/xc/ncip/provider" \
	"id:66600251,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:1,rev:1,severity:2,tag:'Drupal'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.dp_xc_ncip=1',expirevar:'SESSION.dp_xc_ncip=300',t:none,t:lowercase"

SecRule ARGS_POST:form_id "@pm xc_ncip_provider_form xc_ncip_provider_delete_form" \
	"id:66600252,chain,msg:'POL-2015-5508',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Drupal'"
SecRule ARGS_GET:q|REQUEST_FILENAME "@rx admin\/xc\/ncip\/provider\/(?:add|\d\/(?:edit|delete))" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule &SESSION:dp_xc_ncip "!@eq 1" \
	"t:none"


# CVE: CVE-2018-7602
# CVSS: 7.5
# Publish: 2018-07-19T17:29:00
# A remote code execution vulnerability exists within multiple subsystems of Drupal 7.x and 8.x. This potentially allows attackers to exploit multiple attack vectors on a Drupal site, which could result in the site being compromised. This vulnerability is related to Drupal core - Highly critical - Remote Code Execution - SA-CORE-2018-002. Both SA-CORE-2018-002 and this vulnerability are being exploited in the wild.
###################################################################
# VT-2018-02424
# Drupal < 7.58 - Drupalgeddon3 (Authenticated) Remote Code Execution
# Deny string #type in request header 

SecRule ARGS_NAMES|REQUEST_COOKIES_NAMES "@rx (?:^#)|(?:\[#)" \
	"id:66600253,\
	msg:'POL-2018-7602',\
	phase:2,\
	t:none,\
	t:urlDecodeUni,\
	deny,\
	severity:2,\
	log,\
	status:403,\
	rev:2,\
	tag:'Drupal'"

# CVE: CVE-2018-9205
# CVSS: 5
# Publish: 2018-04-04T15:29:00
# Vulnerability in avatar_uploader v7.x-1.0-beta8 , The code in view.php doesn't verify users or sanitize the file path.
###################################################################
# VT-2018-02423
# Drupal avatar_uploader v7.x-1.0-beta8 - Arbitrary File Disclosure
# Deny uri /sites/all/modules/avatar_uploader/lib/demo/view.php?file=

SecRule REQUEST_FILENAME "@contains avatar_uploader/lib/demo/view.php" \
	"deny,\
	id:66600254,\
	rev:1,\
	severity:2,\
	log,\
	tag:'Drupal',\
	t:none,\
	t:normalizePathWin,\
	t:urlDecodeUni,\
	msg:'POL-2018-9205'"

# CVE: CVE-2018-7600
# CVSS: 7.5
# Publish: 2018-03-29T07:29:00
# Drupal before 7.58, 8.x before 8.3.9, 8.4.x before 8.4.6, and 8.5.x before 8.5.1 allows remote attackers to execute arbitrary code because of an issue affecting multiple subsystems with default or common module configurations.
###################################################################
# VT-2018-02422
# Drupal < 8.3.9 / < 8.4.6 / < 8.5.1 - 'Drupalgeddon2' Remote Code Execution
# Deny string #type in request header 

SecRule ARGS_NAMES|REQUEST_COOKIES_NAMES "@rx (?:^#)|(?:\[#)" \
	"id:66600255,\
	msg:'POL-2018-7600',\
	phase:2,\
	t:none,\
	t:urlDecodeUni,\
	deny,\
	severity:2,\
	log,\
	status:403,\
	rev:2,\
	tag:'Drupal'"

# CVE: CVE-2014-9016
# CVSS: 5
# Publish: 2014-11-24T15:59:00
# The password hashing API in Drupal 7.x before 7.34 and the Secure Password Hashes (aka phpass) module 6.x-2.x before 6.x-2.1 for Drupal allows remote attackers to cause a denial of service (CPU and memory consumption) via a crafted request.
###################################################################
# VT-2018-02417
# Drupal < 7.34 - Denial of Service
SecRule ARGS:q "@streq user" \
	"id:66600256,\
	chain,\
	phase:2,\
	deny,\
	status:403,\
	log,\
	t:none,\
	t:urlDecodeUni,\
	t:trim,\
	t:lowercase,\
	rev:1,\
	severity:2,\
	tag:'Drupal',\
	msg:'POL-2014-9016'"
SecRule ARGS:pass "@ge 500" \
	"t:none,\
	t:trim,\
	t:length"

# CVE: CVE-2014-3704
# CVSS: 7.5
# Publish: 2014-10-16T00:55:00
# The expandArguments function in the database abstraction API in Drupal core 7.x before 7.32 does not properly construct prepared statements, which allows remote attackers to conduct SQL injection attacks via an array containing crafted keys.
###################################################################
# VT-2018-02416
# Drupal HTTP Parameter Key/Value SQL Injection
# Deny sql syntax
SecRule ARGS:q "node" \
    "id:66600257,\
    chain,\
    deny,\
    phase:2,\
    rev:1,\
    status:403,\
    severity:2,\
    log,\
    tag:'Drupal',\
    t:none,\
    t:lowercase,\
    t:trim,\
    msg:'POL-2014-3704'"
SecRule ARGS:destination "node" \
    "chain,\
    t:none,\
    t:lowercase,\
    t:trim"
SecRule ARGS_NAMES|REQUEST_COOKIES_NAMES "[^a-z0-9_\-\[\]\.]" \
    "t:none,\
    t:lowercase,\
    t:trim,\
    t:urlDecode,\
    t:urlDecodeUni"

# CVE: CVE-2012-4554
# CVSS: 5
# Publish: 2012-11-11T13:00:00
# The OpenID module in Drupal 7.x before 7.16 allows remote OpenID servers to read arbitrary files via a crafted DOCTYPE declaration in an XRDS file.
###################################################################
# VT-2018-02395
# Drupal OpenID External Entity Injection
# Set whitelist URL for openid [localhost,127.0.0.1]
SecRule ARGS:q "@streq node" \
	"id:66600258,\
	deny,\
    chain,\
	phase:2,\
    rev:1,\
    status:403,\
    severity:2,\
    log,\
    tag:'Drupal',\
    t:none,t:urlDecode,t:lowercase,\
    msg:'POL-2012-4554'"
SecRule ARGS:destination "@streq node" \
    "chain,\
    t:none,t:urlDecode,t:lowercase"
SecRule ARGS:openid_identifier "!@rx (^https?:\/\/)?(localhost\.com|127.0.0.1)$" \
    "t:none,t:urlDecode,t:lowercase"

# CVE: CVE-2015-6513
# CVSS: 7.5
# Publish: 2015-08-18T15:59:00
# Multiple SQL injection vulnerabilities in the J2Store (com_j2store) extension before 3.1.7 for Joomla! allow remote attackers to execute arbitrary SQL commands via the (1) sortby or (2) manufacturer_ids[] parameter to index.php.
SecRule ARGS_POST:option "@streq com_j2store" \
	"id:66600259,chain,msg:'POL-2015-6513',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule ARGS_POST:view "@streq products" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:sortby "@rx \W" \
	"t:none"

SecRule ARGS_POST:option "@streq com_j2store" \
	"id:66600260,chain,msg:'POL-2015-6513',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule ARGS_POST:view "@streq products" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:/manufacturer_id(?:s\[\d*])?/ "@rx \D" \
	"t:none"


# CVE: CVE-2015-6919
# CVSS: 4.3
# Publish: 2015-09-11T20:59:00
# Cross-site scripting (XSS) vulnerability in the googleSearch (CSE) (com_googlesearch_cse) component 3.0.2 for Joomla! allows remote attackers to inject arbitrary web script or HTML via the q parameter to index.php.
SecRule ARGS:option "@streq com_googlesearch_cse" \
	"id:66600261,chain,msg:'POL-2015-6919',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule ARGS:q "@contains \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4960
# CVSS: 7.5
# Publish: 2014-07-21T14:55:00
# Multiple SQL injection vulnerabilities in models\gallery.php in Youtube Gallery (com_youtubegallery) component 4.x through 4.1.7, and possibly 3.x, for Joomla! allow remote attackers to execute arbitrary SQL commands via the (1) listid or (2) themeid parameter to index.php.
SecRule REQUEST_FILENAME "@endsWith administrator/index.php" \
	"id:66600262,chain,msg:'POL-2014-4960',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:removeWhitespace,t:lowercase,multiMatch,rev:1,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule ARGS:option "@streq com_youtubegallery" \
	"chain,t:none,t:urlDecodeUni,t:compressWhitespace,t:trim,multiMatch"
SecRule ARGS:listid|ARGS:themeid "@rx \D" \
	"t:none,t:urlDecodeUni,t:compressWhitespace,t:trim,multiMatch"


# CVE: CVE-2013-5952
# CVSS: 4.3
# Publish: 2014-03-19T14:17:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Freichat (com_freichat) component, possibly 9.4 and earlier, for Joomla! allow remote attackers to inject arbitrary web script or HTML via the (1) id or (2) xhash parameter to client/chat.php or (3) toname parameter to client/plugins/upload/upload.php.
SecRule ARGS:id|ARGS:xhash "@rx \"" \
	"id:66600263,chain,msg:'POL-2013-5952',deny,status:403,log,t:none,t:urlDecodeUni,rev:2,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule REQUEST_FILENAME "/client/chat\.php" \
	"t:none,t:lowercase,t:urlDecodeUni"

SecRule ARGS_POST:toname "<" \
	"id:66600264,chain,msg:'POL-2013-5952',deny,status:403,log,t:none,t:urlDecodeUni,rev:2,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule REQUEST_FILENAME "/client/plugins/upload/upload\.php" \
	"t:none,t:lowercase,t:urlDecodeUni"


# CVE: CVE-2013-5955
# CVSS: 4.3
# Publish: 2014-03-19T14:17:00
# Cross-site scripting (XSS) vulnerability in manage.php in the PBBooking (com_pbbooking) component 2.4 for Joomla! allows remote attackers to inject arbitrary web script or HTML via the an arbitrary parameter in an edit action to administrator/index.php.
SecRule REQUEST_URI "administrator/index\.php" \
	"id:66600265,chain,msg:'POL-2013-5955',deny,status:403,log,t:none,t:urlDecodeUni,multiMatch,rev:1,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule ARGS:option "com_pbbooking" \
	"chain"
SecRule ARGS:controller "manage" \
	"chain"
SecRule ARGS:task "create" \
	"chain"
SecRule ARGS:cal_id|ARGS:email|ARGS:firstname|ARGS:lastname|ARGS:mobile|ARGS:paletteDefault|ARGS:treatment_id "<" "


# CVE: CVE-2016-1000125
# CVSS: 7.5
# Publish: 2016-10-06T14:59:00
# Unauthenticated SQL Injection in Huge-IT Catalog v1.0.7 for Joomla
SecRule &SESSION:joomla_session "@eq 1" \
	"id:66600266,chain,msg:'POL-2016-1000125',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule REQUEST_FILENAME "@endsWith /components/com_catalog/ajax_url.php" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS:post "@streq load_more_elements_into_catalog" \
	"chain,t:none,t:lowercase"
SecRule ARGS:catalog_id "@rx \D" \
	"t:none"

SecRule &SESSION:joomla_session "@eq 1" \
	"id:66600267,chain,msg:'POL-2016-1000125',phase:2,deny,deny,status:403,log,t:none,rev:1,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule REQUEST_FILENAME "@endsWith /components/com_videogallerylite/ajax_url.php" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS:task "@streq load_videos_content" \
	"chain,t:none,t:lowercase"
SecRule ARGS:galleryid "@rx \D" \
	"t:none"


# CVE: CVE-2012-1563
# CVSS: undefined
# Publish: 
# 
SecRule REQUEST_URI "/index\.php/component/users/" \
	"id:66600268,chain,msg:'POL-2012-1563',deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'Joomla'"
SecRule ARGS_POST:task "registration\.register" \
	"chain"
SecRule ARGS_POST:/^jform\[groups\]\[\]$/ "^[0-9]$" "


# CVE: CVE-2013-5953
# CVSS: 4.3
# Publish: 2014-03-19T14:17:00
# Multiple cross-site scripting (XSS) vulnerabilities in tmpl/layout_editevent.php in the Multi Calendar (com_multicalendar) component 4.0.2, and possibly 4.8.5 and earlier, for Joomla! allow remote attackers to inject arbitrary web script or HTML via the (1) calid or (2) paletteDefault parameter in an editevent action to index.php.
SecRule ARGS_GET:option "@streq com_multicalendar" \
	"id:66600269,chain,msg:'POL-2013-5953',deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule &ARGS_GET:task "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:calid|ARGS_GET:paletteDefault "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2017-9934
# CVSS: 4.3
# Publish: 2017-07-17T21:29:00
# Missing CSRF token checks and improper input validation in Joomla! CMS 1.7.3 through 3.7.2 lead to an XSS vulnerability.
SecRule &SESSION:joomla_session "@ge 1" \
	"id:66600270,chain,msg:'POL-2017-9934',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Joomla'"
SecRule ARGS:option "@streq com_menus" \
	"chain,t:none,t:lowercase"
SecRule ARGS:layout "@streq edit" \
	"chain,t:none,t:lowercase"
SecRule ARGS:task "@streq item.settype" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:jform[type] "@rx [\'\"]option[\'\"]\:[\'\"](.*?)[\'\"]" \
	"chain,capture,t:none,t:urlDecodeUni,t:base64DecodeExt,t:urlDecodeUni,t:removeWhitespace"
SecRule TX:1 "@contains <" \
	"t:none"


# CVE: CVE-2014-0793
# CVSS: 4.3
# Publish: 2014-01-30T18:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in the StackIdeas Komento (com_komento) component before 1.7.3 for Joomla! allow remote attackers to inject arbitrary web script or HTML via the (1) website or (2) latitude parameter in a comment to the default URI.
SecRule ARGS_GET:option "@streq com_komento" \
	"id:66600271,chain,msg:'POL-2014-0793',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule ARGS_POST:website "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:option "@streq com_komento" \
	"id:66600272,chain,msg:'POL-2014-0793',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule ARGS_POST:latitude "@rx \D" \
	"t:none"


# CVE: CVE-2013-3933
# CVSS: 4.3
# Publish: 2014-02-11T17:55:00
# Cross-site scripting (XSS) vulnerability in the JoomShopping (com_joomshopping) component before 4.3.1 for Joomla! allows remote attackers to inject arbitrary web script or HTML via the user_name parameter to index.php.
#5001627
SecRule REQUEST_URI "!@rx /index\.php" \
        "id:66600273,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5001627"

SecMarker BEGIN-RULE5001627
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600274,chain,msg:'POL-2013-3933',phase:2,deny,status:403,log,rev:1,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule ARGS_POST:Itemid "!@rx ^$" \
        "chain"
SecRule ARGS_POST:user_name "@rx <" "

SecMarker END-RULE5001627


# CVE: CVE-2014-0794
# CVSS: 4.3
# Publish: 2014-01-26T20:55:00
# SQL injection vulnerability in the JV Comment (com_jvcomment) component before 3.0.3 for Joomla! allows remote authenticated users to execute arbitrary SQL commands via the id parameter in a comment.like action to index.php.
#5001626
SecRule REQUEST_URI "!@rx /index\.php" \
        "id:66600275,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5001626"

SecMarker BEGIN-RULE5001626
SecRule ARGS_POST:option "@streq com_jvcomment" \
        "id:66600276,chain,msg:'POL-2014-0794',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule ARGS_POST:id "@rx \D" \
        "t:none"

SecMarker END-RULE5001626


# CVE: CVE-2016-1000116
# CVSS: 6.5
# Publish: 2016-10-21T14:59:00
# Huge-IT Portfolio Gallery manager v1.1.0 SQL Injection and XSS
SecRule &SESSION:joomla_session "@eq 1" \
	"id:66600277,chain,msg:'POL-2016-1000116',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule ARGS_GET:option "@contains com_portfoliogallery" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:view "@streq portfoliogallery" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:id "@rx \D" \
	"t:none"


# CVE: CVE-2016-1000117
# CVSS: 6.5
# Publish: 2016-10-21T14:59:00
# XSS & SQLi in HugeIT slideshow v1.0.4
SecRule &SESSION:joomla_session "@eq 1" \
	"id:66600278,chain,msg:'POL-2016-1000117',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule ARGS_GET:option "@contains com_slideshow" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:view "@streq slideshow" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:id "@rx \D" \
	"t:none"


# CVE: CVE-2016-1000121
# CVSS: 3.5
# Publish: 2016-10-27T21:59:00
# XSS and SQLi in Huge IT Joomla Slider v1.0.9 extension
SecRule &SESSION:joomla_session "@eq 1" \
	"id:66600279,chain,msg:'POL-2016-1000121',phase:2,deny,status:403,log,rev:2,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule ARGS_GET:option "@streq com_slider" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:view "@streq slider" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:id "@rx \D" \
	"t:none"


# CVE: CVE-2016-1000119
# CVSS: 6.5
# Publish: 2016-10-21T14:59:00
# SQLi and XSS in Huge IT catalog extension v1.0.4 for Joomla
SecRule &SESSION:joomla_session "@eq 1" \
	"id:66600280,chain,msg:'POL-2016-1000119',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule ARGS_GET:option "@streq com_catalog" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:view "@streq catalog" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:id "@rx \D" \
	"t:none"


# CVE: CVE-2016-1000113
# CVSS: 7.5
# Publish: 2016-10-06T14:59:00
# XSS and SQLi in huge IT gallery v1.1.5 for Joomla
SecRule &SESSION:joomla_session "@eq 1" \
	"id:66600281,chain,msg:'POL-2016-1000113',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule ARGS_GET:option "@streq com_gallery" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:view "@streq gallery" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:id "@rx \D" \
	"t:none"


# CVE: CVE-2014-9103
# CVSS: 4.3
# Publish: 2014-11-26T15:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Kunena component before 3.0.6 for Joomla! allow remote attackers to inject arbitrary web script or HTML via the (1) index value of an array parameter or the filename parameter in the Content-Disposition header to the (2) file or (3) profile image upload functionality.
SecRule REQUEST_URI "@pm forum option=com_kunena" \
	"id:66600282,chain,msg:'POL-2014-9103',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule ARGS_POST:view "@streq user" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_POST:userid "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:task "@streq save" \
	"chain,t:none,t:lowercase"
SecRule FILES "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-9102
# CVSS: 6.5
# Publish: 2014-11-26T15:59:00
# Multiple SQL injection vulnerabilities in the Kunena component before 3.0.6 for Joomla! allow remote authenticated users to execute arbitrary SQL commands via the index value in an array parameter, as demonstrated by the topics[] parameter in an unfavorite action to index.php.
SecRule ARGS_POST:kcheckgo "@streq go" \
	"id:66600283,chain,msg:'POL-2014-9102',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'JComponent',tag:'Joomla'"
SecRule ARGS_POST:view "@streq topics" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_URI "@pm forum option=com_kunena" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST_NAMES "@rx ^topics\[(.*?)]" \
	"chain,capture,t:none,t:lowercase"
SecRule TX:1 "@rx \D" \
	"t:none"


# CVE: CVE-2014-7228
# CVSS: 7.5
# Publish: 2014-11-03T22:55:00
# Akeeba Restore (restore.php), as used in Joomla! 2.5.4 through 2.5.25, 3.x through 3.2.5, and 3.3.0 through 3.3.4; Akeeba Backup for Joomla! Professional 3.0.0 through 4.0.2; Backup Professional for WordPress 1.0.b1 through 1.1.3; Solo 1.0.b1 through 1.1.2; Admin Tools Core and Professional 2.0.0 through 2.4.4; and CMS Update 1.0.a1 through 1.0.1, when performing a backup or update for an archive, does not delete parameters from $_GET and $_POST when it is cleansing $_REQUEST, but later accesses $_GET and $_POST using the getQueryParam function, which allows remote attackers to bypass encryption and execute arbitrary code via a command message that extracts a crafted archive.
SecRule REQUEST_FILENAME "@contains /administrator/components/com_joomlaupdate/restore.php" \
	"id:66600284,chain,msg:'POL-2014-7228',phase:2,deny,status:403,t:none,t:urlDecodeUni,t:lowercase,t:normalizePathWin,rev:2,severity:2,tag:'Joomla'"
SecRule ARGS_NAMES "@streq factory" \
	"t:none,t:urlDecodeUni,t:lowercase"

# CVE: CVE-2016-9836
# CVSS: 7.5
# Publish: 2016-12-05T17:59:00
# The file scanning mechanism of JFilterInput::isFileSafe() in Joomla! CMS before 3.6.5 does not consider alternative PHP file extensions when checking uploaded files for PHP content, which enables a user to upload and execute files with the `.php6`, `.php7`, `.phtml`, and `.phpt` extensions. Additionally, JHelperMedia::canUpload() did not blacklist these file extensions as uploadable file types.
SecRule ARGS:option "@streq com_media" \
	"id:66600285,chain,msg:'POL-2016-9836',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,rev:3,severity:2,tag:'Joomla'"
SecRule ARGS:task "@streq file.upload" \
	"chain,t:none,t:trim,t:lowercase"
SecRule FILES "@rx \.(php(6|7|t(ml)?))\.*$" \
	"t:none,t:urlDecodeUni,t:lowercase"

# CVE: CVE-2017-8917
# CVSS: 7.5
# Publish: 2017-05-17T23:29:00
# SQL injection vulnerability in Joomla! 3.7.x before 3.7.1 allows attackers to execute arbitrary SQL commands via unspecified vectors.
SecRule ARGS:option "@streq com_fields" "id:66600286,chain,msg:'POL-2017-8917',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'Joomla'"
SecRule ARGS:view "@streq fields" \
	"chain,t:none,t:trim,t:lowercase"
SecRule ARGS:layout "@streq modal" \
	"chain,t:none,t:trim,t:lowercase"
SecRule ARGS:list[fullordering] "@rx [^\w\ \.]" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_FILENAME "@contains component/fields" "id:66600287,chain,msg:'POL-2017-8917',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,rev:1,severity:2,tag:'Joomla'"
SecRule ARGS:view "@streq fields" \
	"chain,t:none,t:trim,t:lowercase"
SecRule ARGS:layout "@streq modal" \
	"chain,t:none,t:trim,t:lowercase"
SecRule ARGS:list[fullordering] "@rx [^\w\ \.]" \
	"t:none,t:urlDecodeUni"

# CVE: CVE-2017-8917
# CVSS: 7.5
# Publish: 2017-05-17T23:29:00
# SQL injection vulnerability in Joomla! 3.7.x before 3.7.1 allows attackers to execute arbitrary SQL commands via unspecified vectors.
SecRule ARGS:option "@streq com_fields" "id:66600288,chain,msg:'POL-2017-8917',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'Joomla'"
SecRule ARGS:view "@streq fields" \
	"chain,t:none,t:trim,t:lowercase"
SecRule ARGS:layout "@streq modal" \
	"chain,t:none,t:trim,t:lowercase"
SecRule ARGS:list[fullordering] "@rx [^\w\ \.]" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_FILENAME "@contains component/fields" "id:66600289,chain,msg:'POL-2017-8917',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,rev:1,severity:2,tag:'Joomla'"
SecRule ARGS:view "@streq fields" \
	"chain,t:none,t:trim,t:lowercase"
SecRule ARGS:layout "@streq modal" \
	"chain,t:none,t:trim,t:lowercase"
SecRule ARGS:list[fullordering] "@rx [^\w\ \.]" \
	"t:none,t:urlDecodeUni"

# CVE: CVE-2016-9838
# CVSS: 5
# Publish: 2016-12-16T09:59:00
# An issue was discovered in components/com_users/models/registration.php in Joomla! before 3.6.5. Incorrect filtering of registration form data stored to the session on a validation error enables a user to gain access to a registered user's account and reset the user's group mappings, username, and password, as demonstrated by submitting a form that targets the `registration.register` task.
SecRule REQUEST_FILENAME "@contains /component/users" \
	"id:66600290,chain,msg:'POL-2016-9838',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:urlDecodeUni,t:normalizePathWin,rev:1,severity:2,tag:'Joomla'"
SecRule ARGS:task "@streq registration.register" "chain, t:none,t:lowercase"
SecRule ARGS:jform[id]|ARGS:jform[groups] "@rx .*" "

SecRule ARGS:option "@streq com_users" \
	"id:66600291,chain,msg:'POL-2016-9838',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'Joomla'"
SecRule ARGS:task "@streq registration.register" "chain, t:none,t:lowercase"
SecRule ARGS:jform[id]|ARGS:jform[groups] "@rx .*" "

# CVE: CVE-2016-8869
# CVSS: 7.5
# Publish: 2016-11-04T21:59:00
# The register method in the UsersModelRegistration class in controllers/user.php in the Users component in Joomla! before 3.6.4 allows remote attackers to gain privileges by leveraging incorrect use of unfiltered data when registering on a site.
SecRule REQUEST_FILENAME "@contains /component/users/" "id:66600292,chain,msg:'POL-2016-8869',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,rev:1,severity:2,tag:'Joomla'"
SecRule ARGS:task "@streq user.register" "t:none,t:urlDecodeUni"

SecRule ARGS:option "@streq com_users" "id:66600293,chain,msg:'POL-2016-8869',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'Joomla'"
SecRule ARGS:task "@streq user.register" "t:none,t:urlDecodeUni"

# CVE: CVE-2015-7297
# CVSS: 7.5
# Publish: 2015-10-29T20:59:00
# SQL injection vulnerability in Joomla! 3.2 before 3.4.4 allows remote attackers to execute arbitrary SQL commands via unspecified vectors, a different vulnerability than CVE-2015-7858.
SecRule REQUEST_FILENAME "@contains component/contenthistory"\
	"id:66600294,chain,msg:'POL-2015-7297',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:urlDecodeUni,t:normalizePathWin,rev:1,severity:2,tag:'Joomla'"
SecRule ARGS:view "@streq history" \
	"chain,t:none,t:trim,t:lowercase"
SecRule ARGS:list[select] "@rx [^\w\ \.]" \
	"t:none,t:urlDecodeUni"

SecRule ARGS:option "@streq com_contenthistory" "id:66600295,chain,msg:'POL-2015-7297',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'Joomla'"
SecRule ARGS:view "@streq history" \
	"chain,t:none,t:trim,t:lowercase"
SecRule ARGS:list[select] "@rx [^\w\ \.]" \
	"t:none,t:urlDecodeUni"

# CVE: CVE-2014-8739
# CVSS: undefined
# Publish: 
# 
SecRule REQUEST_FILENAME "@contains /components/com_creativecontactform/fileupload/" \
	"id:66600296,chain,msg:'POL-2014-8739',phase:2,deny,status:403,log,t:none,t:trim,t:urlDecodeUni,t:normalizePathWin,t:lowercase,rev:1,severity:2,tag:'Joomla'"
SecRule REQUEST_METHOD "^POST$" "chain,t:none"
SecRule FILES "@rx (?i:\.(php.?|html|shtml|phtml|htaccess))" "t:none,t:lowercase,t:urlDecodeUni"

# CVE: CVE-2013-5576
# CVSS: 6.8
# Publish: 2013-10-09T14:54:00
# administrator/components/com_media/helpers/media.php in the media manager in Joomla! 2.5.x before 2.5.14 and 3.x before 3.1.5 allows remote authenticated users or remote attackers to bypass intended access restrictions and upload files with dangerous extensions via a filename with a trailing . (dot), as exploited in the wild in August 2013.
SecRule REQUEST_FILENAME "@contains com_media" \
	"id:66600297,chain,msg:'POL-2013-5576',phase:2,deny,status:403,log,t:none,t:trim,t:urlDecodeUni,t:normalizePathWin,t:lowercase,rev:1,severity:2,tag:'Joomla'"
SecRule REQUEST_METHOD "^POST$" "chain,t:none"
SecRule FILES "@rx (?i:\.(php.?|html|shtml|phtml|htaccess))" "t:none,t:lowercase,t:urlDecodeUni"


SecRule ARGS:option "@streq com_media" \
	"id:66600298,chain,msg:'POL-2013-5576',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'Joomla'"
SecRule REQUEST_METHOD "^POST$" "chain,t:none"
SecRule FILES "@rx (?i:\.(php.?|html|shtml|phtml|htaccess))" "t:none,t:lowercase,t:urlDecodeUni"

# CVE: CVE-2012-1116
# CVSS: 7.5
# Publish: 2012-09-26T00:55:00
# SQL injection vulnerability in Joomla! 1.7.x and 2.5.x before 2.5.2 allows remote attackers to execute arbitrary SQL commands via unspecified vectors.
SecRule REQUEST_FILENAME "@contains /administrator/components/com_civicrm/civicrm/packages/openflashchart/php-ofc-library/ofc_upload_image.php" \
	"id:66600299,chain,msg:'POL-2012-1116',phase:2,deny,status:403,log,t:none,t:trim,t:urlDecodeUni,t:normalizePathWin,t:lowercase,rev:1,severity:2,tag:'Joomla'"
SecRule ARGS:name "@rx (?i:\.(php.?|html|shtml|phtml|htaccess))" "t:none,t:urlDecodeUni"

# CVE: CVE-2014-7228
# CVSS: 7.5
# Publish: 2014-11-03T22:55:00
# Akeeba Restore (restore.php), as used in Joomla! 2.5.4 through 2.5.25, 3.x through 3.2.5, and 3.3.0 through 3.3.4; Akeeba Backup for Joomla! Professional 3.0.0 through 4.0.2; Backup Professional for WordPress 1.0.b1 through 1.1.3; Solo 1.0.b1 through 1.1.2; Admin Tools Core and Professional 2.0.0 through 2.4.4; and CMS Update 1.0.a1 through 1.0.1, when performing a backup or update for an archive, does not delete parameters from $_GET and $_POST when it is cleansing $_REQUEST, but later accesses $_GET and $_POST using the getQueryParam function, which allows remote attackers to bypass encryption and execute arbitrary code via a command message that extracts a crafted archive.
SecRule REQUEST_FILENAME "@contains /administrator/components/com_joomlaupdate/restore.php" \
	"id:66600300,chain,msg:'POL-2014-7228',phase:2,deny,status:403,log,t:none,t:trim,t:urlDecodeUni,t:normalizePathWin,t:lowercase,rev:1,severity:2,tag:'Joomla'"
SecRule ARGS:factory "@rx O:\+?[0-9]+" "t:none,t:base64Decode"

# CVE: CVE-2012-1563
# CVSS: undefined
# Publish: 
# 
SecRule ARGS:option "@streq com_users" \
	"id:66600301,chain,msg:'POL-2012-1563',deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2"
SecRule ARGS_POST:task "registration\.register" \
	"chain,t:none,t:trim,t:lowercase"
SecRule ARGS_POST:/^jform\[groups\]\[\]$/ "^[0-9]$" \
	"t:none"

SecRule REQUEST_FILENAME "@contains component/users/" \
	"id:66600302,chain,msg:'POL-2012-1563',deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:normalizePathWin,rev:1,severity:2"
SecRule ARGS_POST:task "registration\.register" \
	"chain,t:none,t:trim,t:lowercase"
SecRule ARGS_POST:/^jform\[groups\]\[\]$/ "^[0-9]$" \
	"t:none"

# CVE: CVE-2015-8562
# CVSS: 7.5
# Publish: 2015-12-16T21:59:00
# Joomla! 1.5.x, 2.x, and 3.x before 3.4.6 allow remote attackers to conduct PHP object injection attacks and execute arbitrary PHP code via the HTTP User-Agent header, as exploited in the wild in December 2015.
SecRule REQUEST_HEADERS:user-agent|REQUEST_HEADERS:x-forwarded-for "@rx [oO]:\+?\d" \
    "id:66600303,msg:'POL-2015-8562',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'Joomla'"

# CVE: CVE-2013-1453
# CVSS: 7.5
# Publish: 2013-02-13T01:55:00
# plugins/system/highlight/highlight.php in Joomla! 3.0.x through 3.0.2 and 2.5.x through 2.5.8 allows attackers to unserialize arbitrary PHP objects to obtain sensitive information, delete arbitrary directories, conduct SQL injection attacks, and possibly have other impacts via the highlight parameter.  Note: it was originally reported that this issue only allowed attackers to obtain sensitive information, but later analysis demonstrated that other attacks exist.
SecRule ARGS:highlight "@rx O:\+?\d+:" "id:66600304,msg:'POL-2013-1453',phase:2,deny,status:403,log,t:base64decode,t:trim,t:lowercase,rev:1,severity:2,tag:'Joomla'"

# CVE: CVE-2018-6376
# CVSS: 7.5
# Publish: 2018-01-30T17:29:00
# In Joomla! before 3.8.4, the lack of type casting of a variable in a SQL statement leads to a SQL injection vulnerability in the Hathor postinstall message.
SecRule REQUEST_FILENAME "@contains administrator"\
	"id:66600305,chain,msg:'POL-2018-6376',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'Joomla'"
SecRule ARGS:option "@streq com_admin" "chain,t:none,t:trim,t:lowercase"
SecRule ARGS:task "@streq profile.apply" "chain,t:none,t:trim,t:lowercase"
SecRule ARGS:jform[params][admin_style][] "@rx [^\w]" "t:none,t:urlDecodeUni"

SecRule REQUEST_FILENAME "@contains administrator"\
	"id:66600306,chain,msg:'POL-2018-6376',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'Joomla'"
SecRule ARGS:option "@streq com_admin" "chain,t:none,t:trim,t:lowercase"
SecRule ARGS:task "@streq profile.apply" "chain,t:none,t:trim,t:lowercase"
SecRule ARGS:jform[params][admin_style][0] "@rx [^\w]" "t:none,t:urlDecodeUni"

# CVE: CVE-2015-8769
# CVSS: 7.5
# Publish: 2016-01-12T20:59:00
# SQL injection vulnerability in Joomla! 3.x before 3.4.7 allows attackers to execute arbitrary SQL commands via unspecified vectors.
SecRule REQUEST_FILENAME "@contains administrator"\
	"id:66600307,chain,msg:'POL-2015-8769',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'Joomla'"
SecRule ARGS:option "@streq com_categories" "chain,t:none,t:trim,t:lowercase"
SecRule ARGS:jform[extension] "@streq com_content" "chain,t:none,t:trim,t:lowercase,t:urlDecodeUni"
SecRule ARGS:task "@streq category.apply" "chain,t:none,t:trim,t:lowercase,t:urlDecodeUni"
SecRule ARGS:/jform\[associations\]\[.*\]/ "@rx [^\w\*]" "t:none,t:urlDecodeUni"

# CVE: CVE-2012-3152
# CVSS: 6.4
# Publish: 2012-10-16T23:55:00
# Unspecified vulnerability in the Oracle Reports Developer component in Oracle Fusion Middleware 11.1.1.4, 11.1.1.6, and 11.1.2.0 allows remote attackers to affect confidentiality and integrity via unknown vectors related to Report Server Component.  NOTE: the previous information is from the October 2012 CPU. Oracle has not commented on claims from the original researcher that the URLPARAMETER functionality allows remote attackers to read and upload arbitrary files to reports/rwservlet, and that this issue occurs in earlier versions.  NOTE: this can be leveraged with CVE-2012-3153 to execute arbitrary code by uploading a .jsp file.
SecRule REQUEST_FILENAME "@contains /reports/rwservlet" \
	"id:66600308,msg:'POL-2012-3152',phase:1,pass,nolog,t:none,t:trim,t:lowercase,ctl:requestBodyProcessor=URLENCODED,tag:'Oracle'"

SecRule REQUEST_FILENAME "@contains /reports/rwservlet" \
	"id:66600309,chain,msg:'POL-2012-3152',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,t:urlDecodeUni,rev:1,severity:2,tag:'Oracle',tag:'Oracle reports'"
SecRule &ARGS:destype "@ge 1" \
	"chain,t:none"
SecRule &ARGS:jobtype "@ge 1" \
	"chain,t:none"
SecRule ARGS:URLPARAMETER "!@rx (\"|\')?(http|ftp)s?:\/\/" \
	"t:none,t:urlDecodeUni,t:lowercase"

SecRule REQUEST_FILENAME "@contains /reports/rwservlet" \
	"id:66600310,chain,msg:'POL-2012-3152',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,t:urlDecodeUni,rev:1,severity:2,tag:'Oracle',tag:'Oracle reports'"
SecRule &ARGS:destype "@ge 1" \
	"chain,t:none"
SecRule &ARGS:URLPARAMETER "@ge 1" \
	"chain,t:none"
SecRule &ARGS:jobtype "@ge 1" \
	"chain,t:none"
SecRule ARGS:desname "@rx \.jsp" \
	"t:none,t:urlDecodeUni,t:lowercase"
	
SecRule REQUEST_FILENAME "@contains /reports/rwservlet" \
	"id:66600311,chain,msg:'POL-2012-3152',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,t:urlDecodeUni,rev:1,severity:2,tag:'Oracle',tag:'Oracle reports'"
SecRule REQUEST_URI|REQUEST_BODY "@rx destype=" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule REQUEST_URI|REQUEST_BODY "@rx urlparameter=" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule REQUEST_URI|REQUEST_BODY "@rx jobtype=" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule REQUEST_URI|REQUEST_BODY "@rx desname=[^=]*?\.jsp" \
	"t:none,t:urlDecodeUni,t:lowercase"
	
SecRule REQUEST_FILENAME "@contains /reports/rwservlet" \
	"id:66600312,chain,msg:'POL-2012-3152',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,t:urlDecodeUni,rev:1,severity:2,tag:'Oracle',tag:'Oracle reports'"
SecRule REQUEST_URI "@rx destype=" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule REQUEST_URI "@rx jobtype=" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule REQUEST_URI "@rx urlparameter=" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule REQUEST_URI "!@rx (?i:(urlparameter=[\'\"]*?(http)s?:\/\/))" \
	"t:none,t:urlDecodeUni"

# CVE: CVE-2012-3153
# CVSS: 6.4
# Publish: 2012-10-16T23:55:00
# Unspecified vulnerability in the Oracle Reports Developer component in Oracle Fusion Middleware 11.1.1.4, 11.1.1.6, and 11.1.2.0 allows remote attackers to affect confidentiality and integrity via unknown vectors related to Servlet.  NOTE: the previous information is from the October 2012 CPU. Oracle has not commented on claims from the original researcher that the PARSEQUERY function allows remote attackers to obtain database credentials via reports/rwservlet/parsequery, and that this issue occurs in earlier versions.  NOTE: this can be leveraged with CVE-2012-3152 to execute arbitrary code by uploading a .jsp file.
SecRule REQUEST_FILENAME "@contains /reports/rwservlet/showenv" \
"id:66600313,msg:'POL-2012-3153',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,t:urlDecodeUni,rev:1,severity:2,tag:'Oracle',tag:'Oracle reports'"

# CVE: CVE-2018-12533
# CVSS: 7.5
# Publish: 2018-06-18T12:29:00
# JBoss RichFaces 3.1.0 through 3.3.4 allows unauthenticated remote attackers to inject expression language (EL) expressions and execute arbitrary Java code via a /DATA/ substring in a path with an org.richfaces.renderkit.html.Paint2DResource$ImageData object, aka RF-14310.
SecRule REQUEST_FILENAME "@rx \/richfaces\/renderkit\/html\/css\/extended_classes\.xcss\/data" \
	"id:66600314,chain,phase:1,deny,status:403,log,rev:1,severity:2,tag:'Richfaces',t:none,t:normalizePathWin,t:lowercase,msg:'POL-2018-12533'"
SecRule REQUEST_FILENAME "!@rx \/richfaces\/renderkit\/html\/css\/extended_classes\.xcss\/data\/(.){0,50}" \
	"t:none,t:normalizePathWin,t:lowercase"

# CVE: CVE-2015-0279
# CVSS: 6.8
# Publish: 2015-03-26T14:59:00
# JBoss RichFaces before 4.5.4 allows remote attackers to inject expression language (EL) expressions and execute arbitrary Java code via the do parameter.
SecRule REQUEST_FILENAME "@contains /org.richfaces.resource.mediaoutputresource" "id:66600315,phase:1,deny,status:403,log,rev:1,severity:2,tag:'Richfaces',t:none,t:normalizePathWin,t:lowercase,msg:'POL-2015-0279'"

# CVE: CVE-2018-12613
# CVSS: 6.5
# Publish: 2018-06-21T20:29:00
# An issue was discovered in phpMyAdmin 4.8.x before 4.8.2, in which an attacker can include (view and potentially execute) files on the server. The vulnerability comes from a portion of code where pages are redirected and loaded within phpMyAdmin, and an improper test for whitelisted pages. An attacker must be authenticated, except in the "$cfg['AllowArbitraryServer'] = true" case (where an attacker can specify any host he/she is already in control of, and execute arbitrary code on phpMyAdmin) and the "$cfg['ServerDefault'] = 0" case (which bypasses the login requirement and runs the vulnerable code without any authentication).
SecRule ARGS:target "@rx \\\\|\/" \
	"id:66600316,msg:'POL-2018-12613',phase:2,deny,status:403,log,t:trim,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'PhpMyAdmin'"

# CVE: CVE-2016-5734
# CVSS: 7.5
# Publish: 2016-07-03T01:59:00
# phpMyAdmin 4.0.x before 4.0.10.16, 4.4.x before 4.4.15.7, and 4.6.x before 4.6.3 does not properly choose delimiters to prevent use of the preg_replace e (aka eval) modifier, which might allow remote attackers to execute arbitrary PHP code via a crafted string, as demonstrated by the table search-and-replace implementation.
SecRule ARGS:find "@validateByteRange 1-255" \
	"id:66600317,chain,msg:'POL-2016-5734',phase:2,deny,status:403,log,rev:1,severity:2,tag:'PhpMyAdmin'"
SecRule REQUEST_FILENAME "@contains tbl_find_replace.php" \
	"t:none,t:trim,t:lowercase"

# CVE: CVE-2014-9218
# CVSS: 5
# Publish: 2014-12-08T11:59:00
# libraries/common.inc.php in phpMyAdmin 4.0.x before 4.0.10.7, 4.1.x before 4.1.14.8, and 4.2.x before 4.2.13.1 allows remote attackers to cause a denial of service (resource consumption) via a long password.
SecRule ARGS:pma_password "@rx .{255,}" \
	"id:66600318,msg:'POL-2014-9218',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'PhpMyAdmin'"

# CVE: CVE-2013-1937
# CVSS: 4.3
# Publish: 2013-04-16T14:04:00
# ** DISPUTED ** Multiple cross-site scripting (XSS) vulnerabilities in tbl_gis_visualization.php in phpMyAdmin 3.5.x before 3.5.8 might allow remote attackers to inject arbitrary web script or HTML via the (1) visualizationSettings[width] or (2) visualizationSettings[height] parameter. NOTE: a third party reports that this is "not exploitable."
SecRule ARGS:visualizationSettings[width]|ARGS:visualizationSettings[height] "@rx [^0-9]+" \
	"id:66600319,chain,msg:'POL-2013-1937',phase:2,deny,status:403,log,t:none,t:trim,rev:1,severity:2,tag:'PhpMyAdmin'"
SecRule REQUEST_FILENAME "@contains tbl_gis_visualization.php" \
	"t:none,t:trim,t:lowercase"

# CVE: CVE-2011-4107
# CVSS: 4.3
# Publish: 2011-11-17T19:55:00
# The simplexml_load_string function in the XML import plug-in (libraries/import/xml.php) in phpMyAdmin 3.4.x before 3.4.7.1 and 3.3.x before 3.3.10.5 allows remote authenticated users to read arbitrary files via XML data containing external entity references, aka an XML external entity (XXE) injection attack.
SecRule FILES_TMP_CONTENT "@rx <!\s*entity\s+.+\s+system.+>" \
	"id:66600320,chain,msg:'POL-2011-4107',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'PhpMyAdmin'"
SecRule REQUEST_FILENAME "@contains import.php" \
	"t:none,t:trim,t:lowercase"

# CVE: CVE-2013-3238
# CVSS: 6
# Publish: 2013-04-26T03:34:00
# phpMyAdmin 3.5.x before 3.5.8 and 4.x before 4.0.0-rc3 allows remote authenticated users to execute arbitrary code via a /e\x00 sequence, which is not properly handled before making a preg_replace function call within the "Replace table prefix" feature.
SecRule ARGS:from_prefix "@validateByteRange 1-255" \
	"id:66600321,chain,msg:'POL-2013-3238',phase:2,deny,status:403,log,rev:1,severity:2,tag:'PhpMyAdmin'"
SecRule REQUEST_FILENAME "@contains db_structure.php" \
	"t:none,t:trim,t:lowercase"

SecRule ARGS:filename_template "@rx \.php|\.pht|\.phtml|\.php3|\.php4|\.php5|\.php7|\.phps|\.shtml|.htaccess" \
	"id:66600322,chain,msg:'POL-2013-3238',phase:2,deny,status:403,log,rev:1,severity:2,tag:'PhpMyAdmin'"
SecRule REQUEST_FILENAME "@contains export.php" \
	"t:none,t:trim,t:lowercase"

SecRule ARGS:what "@rx \.\." \
	"id:66600323,chain,msg:'POL-2013-3238',phase:2,deny,status:403,log,t:trim,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'PhpMyAdmin'"
SecRule REQUEST_FILENAME "@contains export.php" \
	"t:none,t:trim,t:lowercase"

# CVE: CVE-2012-5159
# CVSS: 7.5
# Publish: 2012-09-25T22:55:00
# phpMyAdmin 3.5.2.2, as distributed by the cdnetworks-kr-1 mirror during an unspecified time frame in 2012, contains an externally introduced modification (Trojan Horse) in server_sync.php, which allows remote attackers to execute arbitrary PHP code via an eval injection attack. Although not found in all distributions of this software, the vulnerability was scored assuming that it was. End-users will need to identify whether their distribution does in fact contain the vulnerability.
SecRule ARGS:c "@rx .*" \
	"id:66600324,chain,msg:'POL-2012-5159',phase:2,deny,status:403,log,rev:1,severity:2,tag:'PhpMyAdmin'"
SecRule REQUEST_FILENAME "@contains server_sync.php" \
	"t:none,t:trim,t:lowercase"

# CVE: CVE-2016-6620
# CVSS: 7.5
# Publish: 2016-12-11T02:59:00
# An issue was discovered in phpMyAdmin. Some data is passed to the PHP unserialize() function without verification that it's valid serialized data. The unserialization can result in code execution because of the interaction with object instantiation and autoloading. All 4.6.x versions (prior to 4.6.4), 4.4.x versions (prior to 4.4.15.8), and 4.0.x versions (prior to 4.0.10.17) are affected.
SecRule REQUEST_FILENAME "@contains import.php" "id:66600325,msg:'POL-2016-6620',chain,phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'phpMyAdmin'"
SecRule ARGS:sql_query|ARGS:db "@contains phpmyadmin" "chain,t:none,t:urlDecodeUni,t:trim,t:lowercase"
SecRule ARGS:sql_query "@contains pma__tracking" "chain,t:none,t:urlDecodeUni,t:trim,t:lowercase"
SecRule ARGS:sql_query "@contains schema_snapshot" "chain,t:none,t:urlDecodeUni,t:trim,t:lowercase"
SecRule ARGS:sql_query "O:\+?\d+:.*" "t:none,t:urlDecodeUni,t:trim"

SecRule REQUEST_FILENAME "@contains tbl_replace.php""id:66600326,msg:'POL-2016-6620',chain,phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'phpMyAdmin'"
SecRule ARGS:db "@streq phpmyadmin" "chain,t:none,t:urlDecodeUni,t:trim,t:lowercase"
SecRule ARGS:table "@streq pma__tracking" "chain,t:none,t:urlDecodeUni,t:trim,t:lowercase"
SecRule ARGS:/fields_name\[multi_edit\]/ "schema_snapshot" "chain,t:none,t:urlDecodeUni,t:trim,t:lowercase"
SecRule ARGS:/fields\[multi_edit\]/ "O:\+?\d+:.*" "t:none,t:urlDecodeUni,t:trim"

# CVE: CVE-2017-7269
# CVSS: 10
# Publish: 2017-03-27T02:59:00
# Buffer overflow in the ScStoragePathFromUrl function in the WebDAV service in Internet Information Services (IIS) 6.0 in Microsoft Windows Server 2003 R2 allows remote attackers to execute arbitrary code via a long header beginning with "If: <http://" in a PROPFIND request, as exploited in the wild in July or August 2016.
SecRule REQUEST_HEADERS:if "(?i:(^<http(s?):))" "phase:2,rev:2,t:none,t:urlDecodeUni,log,deny,status:403,msg:'POL-2017-7269',id:66600327,logdata:'Found %{matched_var} in header',severity:2,tag:'IIS'"

# CVE: CVE-2002-1142
# CVSS: 7.5
# Publish: 2002-11-29T05:00:00
# Heap-based buffer overflow in the Remote Data Services (RDS) component of Microsoft Data Access Components (MDAC) 2.1 through 2.6, and Internet Explorer 5.01 through 6.0, allows remote attackers to execute code via a malformed HTTP request to the Data Stub.
SecRule REQUEST_FILENAME "@contains msadcs.dll/advanceddatafactory.query" \
        "id:66600328,\
        msg:'POL-2002-1142',\
        phase:2,\
        deny,\
        status:403,\
        log,\
        t:normalizePathWin,\
        t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'IIS'"

# CVE: CVE-2017-8046
# CVSS: 7.5
# Publish: 2018-01-04T06:29:00
# Malicious PATCH requests submitted to servers using Spring Data REST versions prior to 2.6.9 (Ingalls SR9), versions prior to 3.0.1 (Kay SR1) and Spring Boot versions prior to 1.5.9, 2.0 M6 can use specially crafted JSON data to run arbitrary Java code.
SecRule REQUEST_METHOD "@rx ^(?i:PATCH)$" \
	"id:66600329,chain,msg:'POL-2017-8046',phase:2,rev:2,t:none,log,deny,status:403,severity:2,tag:'Tomcat',tag:'Spring '"
SecRule REQUEST_HEADERS:Content-Type "@rx application\/json\-patch\+json" \
	"chain,t:none"
SecRule ARGS:path "@rx [\(\)]" \
	"t:none,t:urlDecodeUni"

# CVE: CVE-2017-8046
# CVSS: 7.5
# Publish: 2018-01-04T06:29:00
# Malicious PATCH requests submitted to servers using Spring Data REST versions prior to 2.6.9 (Ingalls SR9), versions prior to 3.0.1 (Kay SR1) and Spring Boot versions prior to 1.5.9, 2.0 M6 can use specially crafted JSON data to run arbitrary Java code.
SecRule REQUEST_METHOD "@rx ^(?i)PATCH$" \
	"id:66600330,chain,msg:'POL-2017-8046',phase:2,rev:1,t:none,log,deny,status:403,severity:2,tag:'Spring'"
SecRule REQUEST_HEADERS:Content-Type "@rx application\/json\-patch\+json" \
	"chain,t:none"
SecRule ARGS:path "@rx [\(\)]" \
	"t:none,t:urlDecodeUni"

# CVE: CVE-2016-4977
# CVSS: 6.5
# Publish: 2017-05-25T17:29:00
# When processing authorization requests using the whitelabel views in Spring Security OAuth 2.0.0 to 2.0.9 and 1.0.0 to 1.0.5, the response_type parameter value was executed as Spring SpEL which enabled a malicious user to trigger remote code execution via the crafting of the value for response_type.
SecRule REQUEST_FILENAME "@contains /oauth/authorize" \
	"id:66600331,chain,msg:'POL-2016-4977',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,rev:1,severity:2,tag:'Spring'"
SecRule ARGS:response_type|ARGS:redirect_uri "@rx \${.+}" \
	"t:none,t:trim"

# CVE: CVE-2018-1273
# CVSS: 7.5
# Publish: 2018-04-11T13:29:00
# Spring Data Commons, versions prior to 1.13 to 1.13.10, 2.0 to 2.0.5, and older unsupported versions, contain a property binder vulnerability caused by improper neutralization of special elements. An unauthenticated remote malicious user (or attacker) can supply specially crafted request parameters against Spring Data REST backed HTTP resources or using Spring Data's projection-based request payload binding hat can lead to a remote code execution attack.
SecRule ARGS_NAMES "@rx .*java\s*\.\s*lang\s*\..*" \
	"id:66600332,msg:'POL-2018-1273',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'Spring',tag:'Spring Data Commons'"

# CVE: CVE-2018-1270
# CVSS: 7.5
# Publish: 2018-04-06T13:29:00
# Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack.
SecRule REQUEST_FILENAME "@contains xhr_send" \
	"id:66600333,chain,msg:'POL-2018-1270',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,rev:1,severity:2,tag:'Spring'"
SecRule ARGS_POST:selector "@rx .*java\s*\.\s*lang\s*.*" \
	"chain,t:none,t:lowercase,t:urlDecodeUni"
SecRule ARGS_POST_NAMES "destination" \
	"t:none,t:trim,t:lowercase"

# CVE: CVE-2015-2068
# CVSS: 4.3
# Publish: 2015-02-24T17:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the MAGMI (aka Magento Mass Importer) plugin for Magento Server allow remote attackers to inject arbitrary web script or HTML via the (1) profile parameter to web/magmi.php or (2) QUERY_STRING to web/magmi_import_run.php.
SecRule REQUEST_FILENAME "@endsWith web/magmi.php" \
	"id:66600334,chain,msg:'POL-2015-2068',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:profile "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith web/magmi_import_run.php" \
	"id:66600335,chain,msg:'POL-2015-2068',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-2067
# CVSS: 5
# Publish: 2015-02-24T17:59:00
# Directory traversal vulnerability in web/ajax_pluginconf.php in the MAGMI (aka Magento Mass Importer) plugin for Magento Server allows remote attackers to read arbitrary files via a .. (dot dot) in the file parameter.
SecRule REQUEST_FILENAME "@endsWith web/ajax_pluginconf.php" \
	"id:66600336,chain,msg:'POL-2015-2067',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS:plugintype "@ge 1" \
	"chain,t:none"
SecRule &ARGS:pluginclass "@ge 1" \
	"chain,t:none"
SecRule ARGS:file "@rx \.\.|^\/" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-8766
# CVSS: 4.3
# Publish: 2016-01-08T21:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in content/content.systempreferences.php in Symphony CMS before 2.6.4 allow remote attackers to inject arbitrary web script or HTML via the (1) email_sendmail[from_name], (2) email_sendmail[from_address], (3) email_smtp[from_name], (4) email_smtp[from_address], (5) email_smtp[host], (6) email_smtp[port], (7) jit_image_manipulation[trusted_external_sites], or (8) maintenance_mode[ip_whitelist] parameters to system/preferences.
SecRule REQUEST_FILENAME "@contains symphony/system/preferences" \
	"id:66600337,chain,msg:'POL-2015-8766',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:settings[email_sendmail][from_name]|ARGS_POST:settings[email_sendmail][from_address]|ARGS_POST:settings[email_smtp][from_name]|ARGS_POST:settings[email_smtp][from_address]|ARGS_POST:settings[email_smtp][host]|ARGS_POST:settings[email_smtp][port]|ARGS_POST:it_image_manipulation[trusted_external_sites]|ARGS_POST:maintenance_mode[ip_whitelist]|ARGS_POST:settings[email_smtp][username]|ARGS_POST:settings[email_smtp][password] "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-4661
# CVSS: 4.3
# Publish: 2015-06-18T18:59:00
# Cross-site scripting (XSS) vulnerability in Symphony CMS 2.6.2 allows remote attackers to inject arbitrary web script or HTML via the sort parameter to system/authors.
SecRule REQUEST_FILENAME "@contains symphony/system/authors" \
	"id:66600338,chain,msg:'POL-2015-4661',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:sort "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2012-6659
# CVSS: 4.3
# Publish: 2014-09-19T14:55:00
# Cross-site scripting (XSS) vulnerability in the admin interface in Phorum before 5.2.19 allows remote attackers to inject arbitrary web script or HTML via a crafted URL.
SecRule ARGS_POST:title "@contains <" \
	"id:66600339,chain,msg:'POL-2012-6659',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES "@contains phorum_session_v5" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:module "settings" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule REQUEST_FILENAME "@contains admin.php" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2015-7712
# CVSS: 6.5
# Publish: 2015-11-16T19:59:00
# Multiple eval injection vulnerabilities in mods/_standard/gradebook/edit_marks.php in ATutor 2.2 and earlier allow remote authenticated users with the AT_PRIV_GRADEBOOK privilege to execute arbitrary PHP code via the (1) asc or (2) desc parameter. <a href="https://cwe.mitre.org/data/definitions/95.html">CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code ('Eval Injection')</a>
SecRule REQUEST_FILENAME "@endsWith mods/_standard/gradebook/edit_marks.php" \
	"id:66600340,chain,msg:'POL-2015-7712',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:3,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:asc|ARGS_GET:desc "@rx \W" \
	"t:none"


# CVE: CVE-2017-9451
# CVSS: 4.3
# Publish: 2017-06-06T16:29:00
# Cross site scripting (XSS) vulnerability in pages.edit_form.php in flatCore 1.4.6 allows remote attackers to inject arbitrary JavaScript via the PATH_INFO in an acp.php URL, due to use of unsanitized $_SERVER['PHP_SELF'] to generate URLs.
SecRule ARGS_GET:tn "@streq pages" \
	"id:66600341,chain,msg:'POL-2017-9451',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@contains /acp/acp.php" \
	"chain,t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"
SecRule MATCHED_VAR "@contains '" \
	"chain,t:none"
SecRule ARGS_GET:sub "@streq edit" \
	"chain,t:none,t:lowercase"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"t:none"


# CVE: CVE-2017-8402
# CVSS: 6.5
# Publish: 2017-05-31T04:29:00
# PivotX 2.3.11 allows remote authenticated users to execute arbitrary PHP code via vectors involving an upload of a .htaccess file.
SecRule &FILES "@ge 1" \
	"id:66600342,chain,msg:'POL-2017-8402',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:path "@ge 1" \
	"chain,t:none"
SecRule FILES|ARGS:name "@streq .htaccess" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_BASENAME "@streq fileupload.php" \
	"chain,t:none,t:lowercase"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"t:none"


# CVE: CVE-2017-9435
# CVSS: 7.5
# Publish: 2017-06-05T14:29:00
# Dolibarr ERP/CRM before 5.0.3 is vulnerable to a SQL injection in user/index.php (search_supervisor and search_statut parameters).
SecRule REQUEST_COOKIES_NAMES "@beginsWith dolsessid" \
	"id:66600343,chain,msg:'POL-2017-9435',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:search_statut|ARGS:search_supervisor "@rx [^0-9\,]" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@rx user\/(?:index\.php)?$" \
	"t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"


# CVE: CVE-2017-9428
# CVSS: 5
# Publish: 2017-06-04T23:29:00
# A directory traversal vulnerability exists in core\admin\ajax\developer\extensions\file-browser.php in BigTree CMS through 4.2.18 on Windows, allowing attackers to read arbitrary files via ..\ sequences in the directory parameter.
SecRule ARGS_POST:directory "@contains .." \
	"id:66600344,chain,msg:'POL-2017-9428',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:bigtree_admin[email] "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith /site/index.php/admin/ajax/developer/extensions/file-browser/" \
	"t:none,t:normalisePath,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2017-9448
# CVSS: 3.5
# Publish: 2017-06-06T15:29:00
# Cross-site scripting (XSS) vulnerabilities in BigTree CMS through 4.2.18 allow remote authenticated users to inject arbitrary web script or HTML via the description parameter. This issue exists in core\admin\ajax\pages\save-revision.php and core\admin\modules\pages\revisions.php. Low-privileged (administrator) users can attack high-privileged (Developer) users.
SecRule ARGS_POST:description "@contains <" \
	"id:66600345,chain,msg:'POL-2017-9448',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith /admin/ajax/pages/save-revision/" \
	"t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"


# CVE: CVE-2017-9452
# CVSS: 3.5
# Publish: 2017-06-06T16:29:00
# Cross-site scripting (XSS) vulnerability in admin.php in Piwigo 2.9.0 and earlier allows remote attackers to inject arbitrary web script or HTML via the page parameter.
SecRule &REQUEST_COOKIES:pwg_id "@ge 1" \
	"id:66600346,chain,msg:'POL-2017-9452',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@contains \"" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_BASENAME "@streq admin.php" \
	"t:none,t:lowercase"


# CVE: CVE-2017-9621
# CVSS: 4.3
# Publish: 2017-06-14T21:29:00
# Cross-site scripting (XSS) vulnerability in modules/Base/Lang/Administrator/update_translation.php in EPESI in Telaxus/EPESI 1.8.2 and earlier allows remote attackers to inject arbitrary web script or HTML via the (1) original or (2) new parameter.
SecRule ARGS:new|ARGS:original "@contains <" \
	"id:66600347,chain,msg:'POL-2017-9621',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith modules/base/lang/administrator/update_translation.php" \
	"t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"


# CVE: CVE-2013-6872
# CVSS: 6.5
# Publish: 2014-01-21T15:17:00
# SQL injection vulnerability in managetimetracker.php in Collabtive before 1.2 allows remote authenticated users to execute arbitrary SQL commands via the id parameter in a projectpdf action.
SecRule REQUEST_FILENAME "@endsWith managetimetracker.php" \
	"id:66600348,chain,msg:'POL-2013-6872',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@contains projectpdf" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:id "@rx \D" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-7349
# CVSS: 7.5
# Publish: 2014-04-01T03:25:00
# Multiple SQL injection vulnerabilities in Gnew 2013.1 allow remote attackers to execute arbitrary SQL commands via the (1) news_id parameter to news/send.php, (2) thread_id parameter to posts/edit.php, or (3) user_email parameter to users/password.php or (4) users/register.php.  NOTE: these issues were SPLIT from CVE-2013-5640 due to differences in researchers and disclosure dates.
SecRule REQUEST_FILENAME "@endsWith news/send.php" \
	"id:66600349,chain,msg:'POL-2013-7349',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:send "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:news_id "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith posts/edit.php" \
	"id:66600350,chain,msg:'POL-2013-7349',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:preview_edited "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:thread_id "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@pm users/password.php users/register.php" \
	"id:66600351,chain,msg:'POL-2013-7349',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:password|&ARGS_POST:register "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:user_email "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4032
# CVSS: 4.3
# Publish: 2014-06-11T14:55:00
# Cross-site scripting (XSS) vulnerability in apps/app_comment/form_comment.php in Fiyo CMS 1.5.7 allows remote attackers to inject arbitrary web script or HTML via the Nama field.
SecRule REQUEST_FILENAME "@endsWith dapur/index.php" \
	"id:66600352,chain,msg:'POL-2014-4032',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:app "@streq comment" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:name|ARGS_POST:comment "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_POST:send-comment "@streq send" \
	"id:66600353,chain,msg:'POL-2014-4032',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:secure "@eq 1" \
	"chain,t:none"
SecRule ARGS_POST:name|ARGS_POST:com "@rx <|\"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-5353
# CVSS: 7.5
# Publish: 2015-07-01T16:59:00
# Directory traversal vulnerability in Novius OS 5.0.1 (Elche) allows remote attackers to include and execute arbitrary local files via a .. (dot dot) in the tab parameter to admin/.
SecRule &REQUEST_COOKIES:fuelfid "@ge 1" \
	"id:66600354,chain,msg:'POL-2015-5353',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:tab "@contains .." \
	"t:none"

SecRule REQUEST_FILENAME "@contains admin/noviusos_media/media/insert_update" \
	"id:66600355,chain,msg:'POL-2015-5353',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:media_title "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@contains admin/noviusos_menu/menu/crud/insert_update" \
	"id:66600356,chain,msg:'POL-2015-5353',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:menu_title "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-5354
# CVSS: 5.8
# Publish: 2015-07-01T16:59:00
# Open redirect vulnerability in Novius OS 5.0.1 (Elche) allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via a URL in the redirect parameter to admin/nos/login. <a href="http://cwe.mitre.org/data/definitions/601.html" rel="nofollow">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a>
SecRule REQUEST_FILENAME "@endsWith admin/nos/login" \
	"id:66600357,chain,msg:'POL-2015-5354',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:fuelfid "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:redirect "@beginsWith http" \
	"t:none,t:lowercase"


# CVE: CVE-2014-9582
# CVSS: 4.3
# Publish: 2015-01-08T20:59:00
# Cross-site scripting (XSS) vulnerability in components/filemanager/dialog.php in Codiad 2.4.3 allows remote attackers to inject arbitrary web script or HTML via the short_name parameter in a rename action.  NOTE: this issue was originally incorrectly mapped to CVE-2014-1137; see CVE-2014-1137 for more information.
SecRule REQUEST_FILENAME "@endsWith /components/filemanager/dialog.php" \
	"id:66600358,chain,msg:'POL-2014-9582',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:short_name "@contains <" \
	"t:none,t:lowercase,t:urlDecodeUni"


# CVE: CVE-2015-7372
# CVSS: 7.5
# Publish: 2015-10-14T19:59:00
# Directory traversal vulnerability in delivery-dev/al.php in Revive Adserver before 3.2.2 allows remote attackers to include and execute arbitrary local files via a .. (dot dot) in the layerstyle parameter.
SecRule ARGS:layerstyle "@contains .." \
	"id:66600359,chain,msg:'POL-2015-7372',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith delivery_dev/al.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2015-8669
# CVSS: 5
# Publish: 2015-12-26T22:59:00
# libraries/config/messages.inc.php in phpMyAdmin 4.0.x before 4.0.10.12, 4.4.x before 4.4.15.2, and 4.5.x before 4.5.3.1 allows remote attackers to obtain sensitive information via a crafted request, which reveals the full path in an error message.
SecRule REQUEST_FILENAME "@endsWith /libraries/config/messages.inc.php" \
	"id:66600360,msg:'POL-2015-8669',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"


# CVE: CVE-2014-8999
# CVSS: 6.5
# Publish: 2014-11-20T13:55:00
# SQL injection vulnerability in htdocs/modules/system/admin.php in XOOPS before 2.5.7 Final allows remote authenticated users to execute arbitrary SQL commands via the selgroups parameter.
SecRule REQUEST_FILENAME "@contains modules/system/admin.php" \
	"id:66600361,chain,msg:'POL-2014-8999',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:fct "@streq users" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:selgroups "@rx \D" \
	"t:none"


# CVE: CVE-2015-6008
# CVSS: 7.5
# Publish: 2015-09-28T02:59:00
# install.php in Web Reference Database (aka refbase) through 0.9.6 allows remote attackers to execute arbitrary commands via the adminPassword parameter, a different issue than CVE-2015-7381.
SecRule ARGS_POST:adminPassword "@contains ;" \
	"id:66600362,chain,msg:'POL-2015-6008',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS:adminUserName|&ARGS:pathToMYSQL|&ARGS:databaseStructureFile "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith install.php" \
	"chain,t:none,t:lowercase"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"t:none"


# CVE: CVE-2015-7348
# CVSS: 4.3
# Publish: 2015-12-07T20:59:00
# Cross-site scripting (XSS) vulnerability in zTree 3.5.19.1 and possibly earlier allows remote attackers to inject arbitrary web script or HTML via the id parameter to demo/en/asyncData/getNodesForBigData.php.
SecRule ARGS:id "@rx <" \
	"id:66600363,chain,msg:'POL-2015-7348',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@rx (?:getnodes|getnodesforbigdata).php$" \
	"t:none,t:lowercase"


# CVE: CVE-2014-100010
# CVSS: 4.3
# Publish: 2015-01-13T11:59:00
# Cross-site scripting (XSS) vulnerability in ClanSphere 2011.4 allows remote attackers to inject arbitrary web script or HTML via the where parameter in a list action to index.php.
SecRule ARGS_GET:mod "@streq users" \
	"id:66600364,chain,msg:'POL-2014-100010',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@streq list" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:where "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-3773
# CVSS: 7.5
# Publish: 2014-08-07T11:13:00
# Multiple SQL injection vulnerabilities in TeamPass before 2.1.20 allow remote attackers to execute arbitrary SQL commands via the login parameter in a (1) send_pw_by_email or (2) generate_new_password action in sources/main.queries.php; iDisplayStart parameter to (3) datatable.logs.php or (4) a file in source/datatable/; or iDisplayLength parameter to (5) datatable.logs.php or (6) a file in source/datatable/; or allow remote authenticated users to execute arbitrary SQL commands via a sSortDir_ parameter to (7) datatable.logs.php or (8) a file in source/datatable/.
SecRule REQUEST_FILENAME "@pm sources/datatable/datatable.users_logged.php sources/datatable/datatable.item_edition.php sources/datatable/datatable.logs.php" \
	"id:66600365,chain,msg:'POL-2014-3773',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:iDisplayStart|ARGS_GET:iDisplayLength "@rx \D" \
	"t:none"

SecRule REQUEST_FILENAME "@endsWith sources/main.queries.php" \
	"id:66600366,chain,msg:'POL-2014-3773',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:type "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:login "@contains '" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-3978
# CVSS: 6.5
# Publish: 2014-10-20T16:55:00
# SQL injection vulnerability in TomatoCart 1.1.8.6.1 allows remote authenticated users to execute arbitrary SQL commands via the First Name and Last Name fields in a new address book contact.
SecRule &ARGS_GET:address_book "@ge 1" \
	"id:66600367,chain,msg:'POL-2014-3978',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:new "@streq save" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@contains account.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:firstname|ARGS_POST:lastname "@detectSQLi" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-3830
# CVSS: 4.3
# Publish: 2014-10-20T16:55:00
# Cross-site scripting (XSS) vulnerability in info.php in TomatoCart 1.1.8.6.1 allows remote attackers to inject arbitrary web script or HTML via the faqs_id parameter.
SecRule REQUEST_FILENAME "@contains info.php" \
	"id:66600368,chain,msg:'POL-2014-3830',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:faqs_id "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-9434
# CVSS: 3.5
# Publish: 2015-01-02T19:59:00
# Cross-site scripting (XSS) vulnerability in admin/managerrelated.php in the administrative backend in Absolut Engine 1.73 allows remote authenticated users to inject arbitrary web script or HTML via the title parameter.
SecRule REQUEST_FILENAME "@endsWith /admin/managerrelated.php" \
	"id:66600369,chain,msg:'POL-2014-9434',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:session "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:title "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2012-1664
# CVSS: 4.3
# Publish: 2015-05-20T18:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the admin panel in osCMax before 2.5.1 allow remote attackers to inject arbitrary web script or HTML via the (1) username parameter in a process action to admin/login.php; (2) pageTitle, (3) current_product_id, or (4) cPath parameter to admin/new_attributes_include.php; (5) sb_id, (6) sb_key, (7) gc_id, (8) gc_key, or (9) path parameter to admin/htaccess.php; (10) title parameter to admin/information_form.php; (11) search parameter to admin/xsell.php; (12) gross or (13) max parameter to admin/stats_products_purchased.php; (14) status parameter to admin/stats_monthly_sales.php; (15) sorted parameter to admin/stats_customers.php; (16) information_id parameter to /admin/information_manager.php; or (17) zID parameter to /admin/geo_zones.php.
SecRule REQUEST_BASENAME "@rx ^(?:stats_(?:products_purchased|monthly_sales|customers)|information_manager|geo_zones|new_attributes_include)\.php$" \
	"id:66600370,chain,msg:'POL-2012-1664',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:gross|ARGS_GET:max|ARGS_GET:status|ARGS_GET:sorted|ARGS_GET:information_id|ARGS_GET:zID|ARGS_GET:current_product_id|ARGS_GET:cPath|ARGS_GET:pageTitle "@rx ['\"<]" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_BASENAME "@streq htaccess.php" \
	"id:66600371,chain,msg:'POL-2012-1664',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:sb_id|ARGS_POST:sb_key|ARGS_POST:gc_id|ARGS_POST:gc_key|ARGS_POST:path "@rx \"" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_BASENAME "@streq information_form.php" \
	"id:66600372,chain,msg:'POL-2012-1664',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:title "@rx ['\"<]" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_BASENAME "@streq xsell.php" \
	"id:66600373,chain,msg:'POL-2012-1664',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:search "@rx ['\"<]" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2012-1665
# CVSS: 7.5
# Publish: 2015-05-20T18:59:00
# Multiple SQL injection vulnerabilities in the admin panel in osCMax before 2.5.1 allow (1) remote attackers to execute arbitrary SQL commands via the username parameter in a process action to admin/login.php or (2) remote administrators to execute arbitrary SQL commands via the status parameter to admin/stats_monthly_sales.php or (3) country parameter in a process action to admin/create_account_process.php.
SecRule REQUEST_BASENAME "@streq stats_monthly_sales.php" \
	"id:66600374,chain,msg:'POL-2012-1665',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:status "@rx \D" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_BASENAME "@streq create_account_process.php" \
	"id:66600375,chain,msg:'POL-2012-1665',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:country "@rx \D" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-7365
# CVSS: 4.3
# Publish: 2015-10-14T19:59:00
# Cross-site scripting (XSS) vulnerability in the plugin upgrade form in Revive Adserver before 3.2.2 allows remote attackers to inject arbitrary web script or HTML via the filename of an uploaded file containing errors.
SecRule FILES "@contains <" \
	"id:66600376,chain,msg:'POL-2015-7365',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES:sessionID "@rx ^[a-z0-9]{32}$" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith plugin-index.php" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2015-6516
# CVSS: 6.5
# Publish: 2015-08-18T15:59:00
# SQL injection vulnerability in cygnux.org sysPass 1.0.9 and earlier allows remote authenticated users to execute arbitrary SQL commands via the search parameter to ajax/ajax_search.php.
SecRule REQUEST_URI "@contains syspass" \
	"id:66600377,chain,msg:'POL-2015-6516',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endswith ajax/ajax_search.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS:search "@rx [')]" \
	"t:none"


# CVE: CVE-2015-2035
# CVSS: 6.5
# Publish: 2015-02-20T16:59:00
# SQL injection vulnerability in the administrative backend in Piwigo before 2.7.4 allows remote administrators to execute arbitrary SQL commands via the user parameter in the history page to admin.php.
SecRule &REQUEST_COOKIES_NAMES:pwg_id "@eq 1" \
	"id:66600378,chain,msg:'POL-2015-2035',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@contains <" \
	"t:none,t:urlDecodeUni"

SecRule &REQUEST_COOKIES_NAMES:pwg_id "@eq 1" \
	"id:66600379,chain,msg:'POL-2015-2035',phase:2,deny,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@streq history" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:user "@rx \D" \
	"t:none"


# CVE: CVE-2014-8366
# CVSS: 7.5
# Publish: 2014-10-20T18:55:00
# SQL injection vulnerability in openSIS 4.5 through 5.3 allows remote attackers to execute arbitrary SQL commands via the Username and password to index.php.
SecRule REQUEST_URI "@endswith opensis/index.php" \
	"id:66600380,chain,msg:'POL-2014-8366',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:username|ARGS_POST:password "@contains '" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-5575
# CVSS: 7.5
# Publish: 2017-01-23T07:59:00
# SQL injection vulnerability in inc/lib/Options.class.php in GeniXCMS before 1.0.0 allows remote attackers to execute arbitrary SQL commands via the modules parameter.
SecRule ARGS_GET:modules "@contains '" \
	"id:66600381,chain,msg:'POL-2017-5575',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:token "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:page "@streq modules" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_COOKIES_NAMES "@contains genixcms" \
	"t:none,t:lowercase"


# CVE: CVE-2016-10043
# CVSS: 10
# Publish: 2017-01-31T18:59:00
# An issue was discovered in Radisys MRF Web Panel (SWMS) 9.0.1. The MSM_MACRO_NAME POST parameter in /swms/ms.cgi was discovered to be vulnerable to OS command injection attacks. It is possible to use the pipe character (|) to inject arbitrary OS commands and retrieve the output in the application's responses. Attackers could execute unauthorized commands, which could then be used to disable the software, or read, write, and modify data for which the attacker does not have permissions to access directly. Since the targeted application is directly executing the commands instead of the attacker, any malicious activities may appear to come from the application or the application's owner (apache user).
SecRule ARGS_POST:MSM_MACRO_NAME "@contains |" \
	"id:66600382,chain,msg:'POL-2016-10043',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith /swms/ms.cgi" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2017-5345
# CVSS: 6.5
# Publish: 2017-01-12T06:59:00
# SQL injection vulnerability in inc/lib/Control/Ajax/tags-ajax.control.php in GeniXCMS 0.0.8 allows remote authenticated editors to execute arbitrary SQL commands via the term parameter to the default URI.
SecRule ARGS_GET:term "@contains '" \
	"id:66600383,chain,msg:'POL-2017-5345',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:token "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:ajax "@streq tags" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_COOKIES_NAMES "@contains genixcms" \
	"t:none,t:lowercase"


# CVE: CVE-2017-5599
# CVSS: 4.3
# Publish: 2017-01-27T10:59:00
# An issue was discovered in eClinicalWorks Patient Portal 7.0 build 13. This is a reflected Cross Site Scripting vulnerability which affects the raceMasterList.jsp page within the Patient Portal. Inserted payload is rendered within the Patient Portal and the raceMasterList.jsp page does not require authentication. The vulnerability can be used to extract sensitive information or perform attacks against the user's browser. The vulnerability affects the raceMasterList.jsp page and the following parameter: race.
SecRule REQUEST_BASENAME "@streq racemasterlist.jsp" \
	"id:66600384,chain,msg:'POL-2017-5599',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:race "@rx [^\w\ \-\/]" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-5519
# CVSS: 7.5
# Publish: 2017-01-17T09:59:00
# SQL injection vulnerability in Posts.class.php in GeniXCMS through 0.0.8 allows remote attackers to execute arbitrary SQL commands via the id parameter.
SecRule &REQUEST_COOKIES_NAMES:GeniXCMS "@ge 1" \
	"id:66600385,chain,msg:'POL-2017-5519',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@pm posts pages" \
	"chain,t:none"
SecRule ARGS_GET:id "@rx \D" \
	"t:none"


# CVE: CVE-2017-5595
# CVSS: 2.1
# Publish: 2017-02-06T17:59:00
# A file disclosure and inclusion vulnerability exists in web/views/file.php in ZoneMinder 1.x through v1.30.0 because of unfiltered user-input being passed to readfile(), which allows an authenticated attacker to read local system files (e.g., /etc/passwd) in the context of the web server user (www-data). The attack vector is a .. (dot dot) in the path parameter within a zm/index.php?view=file&path= request.
SecRule ARGS:path "@contains .." \
	"id:66600386,chain,msg:'POL-2017-5595',phase:3,deny,status:403,log,t:none,rev:3,severity:2,tag:'OtherApps'"
SecRule ARGS:view "@streq file" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_COOKIES_NAMES|RESPONSE_HEADERS:/Set-Cookie/ "@contains zmsessid" \
	"t:none,t:lowercase"


# CVE: CVE-2017-5879
# CVSS: 7.5
# Publish: 2017-02-06T15:59:00
# An issue was discovered in Exponent CMS 2.4.1. This is a blind SQL injection that can be exploited by un-authenticated users via an HTTP GET request and which can be used to dump database data out to a malicious server, using an out-of-band technique, such as select_loadfile(). The vulnerability affects source_selector.php and the following parameter: src.
SecRule REQUEST_FILENAME "@endsWith source_selector.php" \
	"id:66600387,chain,msg:'POL-2017-5879',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:controller|ARGS_GET:action "@pm blog showall" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:src "@contains '" \
	"t:none"

# CVE: CVE-2017-5516
# CVSS: 4.3
# Publish: 2017-01-17T09:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the user forms in GeniXCMS through 0.0.8 allow remote attackers to inject arbitrary web script or HTML via crafted parameters.
SecRule &REQUEST_COOKIES_NAMES:GeniXCMS "@ge 1" \
	"id:66600388,chain,msg:'POL-2017-5516',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@pm posts pages menus users" \
	"chain,t:none"
SecRule ARGS_GET:token "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule &REQUEST_COOKIES_NAMES:GeniXCMS "@ge 1" \
	"id:66600389,chain,msg:'POL-2017-5516',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@streq menus" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:id "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-7147
# CVSS: 4.3
# Publish: 2017-02-04T05:59:00
# Cross-site scripting (XSS) vulnerability in the manage_findResult component in the search feature in Zope ZMI in Plone before 4.3.12 and 5.x before 5.0.7 allows remote attackers to inject arbitrary web script or HTML via vectors involving double quotes, as demonstrated by the obj_ids:tokens parameter. NOTE: this vulnerability exists because of an incomplete fix for CVE-2016-7140.
SecRule ARGS:obj_ids:tokens "@rx \"" \
	"id:66600390,chain,msg:'POL-2016-7147',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_BASENAME "@streq manage_findresult" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2014-3991
# CVSS: 4.3
# Publish: 2014-07-11T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in Dolibarr ERP/CRM 3.5.3 allow remote attackers to inject arbitrary web script or HTML via the (1) dol_use_jmobile, (2) dol_optimize_smallscreen, (3) dol_no_mouse_hover, (4) dol_hide_topmenu, (5) dol_hide_leftmenu, (6) mainmenu, or (7) leftmenu parameter to index.php; the (8) dol_use_jmobile, (9) dol_optimize_smallscreen, (10) dol_no_mouse_hover, (11) dol_hide_topmenu, or (12) dol_hide_leftmenu parameter to user/index.php; the (13) dol_use_jmobile, (14) dol_optimize_smallscreen, (15) dol_no_mouse_hover, (16) dol_hide_topmenu, or (17) dol_hide_leftmenu parameter to user/logout.php; the (18) email, (19) firstname, (20) job, (21) lastname, or (22) login parameter in an update action in a "User Card" to user/fiche.php; or the (23) modulepart or (24) file parameter to viewimage.php.
SecRule ARGS_GET:leftmenu|ARGS_GET:mainmenu|ARGS_POST:dol_hide_leftmenu|ARGS_POST:dol_hide_topmenu|ARGS_POST:dol_no_mouse_hover|ARGS_POST:dol_optimize_smallscreen|ARGS_POST:dol_use_jmobile "@contains >" \
	"id:66600391,msg:'POL-2014-3991',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'OtherApps'"

SecRule REQUEST_FILENAME "@endsWith user/index.php" \
	"id:66600392,chain,msg:'POL-2014-3991',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:dol_hide_leftmenu|ARGS_GET:dol_hide_topmenu|ARGS_GET:dol_no_mouse_hover|ARGS_GET:dol_optimize_smallscreen|ARGS_GET:dol_use_jmobile "@contains >" "

SecRule REQUEST_FILENAME "@endsWith user/logout.php" \
	"id:66600393,chain,msg:'POL-2014-3991',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:dol_hide_leftmenu|ARGS_GET:dol_hide_topmenu|ARGS_GET:dol_no_mouse_hover|ARGS_GET:dol_optimize_smallscreen|ARGS_GET:dol_use_jmobile "@contains >" "

SecRule REQUEST_FILENAME "@endsWith user/fiche.php" \
	"id:66600394,chain,msg:'POL-2014-3991',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:email|ARGS_POST:firstname|ARGS_POST:job|ARGS_POST:lastname|ARGS_POST:login "@contains >" "

SecRule REQUEST_FILENAME "@endsWith viewimage.php" \
	"id:66600395,chain,msg:'POL-2014-3991',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:file|ARGS_GET:modulepart "@contains >" "


# CVE: CVE-2015-7711
# CVSS: 4.3
# Publish: 2017-08-31T22:29:00
# Cross-site scripting (XSS) vulnerability in popuphelp.php in ATutor 2.2 and earlier allows remote attackers to inject arbitrary web script or HTML via the h parameter.
SecRule &REQUEST_COOKIES_NAMES:ATutorID "@ge 1" \
	"id:66600396,chain,msg:'POL-2015-7711',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith popuphelp.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:h "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-3777
# CVSS: 5
# Publish: 2014-07-16T14:19:00
# Directory traversal vulnerability in Reportico PHP Report Designer before 4.0 allows remote attackers to read arbitrary files via a .. (dot dot) in the xmlin parameter.
SecRule ARGS:xmlin "@contains .." \
	"id:66600397,chain,msg:'POL-2014-3777',phase:2,deny,status:403,log,t:none,t:htmlEntityDecode,t:urlDecodeUni,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@contains run.php" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2014-3992
# CVSS: 6.5
# Publish: 2014-07-11T14:55:00
# Multiple SQL injection vulnerabilities in Dolibarr ERP/CRM 3.5.3 allow remote authenticated users to execute arbitrary SQL commands via the (1) entity parameter in an update action to user/fiche.php or (2) sortorder parameter to user/group/index.php.
SecRule REQUEST_FILENAME "@endsWith user/fiche.php" \
	"id:66600398,chain,msg:'POL-2014-3992',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:entity "@rx \D" "

SecRule REQUEST_FILENAME "@endsWith user/group/index.php" \
	"id:66600399,chain,msg:'POL-2014-3992',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:sortorder "@rx !(asc|desc)" \
	"t:lowercase"


# CVE: CVE-2014-9243
# CVSS: 4.3
# Publish: 2014-12-03T21:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in WebsiteBaker 2.8.3 allow remote attackers to inject arbitrary web script or HTML via the (1) QUERY_STRING to wb/admin/admintools/tool.php or (2) section_id parameter to edit_module_files.php, (3) news/add_post.php, (4) news/modify_group.php, (5) news/modify_post.php, or (6) news/modify_settings.php in wb/modules/.
SecRule REQUEST_FILENAME "@pm modules/news/modify_group.php modules/edit_module_files.php modules/news/modify_post.php modules/news/modify_settings.php" \
	"id:66600400,chain,msg:'POL-2014-9243',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:section_id "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith modules/news/add_post.php" \
	"id:66600401,chain,msg:'POL-2014-9243',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:section_id "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@contains admin/admintools/tool.php" \
	"id:66600402,chain,msg:'POL-2014-9243',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,t:normalizePath,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "@contains <" \
	"t:none,t:urlDecodeUni,t:urlDecodeUni"


# CVE: CVE-2013-1641
# CVSS: 7.8
# Publish: 2014-10-26T17:55:00
# Directory traversal vulnerability in the zip download functionality in QuiXplorer before 2.5.5 allows remote attackers to read arbitrary files via a .. (dot dot) in the selitems[] parameter in a download_selected action to index.php.
SecRule REQUEST_FILENAME "@endsWith /src/index.php" \
	"id:66600403,chain,msg:'POL-2013-1641',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:action "@contains post" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:do_action "@contains download_selected" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:selitems[] "@contains .." \
	"t:none,t:normalizePath,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4743
# CVSS: 4.3
# Publish: 2014-07-09T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in (1) search_ajax.tpl and (2) search_ajax_small.tpl in templates/default/tpl/module_search/ in the Search module (module_search) in Kajona before 4.5 allow remote attackers to inject arbitrary web script or HTML via the search parameter.
SecRule REQUEST_FILENAME "@endsWith xml.php" \
	"id:66600404,chain,msg:'POL-2014-4743',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:module|ARGS_GET:action "@pm search dosearch" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:searchterm "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2016-2157
# CVSS: 6.8
# Publish: 2016-05-22T20:59:00
# Cross-site request forgery (CSRF) vulnerability in mod/assign/adminmanageplugins.php in Moodle through 2.6.11, 2.7.x before 2.7.13, 2.8.x before 2.8.11, 2.9.x before 2.9.5, and 3.0.x before 3.0.3 allows remote attackers to hijack the authentication of administrators for requests that manage Assignment plugins.
SecRule &REQUEST_COOKIES:MoodleSession "!@ge 1" \
	"id:66600405,phase:2,pass,nolog,t:none,skip:6,rev:3,severity:2,tag:'OtherApps'"

SecRule REQUEST_FILENAME "@endsWith mod/assign/adminmanageplugins.php" \
	"id:66600406,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:2,rev:3,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "!@pm hide show" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_GET:subtype "@ge 1" \
	"setvar:'SESSION.moodle_assignsubmission_sh=1',setvar:'SESSION.TIMEOUT=300',expirevar:'SESSION.moodle_assignsubmission_sh=300',t:none,t:lowercase"

SecRule ARGS_GET:subtype "@streq assignsubmission" \
	"id:66600407,chain,msg:'POL-2016-2157',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:action "@ge 1" \
	"chain,t:none"
SecRule &ARGS_GET:plugin "@ge 1" \
	"chain,t:none"
SecRule &SESSION:moodle_assignsubmission_sh "!@eq 1" \
	"t:none"

SecRule REQUEST_FILENAME "@endsWith mod/assign/adminmanageplugins.php" \
	"id:66600408,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:2,rev:3,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:subtype "@ge 1" \
	"setvar:'SESSION.moodle_assignsubmission=1',setvar:'SESSION.TIMEOUT=300',expirevar:'SESSION.moodle_assignsubmission=300',t:none,t:lowercase"

SecRule REQUEST_FILENAME "@endsWith admin/plugins.php" \
	"id:66600409,chain,msg:'POL-2016-2157',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:3,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:uninstall "@ge 1" \
	"chain,t:none"
SecRule &ARGS_GET:confirm "@ge 1" \
	"chain,t:none"
SecRule &SESSION:moodle_assignsubmission "!@eq 1" \
	"t:none"

SecRule REQUEST_FILENAME "@endsWith admin/plugins.php" \
	"id:66600410,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,skip:2,rev:3,severity:2,tag:'OtherApps'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.moodle_assignsubmission_unin=1',setvar:'SESSION.TIMEOUT=300',expirevar:'SESSION.moodle_assignsubmission_unin=300',t:none,t:lowercase"

SecRule REQUEST_FILENAME "@endsWith admin/plugins.php" \
	"id:66600411,chain,msg:'POL-2016-2157',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:3,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:uninstall|&ARGS_POST:delete "@ge 1" \
	"chain,t:none"
SecRule &ARGS_POST:confirm "@ge 1" \
	"chain,t:none"
SecRule &SESSION:moodle_assignsubmission_unin "!@eq 1" \
	"t:none"


# CVE: CVE-2014-2219
# CVSS: 4.3
# Publish: 2014-03-20T16:55:00
# Cross-site scripting (XSS) vulnerability in whizzywig/wb.php in CMSimple Classic 3.54 and earlier, possibly as downloaded before February 26, 2014, allows remote attackers to inject arbitrary web script or HTML via the d parameter.
SecRule REQUEST_FILENAME "/whizzywig/wb\.php/" \
	"id:66600412,chain,msg:'POL-2014-2219',deny,status:403,t:none,t:htmlEntityDecode,t:lowercase,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:d "'" "


# CVE: CVE-2014-2088
# CVSS: 6.5
# Publish: 2014-03-02T17:55:00
# Unrestricted file upload vulnerability in ilias.php in ILIAS 4.4.1 allows remote authenticated users to execute arbitrary PHP code by using a .php filename in an upload_files action to the uploadFiles command, and then accessing the .php file via a direct request to a certain client_id pathname. Per: http://cwe.mitre.org/data/definitions/434.html
# 
# "CWE-434: Unrestricted Upload of File with Dangerous Type"
#5000267
SecRule REQUEST_URI "!@rx ilias\.php" \
        "id:66600413,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000266"

SecMarker BEGIN-RULE5000266
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600414,chain,msg:'POL-2014-2088',phase:2,deny,status:403,log,rev:3,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:baseClass "@streq ilPersonalDesktopGUI" \
        "chain,t:none,t:urlDecodeUni"
SecRule ARGS_POST:tar|ARGS_POST:title "@rx \'|\"|\<" "

SecRule REQUEST_METHOD "@streq POST" \
        "id:66600415,chain,msg:'POL-2014-2088',phase:2,deny,status:403,log,rev:3,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:baseClass "@streq ilRepositoryGUI" \
        "chain,t:none,t:urlDecodeUni"
SecRule ARGS_POST:tar "@rx \'|\"|\<" "

SecMarker END-RULE5000266

SecRule REQUEST_FILENAME "/ilfile/.*\.php$" \
        "id:66600416,msg:'POL-2014-2088',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'OtherApps'"


# CVE: CVE-2014-1945
# CVSS: 7.5
# Publish: 2014-03-09T13:16:00
# SQL injection vulnerability in ajax_udf.php in OpenDocMan before 1.2.7.2 allows remote attackers to execute arbitrary SQL commands via the add_value parameter.
SecRule REQUEST_FILENAME "@contains /ajax_udf.php" \
	"id:66600417,chain,msg:'POL-2014-1945',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:add_value|ARGS_GET:table "!@rx ^[\w]*$" "


# CVE: CVE-2013-3515
# CVSS: 4.3
# Publish: 2013-07-29T23:27:00
# Multiple cross-site scripting (XSS) vulnerabilities in OpenX Source 2.8.10 and earlier allow remote attackers to inject arbitrary web script or HTML via the (1) package parameter to www/admin/plugin-index.php or the (2) group parameter to www/admin/plugin-settings.php.
SecRule REQUEST_FILENAME "admin/plugin-index\.php|admin/plugin-settings\.php|admin/plugin-preferences\.php" \
	"id:66600418,chain,msg:'POL-2013-3515',phase:2,deny,status:403,log,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:action|ARGS:group|ARGS:package|ARGS:parent|ARGS:plugin "@rx [^a-zA-Z0-9\._-]" "


# CVE: CVE-2014-1915
# CVSS: 6.8
# Publish: 2014-02-07T15:48:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in Command School Student Management System 1.06.01 allow remote attackers to hijack the authentication of (1) administrators for requests that change the administrator password via an update action to sw/admin_change_password.php or (2) unspecified victims for requests that add a topic or blog entry to sw/add_topic.php.  NOTE: vector 2 can be leveraged to bypass the authentication requirements for exploiting vector 1 in CVE-2014-1914.
#5000262
SecRule REQUEST_URI "!@rx sw/admin_change_password\.php" \
        "id:66600419,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000259"

SecMarker BEGIN-RULE5000259
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600420,phase:2,pass,setvar:'SESSION.TIMEOUT=3600',setvar:'SESSION.CSSMS=1',expirevar:'SESSION.CSSMS=3600',nolog,rev:1,severity:2,tag:'OtherApps'"

SecRule SESSION:CSSMS "@eq 1" \
        "id:66600421,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'OtherApps'"

SecRule REQUEST_METHOD "@streq POST" \
        "id:66600422,chain,msg:'POL-2014-1915',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:action "@streq update" "

SecMarker END-RULE5000259

SecRule REQUEST_URI "!@rx create_topic\.php" \
        "id:66600423,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000260"

SecMarker BEGIN-RULE5000260
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600424,phase:2,pass,setvar:'SESSION.TIMEOUT=3600',setvar:'SESSION.CSSMS2=1',expirevar:'SESSION.CSSMS2=3600',nolog,rev:1,severity:2,tag:'OtherApps'"

SecMarker END-RULE5000260

SecRule REQUEST_URI "!@rx sw/add_topic\.php" \
        "id:66600425,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000262"

SecMarker BEGIN-RULE5000262
SecRule SESSION:CSSMS2 "@eq 1" \
        "id:66600426,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'OtherApps'"

SecRule REQUEST_METHOD "@streq POST" \
        "id:66600427,chain,msg:'POL-2014-1915',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:Submit "@streq Submit" "

SecMarker END-RULE5000262

# CVE: CVE-2015-0919
# CVSS: 7.5
# Publish: 2015-01-08T15:59:00
# Multiple SQL injection vulnerabilities in the administrative backend in Sefrengo before 1.6.1 allow remote administrators to execute arbitrary SQL commands via the (1) idcat or (2) idclient parameter to backend/main.php.
SecRule REQUEST_FILENAME "@endsWith backend/main.php" \
	"id:66600428,chain,msg:'POL-2015-0919',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:area "@streq con_configcat" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:idcat "@rx \"|\'" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith backend/main.php" \
	"id:66600429,chain,msg:'POL-2015-0919',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:area "@streq con_configcat" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:idcat "@rx \'" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_FILENAME "@endsWith backend/main.php" \
	"id:66600430,chain,msg:'POL-2015-0919',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:area "@streq plug" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:idclient "@rx \'" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_FILENAME "@endsWith backend/main.php" \
	"id:66600431,chain,msg:'POL-2015-0919',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:idclient "@rx \'" \
	"chain,t:none,t:urlDecodeUni"
SecRule ARGS_GET:area "@streq plug" \
	"t:none,t:lowercase"


# CVE: CVE-2015-0918
# CVSS: 4.3
# Publish: 2015-01-08T15:59:00
# Cross-site scripting (XSS) vulnerability in the administrative backend in Sefrengo before 1.6.1 allows remote attackers to inject arbitrary web script or HTML via the searchterm parameter to backend/main.php.
SecRule REQUEST_FILENAME "@endsWith backend/main.php" \
	"id:66600432,chain,msg:'POL-2015-0918',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:area "@streq user" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:searchterm "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2017-9449
# CVSS: 6.5
# Publish: 2017-06-06T15:29:00
# SQL injection vulnerability in BigTree CMS through 4.2.18 allows remote authenticated users to execute arbitrary SQL commands via core/admin/modules/developer/modules/views/create.php. The attacker creates a crafted table name at admin/developer/modules/views/create/ and the injection is visible at admin/ajax/auto-modules/views/searchable-page/ or admin/modules_name.
SecRule ARGS_POST:table "@contains '" \
	"id:66600433,chain,msg:'POL-2017-9449',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:bigtree_admin[email] "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith index.php/admin/developer/modules/views/create/" \
	"t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"


# CVE: CVE-2015-1428
# CVSS: 7.5
# Publish: 2015-02-03T16:59:00
# Multiple SQL injection vulnerabilities in Sefrengo before 1.6.2 allow (1) remote attackers to execute arbitrary SQL commands via the sefrengo cookie in a login to backend/main.php or (2) remote authenticated users to execute arbitrary SQL commands via the value_id parameter in a save_value action to backend/main.php.
SecRule REQUEST_FILENAME "@endsWith backend/main.php" \
	"id:66600434,chain,msg:'POL-2015-1428',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES:sefrengo "@rx \'" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_FILENAME "@endsWith backend/main.php" \
	"id:66600435,chain,msg:'POL-2015-1428',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:area "@streq settings" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:value_id "@rx \'" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-1441
# CVSS: 7.5
# Publish: 2015-02-03T16:59:00
# SQL injection vulnerability in Piwigo before 2.5.6, 2.6.x before 2.6.5, and 2.7.x before 2.7.3 allows remote attackers to execute arbitrary SQL commands via unspecified vectors.
SecRule ARGS_POST:subcats-included "@ge 1" \
	"id:66600436,chain,msg:'POL-2015-1441',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith search.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:mode|ARGS_POST:date_type|ARGS_POST:search_author|ARGS_POST:fields[] "@rx \W" \
	"t:none"

SecRule ARGS_POST:subcats-included "@ge 1" \
	"id:66600437,chain,msg:'POL-2015-1441',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith search.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:start_day|ARGS_POST:start_month|ARGS_POST:start_year|ARGS_POST:end_day|ARGS_POST:end_month|ARGS_POST:end_year|ARGS_POST:subcats-included "@rx \D" \
	"t:none"


# CVE: CVE-2017-9771
# CVSS: 7.5
# Publish: 2017-06-21T07:29:00
# install\save.php in WebsiteBaker v2.10.0 allows remote attackers to execute arbitrary PHP code via the database_username, database_host, or database_password parameter.
SecRule ARGS_POST:database_username "@contains '" \
	"id:66600438,chain,msg:'POL-2017-9771',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:wb-installer "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@contains /install/save.php" \
	"t:none,t:normalisePath,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2017-9463
# CVSS: 4
# Publish: 2017-06-14T19:29:00
# The application Piwigo is affected by a SQL injection vulnerability in version 2.9.0 and possibly prior. This vulnerability allows remote authenticated attackers to obtain information in the context of the user used by the application to retrieve data from the database. The user_list_backend.php component is affected: values of the iDisplayStart & iDisplayLength parameters are not sanitized; these are used to construct a SQL query and retrieve a list of registered users into the application.
SecRule &REQUEST_COOKIES_NAMES:pwg_id "@ge 1" \
	"id:66600439,chain,msg:'POL-2017-9463',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:iDisplayStart|ARGS_POST:iDisplayLength "@rx \D" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith admin/user_list_backend.php" \
	"t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"


# CVE: CVE-2017-9674
# CVSS: 3.5
# Publish: 2017-06-15T18:29:00
# In SimpleCE 2.3.0, an authenticated XSS vulnerability was found on index.php/content/text/1?return_url=[XSS] exploitable as a regular or admin user.
SecRule ARGS_GET:return_url "@contains <" \
	"id:66600440,chain,msg:'POL-2017-9674',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:2,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:sce_session "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@contains /index.php/content/text/" \
	"t:none,t:normalisePath,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2017-6562
# CVSS: 4.3
# Publish: 2017-03-09T09:59:00
# XSS in Agora-Project 3.2.2 exists with an index.php?ctrl=file&targetObjId=fileFolder-2&targetObjIdChild=[XSS] attack.
SecRule ARGS_GET:targetObjIdChild "@contains <" \
	"id:66600441,chain,msg:'POL-2017-6562',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:ctrl "@streq file" \
	"chain,t:none,t:lowercase"
SecRule &REQUEST_COOKIES:Agora_agora "@ge 1" \
	"t:none"


# CVE: CVE-2017-9833
# CVSS: 7.8
# Publish: 2017-06-24T02:29:00
# /cgi-bin/wapopen in BOA Webserver 0.94.14rc21 allows the injection of "../.." using the FILECAMERA variable (sent by GET) to read files with root privileges.
SecRule ARGS_GET:FILECAMERA "@contains ../.." \
	"id:66600442,chain,msg:'POL-2017-9833',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalisePath,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@streq /cgi-bin/wapopen" \
	"t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"


# CVE: CVE-2017-9841
# CVSS: 7.5
# Publish: 2017-06-27T17:29:00
# Util/PHP/eval-stdin.php in PHPUnit before 4.8.28 and 5.x before 5.6.3 allows remote attackers to execute arbitrary PHP code via HTTP POST data beginning with a "<?php " substring, as demonstrated by an attack on a site with an exposed /vendor folder, i.e., external access to the /vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php URI.
SecRule REQUEST_FILENAME "@endsWith util/php/eval-stdin.php" \
	"id:66600443,chain,msg:'POL-2017-9841',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalisePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_BODY "@contains <?" \
	"t:none,t:urlDecodeUni,t:removeWhitespace"


# CVE: CVE-2017-9668
# CVSS: 4.3
# Publish: 2017-06-18T21:29:00
# In admin\addgroup.php in CMS Made Simple 2.1.6, when adding a user group, there is no XSS filtering, resulting in storage-type XSS generation, via the description parameter in an addgroup action.
SecRule ARGS_POST:description "@contains \"" \
	"id:66600444,chain,msg:'POL-2017-9668',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS:_sk_ "@ge 1" \
	"chain,t:none"
SecRule REQUEST_COOKIES_NAMES "@beginsWith cmssessid" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@rx admin\/(?:add|edit)group\.php$" \
	"t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"


# CVE: CVE-2014-9433
# CVSS: 2.6
# Publish: 2014-12-31T22:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in cms/front_content.php in Contenido before 4.9.6, when advanced mod rewrite (AMR) is disabled, allow remote attackers to inject arbitrary web script or HTML via the (1) idart, (2) lang, or (3) idcat parameter.
SecRule REQUEST_FILENAME "@endsWith cms/front_content.php" \
	"id:66600445,chain,msg:'POL-2014-9433',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES "@contains 1frontend" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:idart|ARGS_GET:lang|ARGS_GET:idcat "@contains <" \
	"t:none,t:lowercase,t:urlDecodeUni"


# CVE: CVE-2013-5316
# CVSS: 6.8
# Publish: 2013-08-20T14:55:00
# Cross-site request forgery (CSRF) vulnerability in RiteCMS 1.0.0 allows remote attackers to hijack the authentication of administrators for requests that change the administrator password via an edit user action to cms/index.php.
SecRule REQUEST_URI "!@rx /cms/index\.php$" \
        "id:66600446,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000222"

SecMarker BEGIN-RULE5000222
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600447,chain,phase:2,pass,nolog,rev:1,severity:2,tag:'OtherApps'"
SecRule QUERY_STRING "@rx ^mode\=users\&edit\=\d+$" \
        "setvar:'SESSION.TIMEOUT=3600',setvar:'SESSION.ritecms=1',expirevar:'SESSION.ritecms=3600',t:none,t:urlDecodeUni,t:lowercase"

SecRule SESSION:ritecms "@eq 1" \
        "id:66600448,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'OtherApps'"

SecRule REQUEST_METHOD "@streq POST" \
        "id:66600449,chain,msg:'POL-2013-5316',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:mode "@streq users" \
        "chain,t:none,t:lowercase"
SecRule ARGS_POST:type "@streq 1" \
        "chain"
SecRule ARGS_POST:edit_user_submitted "@rx ^.*$" "
SecMarker END-RULE5000222

# CVE: CVE-2016-3694
# CVSS: 7.5
# Publish: 2017-02-15T19:59:00
# Multiple SQL injection vulnerabilities in modified eCommerce Shopsoftware 2.0.0.0 revision 9678, when the easybill-module is not installed, allow remote attackers to execute arbitrary SQL commands via the (1) orders_status or (2) customers_status parameter to api/easybill/easybillcsv.php.
SecRule &ARGS_GET:token "@ge 1" \
	"id:66600450,chain,msg:'POL-2016-3694',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:orders_status|ARGS_GET:customers_status "@contains '" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith api/easybill/easybillcsv.php" \
	"t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"


# CVE: CVE-2017-5520
# CVSS: 6.5
# Publish: 2017-01-17T09:59:00
# The media rename feature in GeniXCMS through 0.0.8 does not consider alternative PHP file extensions when checking uploaded files for PHP content, which enables a user to rename and execute files with the `.php6`, `.php7` and `.phtml` extensions.
SecRule &REQUEST_COOKIES_NAMES:GeniXCMS "@ge 1" \
	"id:66600451,chain,msg:'POL-2017-5520',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:target "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:cmd "@streq rename" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:name "@rx \.(?:php[\d]?|js|pl|rb|sh|p?html|asp|exe|com|htaccess)$" \
	"t:none,t:lowercase"


# CVE: CVE-2017-6099
# CVSS: 4.3
# Publish: 2017-02-24T02:59:00
# Cross-site scripting (XSS) vulnerability in GetAuthDetails.html.php in PayPal PHP Merchant SDK (aka merchant-sdk-php) 3.9.1 allows remote attackers to inject arbitrary web script or HTML via the token parameter.
# SecRule ARGS_GET:token "@pm \" >" \
# 	"id:66600452,chain,msg:'POL-2017-6099',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
# SecRule REQUEST_BASENAME "@streq getauthdetails.html.php" \
# 	"t:none,t:lowercase"


# CVE: CVE-2017-5990
# CVSS: 4.3
# Publish: 2017-02-15T06:59:00
# An issue was discovered in PhreeBooksERP before 2017-02-13. The vulnerability exists due to insufficient filtration of user-supplied data in the "form" HTTP GET parameter passed to the "PhreeBooksERP-master/extensions/ShippingMethods/ups/label_mgr/js_include.php" and "PhreeBooksERP-master/extensions/ShippingMethods/yrc/label_mgr/js_include.php" URLs. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website. NOTE: these js_include.php files do not exist in the SourceForge "stable release" (aka R37RC1).
SecRule ARGS_GET:form "@rx \"" \
	"id:66600453,chain,msg:'POL-2017-5990',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith /label_mgr/js_include.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2017-6065
# CVSS: 6.5
# Publish: 2017-02-17T20:59:00
# SQL injection vulnerability in inc/lib/Control/Backend/menus.control.php in GeniXCMS through 1.0.2 allows remote authenticated users to execute arbitrary SQL commands via the order parameter.
SecRule ARGS_GET:page "@streq menus" \
	"id:66600454,chain,msg:'POL-2017-6065',phase:3,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES "@contains genixcms" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST_NAMES "@rx [^\[\]\w]" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-1476
# CVSS: 7.5
# Publish: 2015-02-04T16:59:00
# Multiple SQL injection vulnerabilities in xlinkerz ecommerceMajor allow remote attackers to execute arbitrary SQL commands via the (1) productbycat parameter to product.php, or (2) username or (3) password parameter to __admin/index.php.
SecRule REQUEST_FILENAME "@endsWith __admin/index.php" \
	"id:66600455,chain,msg:'POL-2015-1476',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:username|ARGS_POST:password "@rx \'" \
	"t:none,t:urlDecodeUni"

SecRule &ARGS_GET:productbycat "@ge 1" \
	"id:66600456,chain,msg:'POL-2015-1476',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith product.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:productbycat "@rx \D" \
	"t:none"


# CVE: CVE-2014-4687
# CVSS: 4.3
# Publish: 2014-07-02T10:35:00
# Multiple cross-site scripting (XSS) vulnerabilities in pfSense before 2.1.4 allow remote attackers to inject arbitrary web script or HTML via (1) the starttime0 parameter to firewall_schedule.php, (2) the rssfeed parameter to rss.widget.php, (3) the servicestatusfilter parameter to services_status.widget.php, (4) the txtRecallBuffer parameter to exec.php, or (5) the HTTP Referer header to log.widget.php.
SecRule REQUEST_FILENAME "@contains firewall_schedule_edit.php" \
	"id:66600457,chain,msg:'POL-2014-4687',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS:starttime0|ARGS:stoptime0 "@contains \"" \
	"t:none,t:urlDecodeUni,multiMatch"

SecRule REQUEST_FILENAME "@contains widgets/widgets/rss.widget.php" \
	"id:66600458,chain,msg:'POL-2014-4687',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS:rssfeed|ARGS:rssmaxitems|ARGS:rsswidgetheight|ARGS:rsswidgettextlength "@contains <" \
	"t:none,t:urlDecodeUni,multiMatch"

SecRule REQUEST_FILENAME "@contains widgets/widgets/services_status.widget.php" \
	"id:66600459,chain,msg:'POL-2014-4687',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS:servicestatusfilter "@contains \"" \
	"t:none,t:urlDecodeUni,multiMatch"

SecRule REQUEST_FILENAME "@contains widgets/widgets/log.widget.php" \
	"id:66600460,chain,msg:'POL-2014-4687',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS:actblock|ARGS:actpass|ARGS:actreject "!@rx ^(pass|block|reject)$" \
	"t:none,t:lowercase"

SecRule REQUEST_FILENAME "@contains widgets/widgets/log.widget.php" \
	"id:66600461,chain,msg:'POL-2014-4687',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS:filterlogentries|ARGS:filterlogentriesinterfaces "@rx [\"|<|>|']" \
	"t:none,t:urlDecodeUni,multiMatch"


# CVE: CVE-2017-5959
# CVSS: 7.5
# Publish: 2017-02-21T07:59:00
# CSRF token bypass in GeniXCMS before 1.0.2 could result in escalation of privileges. The forgotpassword.php page can be used to acquire a token.
SecRule &REQUEST_COOKIES:GeniXCMS "@ge 1" \
	"id:66600462,chain,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@streq users" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.GeniXCMS_user=1',expirevar:'SESSION.GeniXCMS_user=300',t:none,t:lowercase"

SecRule &REQUEST_COOKIES:GeniXCMS "@ge 1" \
	"id:66600463,chain,msg:'POL-2017-5959',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@streq users" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_POST:edituser|&ARGS_POST:adduser "@ge 1" \
	"chain,t:none"
SecRule &ARGS_POST:token "@ge 1" \
	"chain,t:none"
SecRule &SESSION:GeniXCMS_user "!@eq 1" \
	"t:none"


# CVE: CVE-2015-2183
# CVSS: 7.5
# Publish: 2015-03-10T14:59:00
# Multiple SQL injection vulnerabilities in the administrative backend in ZeusCart 4 allow remote administrators to execute arbitrary SQL commands via the id parameter in a (1) disporders detail or (2) subadminmgt edit action or (3) cid parameter in an editcurrency action to admin/.
SecRule ARGS_GET:do "@pm subadminmgt editcurrency disporders" \
	"id:66600464,chain,msg:'POL-2015-2183',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:id|ARGS_GET:cid "@rx \D" \
	"t:none"


# CVE: CVE-2015-2275
# CVSS: 4.3
# Publish: 2015-03-12T17:59:00
# Cross-site scripting (XSS) vulnerability in WoltLab Community Gallery 2.0 before 2014-12-26 allows remote attackers to inject arbitrary web script or HTML via the parameters[data][7][title] parameter in a saveImageData action to index.php/AJAXProxy.
SecRule REQUEST_FILENAME "@contains index.php/ajaxproxy/" \
	"id:66600465,chain,msg:'POL-2015-2275',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:/parameters\[data]\[\d+]\[title]/ "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-2217
# CVSS: 4.3
# Publish: 2015-03-10T14:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in Ultimate PHP Board (aka myUPB) before 2.2.8 allow remote attackers to inject arbitrary web script or HTML via the (1) q parameter to search.php or (2) avatar parameter to profile.php.
SecRule &REQUEST_COOKIES:user_env "@ge 1" \
	"id:66600466,chain,msg:'POL-2015-2217',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith search.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:q "@rx \'" \
	"t:none,t:urlDecodeUni"

SecRule &REQUEST_COOKIES:user_env "@ge 1" \
	"id:66600467,chain,msg:'POL-2015-2217',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith profile.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:avatar "@rx \'" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-5456
# CVSS: 4.3
# Publish: 2015-07-08T15:59:00
# Cross-site scripting (XSS) vulnerability in the form method in modules/formclass.php in PivotX before 2.3.11 allows remote attackers to inject arbitrary web script or HTML via the PATH_INFO, related to the "PHP_SELF" variable and form actions.
SecRule &REQUEST_COOKIES:pivotxsession "@ge 1" \
	"id:66600468,chain,msg:'POL-2015-5456',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "@rx index\.php\/\"|index\.php\/\'" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"

SecRule ARGS_GET:page "@streq logout" \
	"id:66600469,chain,msg:'POL-2015-5456',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "@rx index\.php\/\"|index\.php\/\'" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"


# CVE: CVE-2015-3989
# CVSS: 4.3
# Publish: 2015-05-15T18:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in concrete5 before 5.7.4 allow remote attackers to inject arbitrary web script or HTML via vectors related to private messages or other unspecified vectors.
SecRule REQUEST_FILENAME "@contains index.php/dashboard/system/mail/importers" \
	"id:66600470,chain,msg:'POL-2015-3989',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:miEmail|ARGS_POST:miServer|ARGS_POST:miUsername|ARGS_POST:miPassword|ARGS_POST:miPort "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-3935
# CVSS: 4.3
# Publish: 2015-06-10T14:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in Dolibarr ERP/CRM 3.5 and 3.6 allow remote attackers to inject arbitrary web script or HTML via the Business Search (search_nom) field to (1) htdocs/societe/societe.php or (2) htdocs/societe/admin/societe.php.
SecRule REQUEST_FILENAME "@pm htdocs/product/liste.php htdocs/adherents/liste.php" \
	"id:66600471,chain,msg:'POL-2015-3935',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:sall "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith htdocs/contact/list.php" \
	"id:66600472,chain,msg:'POL-2015-3935',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:contactname "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith htdocs/societe/societe.php" \
	"id:66600473,chain,msg:'POL-2015-3935',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:search_nom|ARGS_POST:search_town|ARGS_POST:/search_idprof\d+/|ARGS_POST:socname "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2011-5276
# CVSS: 6.5
# Publish: 2014-03-21T04:38:00
# SQL injection vulnerability in the drawAdminTools_PackageInstaller function in shared/inc/forms/packager.php in Domain Technologie Control (DTC) before 0.32.11 allows remote authenticated users to execute arbitrary SQL commands via the database_name parameter.
SecRule ARGS:action "@streq do_install" \
	"id:66600474,chain,msg:'POL-2011-5276',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:database_name "@rx \W" \
	"t:none"


# CVE: CVE-2016-7453
# CVSS: 7.5
# Publish: 2016-11-03T10:59:00
# The Pixidou Image Editor in Exponent CMS prior to v2.3.9 patch 2 could be used to perform an fid SQL Injection.
SecRule ARGS:controller "@streq pixidou" \
	"id:66600475,chain,msg:'POL-2016-7453',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS:action "@streq exiteditor" \
	"chain,t:none,t:lowercase"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule ARGS:fid "@rx [^0-9\-]" \
	"t:none"


# CVE: CVE-2016-5048
# CVSS: 7.5
# Publish: 2016-08-26T19:59:00
# SQL injection vulnerability in chat/staff/default.aspx in ReadyDesk 9.1 allows remote attackers to execute arbitrary SQL commands via the user name field.
SecRule &ARGS_GET:SESID "@ge 1" \
	"id:66600476,chain,msg:'POL-2016-5048',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith chat/staff/default.aspx" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath"
SecRule ARGS_POST:txtName "@rx (\'|\")" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2016-7452
# CVSS: 5
# Publish: 2016-11-03T10:59:00
# The Pixidou Image Editor in Exponent CMS prior to v2.3.9 patch 2 could be used to upload a malicious file to any folder on the site via a cpi directory traversal.
SecRule &ARGS:fid "@ge 1" \
	"id:66600477,chain,msg:'POL-2016-7452',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS:cpi "@contains .." \
	"chain,t:none,t:urlDecodeUni"
SecRule ARGS:controller "@streq pixidou" \
	"chain,t:none,t:lowercase"
SecRule ARGS:action "@streq exiteditor" \
	"chain,t:none,t:lowercase"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"t:none"


# CVE: CVE-2016-6639
# CVSS: 5
# Publish: 2016-09-18T02:59:00
# Cloud Foundry PHP Buildpack (aka php-buildpack) before 4.3.18 and PHP Buildpack Cf-release before 242, as used in Pivotal Cloud Foundry (PCF) Elastic Runtime before 1.6.38 and 1.7.x before 1.7.19 and other products, place the .profile file in the htdocs directory, which might allow remote attackers to obtain sensitive information via an HTTP GET request for this file.
SecRule REQUEST_FILENAME "@streq /.profile" \
	"id:66600478,msg:'POL-2016-6639',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"


# CVE: CVE-2016-7419
# CVSS: 3.5
# Publish: 2016-09-17T21:59:00
# Cross-site scripting (XSS) vulnerability in share.js in the gallery application in ownCloud Server before 9.0.4 and Nextcloud Server before 9.0.52 allows remote authenticated users to inject arbitrary web script or HTML via a crafted directory name.
SecRule &REQUEST_COOKIES_NAMES:oc_sessionPassphrase "@ge 1" \
	"id:66600479,chain,msg:'POL-2016-7419',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@contains <" \
	"chain,t:none,t:htmlEntityDecode,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@contains remote.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_COOKIES_NAMES "@rx ^([0-9a-z]{12})$" \
	"t:none"


# CVE: CVE-2016-5049
# CVSS: 5
# Publish: 2016-08-26T19:59:00
# Directory traversal vulnerability in chat/openattach.aspx in ReadyDesk 9.1 allows remote attackers to read arbitrary files via a .. (dot dot) in the SESID parameter in conjunction with a filename in the FNAME parameter.
SecRule &ARGS:fname "@ge 1" \
	"id:66600480,chain,msg:'POL-2016-5049',phase:2,deny,status:403,log,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS:sesid "@contains .." \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith chat/openattach.aspx" \
	"t:none,t:urlDecodeUni,t:normalizePath"


# CVE: CVE-2015-5399
# CVSS: 3.5
# Publish: 2016-08-26T20:59:00
# Cross-site scripting (XSS) vulnerability in PHPVibe before 4.21 allows remote authenticated users to inject arbitrary web script or HTML via a comment.
SecRule REQUEST_FILENAME "@endsWith /lib/ajax/addcomment.php" \
	"id:66600481,chain,msg:'POL-2015-5399',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:object_id "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:comment "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-9526
# CVSS: 4.3
# Publish: 2015-01-05T21:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in concrete5 5.7.2.1, 5.7.2, and earlier allow remote attackers to inject arbitrary web script or HTML via the (1) gName parameter in single_pages/dashboard/users/groups/bulkupdate.php or (2) instance_id parameter in tools/dashboard/sitemap_drag_request.php.
SecRule REQUEST_FILENAME "@contains tools/required/dashboard/sitemap_drag_request" \
	"id:66600482,chain,msg:'POL-2014-9526',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:instance_id "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@contains dashboard/users/groups/bulkupdate/search" \
	"id:66600483,chain,msg:'POL-2014-9526',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:gName "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@contains dashboard/users/groups/bulkupdate/search" \
	"id:66600484,chain,msg:'POL-2014-9526',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:gName "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-5529
# CVSS: 4.3
# Publish: 2015-07-16T15:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in Free Reprintables ArticleFR 3.0.6 allow remote attackers to inject arbitrary web script or HTML via the (1) name parameter to dashboard/settings/categories/, (2) title or (3) rel parameter to dashboard/settings/links/, or (4) url parameter to dashboard/tools/pingservers/.
SecRule REQUEST_URI "@contains /dashboard/settings/categories" \
	"id:66600485,chain,msg:'POL-2015-5529',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:name "@rx <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_URI "@contains /dashboard/settings/links" \
	"id:66600486,chain,msg:'POL-2015-5529',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:title|ARGS_POST:rel|ARGS_POST:url "@rx <" \
	"t:none,t:urlDecodeUni,t:lowercase"

SecRule REQUEST_URI "@contains /dashboard/tools/pingservers" \
	"id:66600487,chain,msg:'POL-2015-5529',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:url "@rx <" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2012-1507
# CVSS: 4.3
# Publish: 2014-09-17T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in OrangeHRM before 2.7 allow remote attackers to inject arbitrary web script or HTML via the (1) newHspStatus parameter to plugins/ajaxCalls/haltResumeHsp.php, (2) sortOrder1 parameter to templates/hrfunct/emppop.php, or (3) uri parameter to index.php.
SecRule REQUEST_FILENAME "@contains templates/hrfunct/emppop.php" \
	"id:66600488,chain,msg:'POL-2012-1507',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:4,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:reqcode "@ge 1" \
	"chain"
SecRule ARGS_GET:sortOrder1 "!@pm asc desc" \
	"t:none,t:urlDecodeUni,t:lowercase"

SecRule REQUEST_FILENAME "@contains plugins/ajaxcalls/haltresumehsp.php" \
	"id:66600489,chain,msg:'POL-2012-1507',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:4,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:hspSummaryId "@ge 1" \
	"chain"
SecRule ARGS_GET:newHspStatus "@rx \D" \
	"chain,t:none,t:urlDecodeUni"
SecRule &ARGS_GET:empId "@ge 1" "


# CVE: CVE-2014-5110
# CVSS: 4.3
# Publish: 2014-07-28T15:55:00
# Cross-site scripting (XSS) vulnerability in user/help/html/index.php in Fonality trixbox allows remote attackers to inject arbitrary web script or HTML via the id_nodo parameter.
SecRule REQUEST_FILENAME "@contains user/help/html/index.php" \
	"id:66600490,chain,msg:'POL-2014-5110',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:id_nodo "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-5109
# CVSS: 7.5
# Publish: 2014-07-28T15:55:00
# SQL injection vulnerability in maint/modules/endpointcfg/endpoint_generic.php in Fonality trixbox allows remote attackers to execute arbitrary SQL commands via the mac parameter in a Submit action.
SecRule REQUEST_FILENAME "@endsWith endpoint_generic.php" \
	"id:66600491,chain,msg:'POL-2014-5109',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:mac "!@rx ^[0-9a-f]{12}$" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2013-5589
# CVSS: 7.5
# Publish: 2013-08-29T12:07:00
# SQL injection vulnerability in cacti/host.php in Cacti 0.8.8b and earlier allows remote attackers to execute arbitrary SQL commands via the id parameter.
SecRule REQUEST_URI "@contains cacti" \
	"id:66600492,chain,msg:'POL-2013-5589',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@rx host.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:id "!@rx ^[0-9]+$" "


# CVE: CVE-2013-5091
# CVSS: 6.5
# Publish: 2013-10-04T20:55:00
# SQL injection vulnerability in CalendarCommon.php in vTiger CRM 5.4.0 and possibly earlier allows remote authenticated users to execute arbitrary SQL commands via the onlyforuser parameter in an index action to index.php.  NOTE: this issue might be a duplicate of CVE-2011-4559.
SecRule REQUEST_URI "!@rx /index\.php$" \
        "id:66600493,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000227"

SecMarker BEGIN-RULE5000227
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600494,chain,msg:'POL-2013-5091',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@streq index" \
        "chain,t:none,t:lowercase"
SecRule ARGS_GET:module "@streq calendar" \
        "chain,t:none,t:lowercase"
SecRule ARGS_GET:day "@rx ^\d{1,2}$" \
        "chain"
SecRule ARGS_GET:hour "@rx ^\d{1,2}$" \
        "chain"
SecRule ARGS_GET:month "@rx ^\d{1,2}$" \
        "chain"
SecRule ARGS_GET:year "@rx ^\d{4}$" \
        "chain"
SecRule ARGS_GET:onlyforuser "!@rx ^\d+$" "

SecMarker END-RULE5000227

# CVE: CVE-2012-6518
# CVSS: 6.8
# Publish: 2013-01-24T01:55:00
# Cross-site request forgery (CSRF) vulnerability in mod.php in DiY-CMS 1.0 allows remote attackers to hijack the authentication of administrators for requests that create a poll via an add action to the poll module.
#5000225
SecRule REQUEST_URI "!@rx /mod\.php$" \
        "id:66600495,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000225"

SecMarker BEGIN-RULE5000225
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600496,phase:2,pass,setvar:'SESSION.TIMEOUT=3600',setvar:'SESSION.diy=1',expirevar:'SESSION.diy=3600',nolog,rev:1,severity:2,tag:'OtherApps'"

SecRule SESSION:diy "@eq 1" \
        "id:66600497,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'OtherApps'"

SecRule REQUEST_METHOD "@rx ^(?:POST)$" \
        "id:66600498,chain,msg:'POL-2012-6518',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule QUERY_STRING "@rx mod=poll\&modfile=add" \
        "chain,t:none,t:urlDecodeUni"
SecRule ARGS_POST:polltype "@streq 1" \
        "chain"
SecRule ARGS_POST:question "!@rx ^$" "

SecMarker END-RULE5000225


# CVE: CVE-2014-5017
# CVSS: 7.5
# Publish: 2014-07-21T14:55:00
# SQL injection vulnerability in CPDB in application/controllers/admin/participantsaction.php in LimeSurvey 2.05+ Build 140618 allows remote attackers to execute arbitrary SQL commands via the sidx parameter in a JSON request to admin/participants/sa/getParticipants_json, related to a search parameter.
SecRule REQUEST_URI "@endsWith sa/getparticipants_json" \
	"id:66600499,chain,msg:'POL-2014-5017',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:sidx "@contains '" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2013-3721
# CVSS: 7.5
# Publish: 2013-05-31T12:20:00
# SQL injection vulnerability in awards.php in PsychoStats 3.2.2b allows remote attackers to execute arbitrary SQL commands via the d parameter.
#5000228
SecRule REQUEST_URI "!@rx /awards\.php$" \
        "id:66600500,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000228"

SecMarker BEGIN-RULE5000228
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600501,chain,msg:'POL-2013-3721',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:d "!@rx ^\d\d\d\d-\d\d?-\d\d?$" "

SecMarker END-RULE5000228


# CVE: CVE-2013-3524
# CVSS: 7.5
# Publish: 2013-05-10T21:55:00
# SQL injection vulnerability in popupnewsitem/ in the Pop Up News module 2.0 and possibly earlier for phpVMS allows remote attackers to execute arbitrary SQL commands via the itemid parameter.  NOTE: this was originally reported as a problem in phpVMS.
#5000229
SecRule REQUEST_URI "!@rx /index\.php/PopUpNews/popupnewsitem/" \
        "id:66600502,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000229"

SecMarker BEGIN-RULE5000229
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600503,chain,msg:'POL-2013-3524',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:itemid "!@rx ^\d+$" \
        "t:none,t:urlDecodeUni"

SecMarker END-RULE5000229

# CVE: CVE-2014-6619
# CVSS: 4.3
# Publish: 2014-09-30T16:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in register-exec.php in Restaurant Script (PizzaInn_Project) 1.0.0 allow remote attackers to inject arbitrary web script or HTML via the (1) fname, (2) lname, or (3) login parameter.
SecRule REQUEST_FILENAME "@contains register-exec.php" \
	"id:66600504,chain,msg:'POL-2014-6619',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:fname|ARGS_POST:lname|ARGS_POST:login "@contains '" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2010-5302
# CVSS: 4.3
# Publish: 2014-08-21T23:55:00
# Cross-site scripting (XSS) vulnerability in timthumb.php in TimThumb before 1.15 as of 20100908 (r88), as used in multiple products, allows remote attackers to inject arbitrary web script or HTML via the QUERY_STRING.
SecRule REQUEST_FILENAME "@endsWith timthumb.php" \
	"id:66600505,chain,msg:'POL-2010-5302',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:src "@pm < >" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-5111
# CVSS: 5
# Publish: 2014-07-28T15:55:00
# Multiple directory traversal vulnerabilities in Fonality trixbox allow remote attackers to read arbitrary files via a .. (dot dot) in the lang parameter to (1) home/index.php, (2) asterisk_info/asterisk_info.php, (3) repo/repo.php, or (4) endpointcfg/endpointcfg.php in maint/modules/.
SecRule REQUEST_FILENAME "@rx maint\/modules\/(home\/index|asterisk_info\/asterisk_info|repo\/repo|endpointcfg\/endpointcfg)\.php" \
	"id:66600506,chain,msg:'POL-2014-5111',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:lang "@contains .." \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-5259
# CVSS: 4.3
# Publish: 2014-09-12T14:55:00
# Cross-site scripting (XSS) vulnerability in cattranslate.php in the CatTranslate JQuery plugin in BlackCat CMS 1.0.3 and earlier allows remote attackers to inject arbitrary web script or HTML via the msg parameter.
SecRule REQUEST_FILENAME "@endsWith modules/lib_jquery/plugins/cattranslate/cattranslate.php" \
	"id:66600507,chain,msg:'POL-2014-5259',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:/cat[\d]{4}sessionid/ "@ge 1" \
	"chain"
SecRule ARGS:msg "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-9146
# CVSS: 4.3
# Publish: 2015-04-14T14:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in Fiyo CMS 2.0.1.8 allow remote attackers to inject arbitrary web script or HTML via the (1) view, (2) id, (3) page, or (4) app parameter to the default URI or the (5) act parameter to dapur/index.php.
SecRule REQUEST_FILENAME "@endsWith dapur/index.php" \
	"id:66600508,chain,msg:'POL-2014-9146',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:app "@streq module" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:act "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:app "@contains article" \
	"id:66600509,chain,msg:'POL-2014-9146',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:view "@contains item" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:id|ARGS_GET:view|ARGS_GET:app "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-2042
# CVSS: 5
# Publish: 2016-02-20T01:59:00
# phpMyAdmin 4.4.x before 4.4.15.3 and 4.5.x before 4.5.4 allows remote attackers to obtain sensitive information via a crafted request to (1) libraries/phpseclib/Crypt/AES.php or (2) libraries/phpseclib/Crypt/Rijndael.php, which reveals the full path in an error message.
SecRule REQUEST_FILENAME "@endsWith libraries/phpseclib/crypt/rijndael.php" \
	"id:66600510,msg:'POL-2016-2042',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"

SecRule REQUEST_FILENAME "@endsWith libraries/phpseclib/crypt/aes.php" \
	"id:66600511,msg:'POL-2016-2042',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"


# CVE: CVE-2014-9457
# CVSS: 6.5
# Publish: 2015-01-02T20:59:00
# SQL injection vulnerability in classes/mono_display.class.php in PMB 4.1.3 and earlier allows remote authenticated users to execute arbitrary SQL commands via the id parameter to catalog.php.
SecRule ARGS_GET:categ "@streq isbd" \
	"id:66600512,chain,msg:'POL-2014-9457',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith catalog.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:id "!@rx ^\d+#?$" \
	"t:none"


# CVE: CVE-2014-9145
# CVSS: 7.5
# Publish: 2015-04-14T14:59:00
# Multiple SQL injection vulnerabilities in Fiyo CMS 2.0.1.8 allow remote attackers to execute arbitrary SQL commands via the (1) id parameter in an edit action to dapur/index.php; (2) cat, (3) user, or (4) level parameter to dapur/apps/app_article/controller/article_list.php; or (5) email parameter in an email action or (6) username parameter in a user action to dapur/apps/app_user/controller/check_user.php.
SecRule REQUEST_FILENAME "@endsWith dapur/index.php" \
	"id:66600513,chain,msg:'POL-2014-9145',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:app "@streq user" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:id "@rx \D" \
	"t:none"

SecRule REQUEST_FILENAME "@endsWith dapur/apps/app_user/controller/check_user.php" \
	"id:66600514,chain,msg:'POL-2014-9145',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:username|ARGS_POST:email "@rx \'" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_FILENAME "@endsWith dapur/apps/app_article/controller/article_list.php" \
	"id:66600515,chain,msg:'POL-2014-9145',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:cat|ARGS_GET:level|ARGS_GET:user "@rx \'" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-9528
# CVSS: 7.5
# Publish: 2015-01-06T15:59:00
# SQL injection vulnerability in the actionIndex function in protected/modules_core/notification/controllers/ListController.php in HumHub 0.10.0-rc.1 and earlier allows remote authenticated users to execute arbitrary SQL commands via the from parameter to index.php. NOTE: this can be leveraged for cross-site scripting (XSS) attacks via a request that causes an error.
SecRule ARGS_GET:r "@contains notification/list/index" \
	"id:66600516,chain,msg:'POL-2014-9528',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:from "@rx \D" \
	"t:none"


# CVE: CVE-2011-5273
# CVSS: 6.5
# Publish: 2014-03-21T04:38:00
# Directory traversal vulnerability in shared/package-installer in Domain Technologie Control (DTC) before 0.34.1 allows remote authenticated users to execute arbitrary PHP code via a .. (dot dot) in the pkg parameter in a do_install action to dtc/.
SecRule ARGS:action "@pm do_install prepareinstall" \
	"id:66600517,chain,msg:'POL-2011-5273',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:pkg "@contains .." \
	"t:none"


# CVE: CVE-2015-0216
# CVSS: 3.5
# Publish: 2015-06-01T19:59:00
# access.php in the Lesson module in Moodle 2.8.x before 2.8.2 does not set the RISK_XSS bit for graders, which allows remote authenticated users to conduct cross-site scripting (XSS) attacks via crafted essay feedback.
SecRule REQUEST_FILENAME "@endsWith mod/lesson/essay.php" \
	"id:66600518,chain,msg:'POL-2015-0216',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:response "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-5097
# CVSS: 7.5
# Publish: 2014-08-22T14:55:00
# Multiple SQL injection vulnerabilities in Free Reprintables ArticleFR 3.0.4 and earlier allow remote attackers to execute arbitrary SQL commands via the id parameter in a (1) get or (2) set action to rate.php.
SecRule REQUEST_FILENAME "@contains rate.php" \
	"id:66600519,chain,msg:'POL-2014-5097',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:act "@pm set get" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:id "@rx \D" \
	"t:none"


# CVE: CVE-2015-4634
# CVSS: 7.5
# Publish: 2015-08-11T14:59:00
# SQL injection vulnerability in graphs.php in Cacti before 0.8.8e allows remote attackers to execute arbitrary SQL commands via the local_graph_id parameter.
SecRule REQUEST_COOKIES_NAMES "@contains cacti" \
	"id:66600520,chain,msg:'POL-2015-4634',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith graphs.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:local_graph_id "@rx \D" \
	"t:none"


# CVE: CVE-2013-0237
# CVSS: 4.3
# Publish: 2013-07-08T20:55:00
# Cross-site scripting (XSS) vulnerability in Plupload.as in Moxiecode plupload before 1.5.5, as used in WordPress before 3.5.1 and other products, allows remote attackers to inject arbitrary web script or HTML via the id parameter.
SecRule REQUEST_FILENAME "@rx \/(plupload\.flash|moxie)\.swf$" \
	"id:66600521,chain,msg:'POL-2013-0237',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS:id|&ARGS:target "@gt 0" \
	"t:none,t:lowercase"


# CVE: CVE-2015-1424
# CVSS: 6.8
# Publish: 2015-01-29T15:59:00
# Cross-site request forgery (CSRF) vulnerability in Gecko CMS 2.2 and 2.3 allows remote attackers to hijack the authentication of administrators for requests that add an administrator user via a newuser request to admin/index.php.
SecRule ARGS_GET:p "@streq user" \
	"id:66600522,chain,phase:2,pass,nolog,t:none,t:lowercase,skip:1,rev:3,severity:2,tag:'OtherApps'"
SecRule REQUEST_METHOD "@streq get" \
	"chain,setvar:'SESSION.gecko_cms=1',expirevar:'SESSION.gecko_cms=300',t:none,t:lowercase"
SecRule SESSION:gecko_cms "@eq 1" \
	"t:none"

SecRule ARGS_GET:p "@streq user" \
	"id:66600523,chain,msg:'POL-2015-1424',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'OtherApps'"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:gecko_cms "!@eq 1" \
	"t:none"


# CVE: CVE-2015-5335
# CVSS: 4.3
# Publish: 2016-02-22T05:59:00
# Cross-site request forgery (CSRF) vulnerability in admin/registration/register.php in Moodle through 2.6.11, 2.7.x before 2.7.11, 2.8.x before 2.8.9, and 2.9.x before 2.9.3 allows remote attackers to hijack the authentication of administrators for requests that send statistics to an arbitrary hub URL.
SecRule REQUEST_FILENAME "@endsWith admin/registration/register.php" \
	"id:66600524,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.moodle_rg=1',setvar:'SESSION.TIMEOUT=300',expirevar:'SESSION.moodle_rg=300',t:none,t:lowercase"

SecRule SESSION:moodle_rg "@eq 1" \
	"id:66600525,phase:2,pass,nolog,skip:1,rev:2,severity:2,tag:'OtherApps'"

SecRule REQUEST_FILENAME "@endsWith admin/registration/register.php" \
	"id:66600526,chain,msg:'POL-2015-5335',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:moodle_rg "!@eq 1" \
	"t:none"


# CVE: CVE-2015-2679
# CVSS: 7.5
# Publish: 2015-03-23T16:59:00
# Multiple SQL injection vulnerabilities in MetalGenix GeniXCMS before 0.0.2 allow remote attackers to execute arbitrary SQL commands via the (1) page parameter to index.php or (2) username parameter to gxadmin/login.php.
SecRule &REQUEST_COOKIES:GeniXCMS "@ge 1" \
	"id:66600527,chain,msg:'POL-2015-2679',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@rx \'" \
	"t:none,t:urlDecodeUni,t:lowercase"

SecRule REQUEST_FILENAME "@contains /gxadmin/login.php" \
	"id:66600528,chain,msg:'POL-2015-2679',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:username "@rx \'" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2015-8831
# CVSS: 4.3
# Publish: 2017-02-09T15:59:00
# Cross-site scripting (XSS) vulnerability in admin/comments.php in Dotclear before 2.8.2 allows remote attackers to inject arbitrary web script or HTML via the author name in a comment.
SecRule &REQUEST_COOKIES:dcxd "@ge 1" \
	"id:66600529,chain,msg:'POL-2015-8831',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_BASENAME "@streq comments.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:author "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-5104
# CVSS: 7.5
# Publish: 2014-07-28T15:55:00
# Multiple SQL injection vulnerabilities in ol-commerce 2.1.1 allow remote attackers to execute arbitrary SQL commands via the (1) a_country parameter in a process action to affiliate_signup.php, (2) affiliate_banner_id parameter to affiliate_show_banner.php, (3) country parameter in a process action to create_account.php, or (4) entry_country_id parameter in an edit action to admin/create_account.php.
SecRule &REQUEST_COOKIES:OLCsid "@ge 1" \
	"id:66600530,chain,msg:'POL-2014-5104',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith olcommerce/admin/create_account.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule ARGS_POST:entry_country_id "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlentityDecode"

SecRule REQUEST_FILENAME "@endsWith olcommerce/create_account.php" \
	"id:66600531,chain,msg:'POL-2014-5104',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:action "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:country "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith olcommerce/affiliate_signup.php" \
	"id:66600532,chain,msg:'POL-2014-5104',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:a_country "@contains '" \
	"t:none,t:urlDecodeuni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith olcommerce/affiliate_show_banner.php" \
	"id:66600533,chain,msg:'POL-2014-5104',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:affiliate_banner_id "@rx \D" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-9242
# CVSS: 6.5
# Publish: 2016-11-07T11:59:00
# Multiple SQL injection vulnerabilities in the update method in framework/modules/core/controllers/expRatingController.php in Exponent CMS 2.4.0 allow remote authenticated users to execute arbitrary SQL commands via the (1) content_type or (2) subtype parameter.
SecRule ARGS_POST:controller "@streq expratingcontroller" \
	"id:66600534,chain,msg:'POL-2016-9242',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:content_type|ARGS_POST:subtype "@contains '" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2016-0782
# CVSS: 3.5
# Publish: 2016-08-05T15:59:00
# The administration web console in Apache ActiveMQ 5.x before 5.11.4, 5.12.x before 5.12.3, and 5.13.x before 5.13.2 allows remote authenticated users to conduct cross-site scripting (XSS) attacks and consequently obtain sensitive information from a Java memory dump via vectors related to creating a queue.
SecRule REQUEST_BASENAME "@within createsubscriber.action createdestination.action" \
	"id:66600535,chain,msg:'POL-2016-0782',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_HEADERS:Authorization|&REQUEST_COOKIES:JSESSIONID "@ge 1" \
	"chain,t:none"
SecRule ARGS:JMSDestination|ARGS:subscriberName "@rx \"" \
	"t:none,t:urlDecodeUni"

SecRule &REQUEST_HEADERS:Authorization|&REQUEST_COOKIES:JSESSIONID "@ge 1" \
	"id:66600536,chain,msg:'POL-2016-0782',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@contains /api/jolokia" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule REQUEST_BODY "@contains mbean:com.sun.management:type=hotspotdiagnostic" \
	"chain,t:none,t:urlDecodeUni,t:cmdLine,t:removeWhitespace"
SecRule REQUEST_BODY "@contains operation:dumpheap" \
	"t:none,t:urlDecodeUni,t:cmdLine,t:removeWhitespace"


# CVE: CVE-2013-1804
# CVSS: 4.3
# Publish: 2014-04-29T20:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in PHP-Fusion before 7.02.06 allow remote attackers to inject arbitrary web script or HTML via the (1) highlight parameter to forum/viewthread.php; or remote authenticated users with certain permissions to inject arbitrary web script or HTML via the (2) user_list or (3) user_types parameter to messages.php; (4) message parameter to infusions/shoutbox_panel/shoutbox_admin.php; (5) message parameter to administration/news.php; (6) panel_list parameter to administration/panel_editor.php; (7) HTTP User Agent string to administration/phpinfo.php; (8) "__BBCODE__" parameter to administration/bbcodes.php; errorMessage parameter to (9) article_cats.php, (10) download_cats.php, (11) news_cats.php, or (12) weblink_cats.php in administration/, when error is 3; or (13) body or (14) body2 parameter to administration/articles.php.
SecRule REQUEST_FILENAME "@endsWith forum/viewthread.php" \
	"id:66600537,chain,msg:'POL-2013-1804',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES "@rx ^fusion" \
	"chain,t:none"
SecRule &ARGS_GET:thread_id "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:highlight "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith files/messages.php" \
	"id:66600538,chain,msg:'POL-2013-1804',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES "@rx ^fusion" \
	"chain,t:none"
SecRule &ARGS_GET:msg_send "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:user_list|ARGS_POST:user_types "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule &ARGS_GET:aid "@ge 1" \
	"id:66600539,chain,msg:'POL-2013-1804',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith shoutbox_panel/shoutbox_admin.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule REQUEST_COOKIES_NAMES "@rx ^fusion" \
	"chain,t:none"
SecRule ARGS_GET:page "@contains settings" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:message "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule &ARGS_GET:aid "@ge 1" \
	"id:66600540,chain,msg:'POL-2013-1804',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith administration/news.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule REQUEST_COOKIES_NAMES "@rx ^fusion" \
	"chain,t:none"
SecRule &ARGS_GET:error "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:message "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule &ARGS_GET:aid "@ge 1" \
	"id:66600541,chain,msg:'POL-2013-1804',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith administration/panel_editor.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule REQUEST_COOKIES_NAMES "@rx ^fusion" \
	"chain,t:none"
SecRule ARGS_POST:panel_list[] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule &ARGS_GET:aid "@ge 1" \
	"id:66600542,chain,msg:'POL-2013-1804',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith administration/phpinfo.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule REQUEST_COOKIES_NAMES "@rx ^fusion" \
	"chain,t:none"
SecRule REQUEST_HEADERS:User-Agent "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule &ARGS_GET:aid "@ge 1" \
	"id:66600543,chain,msg:'POL-2013-1804',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith administration/bbcodes.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule REQUEST_COOKIES_NAMES "@rx ^fusion" \
	"chain,t:none"
SecRule ARGS_GET:__BBCODE__[0][description]|ARGS_GET:__BBCODE__[0][usage] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule &ARGS_GET:aid "@ge 1" \
	"id:66600544,chain,msg:'POL-2013-1804',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@pm administration/article_cats.php administration/download_cats.php administration/news_cats.php administration/weblink_cats.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule REQUEST_COOKIES_NAMES "@rx ^fusion" \
	"chain,t:none"
SecRule &ARGS_GET:error "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:errorMessage "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule &ARGS_GET:aid "@ge 1" \
	"id:66600545,chain,msg:'POL-2013-1804',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith administration/articles.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule ARGS_POST:body|ARGS_POST:body2 "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-7708
# CVSS: 4.3
# Publish: 2015-10-05T15:59:00
# Cross-site scripting (XSS) vulnerability in 4images 1.7.11 and earlier allows remote attackers to inject arbitrary web script or HTML via the cat_description parameter in an updatecat action to admin/categories.php.
SecRule REQUEST_FILENAME "@endsWith admin/categories.php" \
	"id:66600546,chain,msg:'POL-2015-7708',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:action "@pm updatecat savecat" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:cat_description "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-9751
# CVSS: 4.3
# Publish: 2016-12-01T11:59:00
# Cross-site scripting (XSS) vulnerability in the search results front end in Piwigo 2.8.3 allows remote attackers to inject arbitrary web script or HTML via the search parameter.
SecRule ARGS_GET:q "@contains <" \
	"id:66600547,chain,msg:'POL-2016-9751',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:4,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES|RESPONSE_HEADERS:Set-Cookie "@contains pwg_id" \
	"chain,t:none"
SecRule REQUEST_BASENAME "@streq qsearch.php" \
	"t:none,t:lowercase"


# CVE: CVE-2016-4803
# CVSS: 5
# Publish: 2016-06-30T17:59:00
# CRLF injection vulnerability in the send email functionality in dotCMS before 3.3.2 allows remote attackers to inject arbitrary email headers via CRLF sequences in the subject. <a href="https://cwe.mitre.org/data/definitions/93.html">CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')</a>
SecRule REQUEST_BASENAME "@streq sendemail" \
	"id:66600548,chain,msg:'POL-2016-4803',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:from "@ge 1" \
	"chain,t:none"
SecRule &ARGS_POST:to "@ge 1" \
	"chain,t:none"
SecRule &REQUEST_COOKIES:_JSESSIONID "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:subject "@rx (?:\n|\r)" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-5076
# CVSS: 4.3
# Publish: 2015-09-29T19:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in X2Engine X2CRM before 5.0.9 allow remote attackers to inject arbitrary web script or HTML via the (1) version parameter in protected/views/admin/formEditor.php; the (2) importId parameter in protected/views/admin/rollbackImport.php; the (3) bc, (4) fg, (5) bgc, or (6) font parameter in protected/views/site/listener.php; the (7) Services[*] parameter in protected/components/views/webForm.php; the (8) file parameter in protected/components/TranslationManager.php; the (9) x2_key parameter in protected/tests/webscripts/x2WebTrackingTestPages/customWebLeadCaptureScriptTest.php; the (10) id parameter in protected/modules/contacts/controllers/ContactsController.php; or the (11) lastEventId parameter to index.php/profile/getEvents.
SecRule REQUEST_BASENAME "@streq createwebform" \
	"id:66600549,chain,msg:'POL-2015-5076',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:name "@contains <" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_BASENAME "@streq rollbackimport" \
	"id:66600550,chain,msg:'POL-2015-5076',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:importId "@rx \D" \
	"t:none"

SecRule REQUEST_BASENAME "@streq getevents" \
	"id:66600551,chain,msg:'POL-2015-5076',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:lastEventId "@rx \D" \
	"t:none"


# CVE: CVE-2014-8488
# CVSS: 4.3
# Publish: 2014-12-10T01:59:00
# Cross-site scripting (XSS) vulnerability in the administrator panel in Yourls 1.7 allows remote attackers to inject arbitrary web script or HTML via a URL that is processed by the Shorten functionality.
SecRule REQUEST_COOKIES_NAMES "@contains yourls_" \
	"id:66600552,chain,msg:'POL-2014-8488',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:url|ARGS_GET:title "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-0225
# CVSS: 2.1
# Publish: 2013-03-19T14:55:00
# Cross-site scripting (XSS) vulnerability in the User Relationships module 6.x-1.x before 6.x-1.4 and 7.x-1.x before 7.x-1.0-alpha5 for Drupal allows remote authenticated users with the "administer user relationships" permission to inject arbitrary web script or HTML via a relationship name.
SecRule TX:drupal "@eq 1" \
	"id:66600553,chain,msg:'POL-2013-0225',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:form_id "@contains user_relationships_admin_type_edit" \
	"chain,t:none,t:lowercase"
SecRule ARGS:name "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2015-6915
# CVSS: 7.5
# Publish: 2015-09-11T16:59:00
# SQL injection vulnerability in Montala Limited ResourceSpace 7.3.7009 and earlier allows remote attackers to execute arbitrary SQL commands via the "user" cookie to plugins/feedback/pages/feedback.php.
SecRule REQUEST_FILENAME "@endsWith feedback/pages/feedback.php" \
	"id:66600554,chain,msg:'POL-2015-6915',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES:user "@rx \'" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2016-9152
# CVSS: 4.3
# Publish: 2016-12-05T18:59:00
# Cross-site scripting (XSS) vulnerability in ecrire/exec/plonger.php in SPIP 3.1.3 allows remote attackers to inject arbitrary web script or HTML via the rac parameter.
SecRule ARGS_GET:rac "@contains '" \
	"id:66600555,chain,msg:'POL-2016-9152',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:spip_admin|&REQUEST_COOKIES:spip_session "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:exec "@streq plonger" \
	"t:none,t:lowercase"


# CVE: CVE-2016-9481
# CVSS: 7.5
# Publish: 2016-11-29T23:59:00
# In framework/modules/core/controllers/expCommentController.php of Exponent CMS 2.4.0, content_id input is passed into showComments. The method showComments is defined in the expCommentControllercontroller with the parameter '$this->params['content_id']' used directly in SQL. Impact is a SQL injection.
SecRule REQUEST_URI "@contains expcomment/showcomments/content_id/" \
	"id:66600556,chain,msg:'POL-2016-9481',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule MATCHED_VAR "!@rx content_id\/(?:\d+$)?$" \
	"t:none,t:lowercase,t:removeWhitespace"


# CVE: CVE-2014-5257
# CVSS: 4.3
# Publish: 2014-11-06T15:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in Forma Lms before 1.2.1 p01 allow remote attackers to inject arbitrary web script or HTML via the (1) id_custom parameter in an amanmenu request or (2) id_game parameter in an alms/games/edit request to appCore/index.php.
SecRule ARGS_GET:r "@contains alms/games/edit" \
	"id:66600557,chain,msg:'POL-2014-5257',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:id_game "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:modname "@streq amanmenu" \
	"id:66600558,chain,msg:'POL-2014-5257',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:op "@streq modcustom" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:id_custom "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-1459
# CVSS: 6.5
# Publish: 2014-02-11T17:55:00
# SQL injection vulnerability in dg-admin/index.php in doorGets CMS 5.2 and earlier allows remote authenticated administrators to execute arbitrary SQL commands via the _position_down_id parameter.  NOTE: this can be leveraged using CSRF to allow remote attackers to execute arbitrary SQL commands.
#5000255
SecRule REQUEST_URI "!@rx /dg-admin/" \
        "id:66600559,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000255"

SecMarker BEGIN-RULE5000255
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600560,chain,msg:'POL-2014-1459',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:_position_down_id "@rx \D" "

SecMarker END-RULE5000255


# CVE: CVE-2014-1401
# CVSS: 6.5
# Publish: 2014-02-11T17:55:00
# Multiple SQL injection vulnerabilities in AuraCMS 2.3 and earlier allow remote authenticated users to execute arbitrary SQL commands via the (1) search parameter to mod/content/content.php or (2) CLIENT_IP, (3) X_FORWARDED_FOR, (4) X_FORWARDED, (5) FORWARDED_FOR, or (6) FORWARDED HTTP header to index.php.
#5000254
SecRule REQUEST_URI "!@rx /index\.php" \
        "id:66600561,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000254"

SecMarker BEGIN-RULE5000254
SecRule REQUEST_HEADERS:CLIENT_IP|REQUEST_HEADERS:FORWARDED_FOR|REQUEST_HEADERS:X_FORWARDED|REQUEST_HEADERS:X_FORWARDED_FOR "@rx \'|\"" \
        "id:66600562,msg:'POL-2014-1401',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"

SecRule REQUEST_HEADERS:FORWARDED "@rx \'" \
        "id:66600563,msg:'POL-2014-1401',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"

SecMarker END-RULE5000254


# CVE: CVE-2014-1403
# CVSS: 4.3
# Publish: 2014-02-05T15:10:00
# Cross-site scripting (XSS) vulnerability in name.html in easyXDM before 2.4.19 allows remote attackers to inject arbitrary web script or HTML via the location.hash value.
#5000252
SecRule REQUEST_URI "!@rx /name\.html" \
        "id:66600564,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000252"

SecMarker BEGIN-RULE5000252
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600565,chain,msg:'POL-2014-1403',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule QUERY_STRING "@rx .*\#\_.*javascript" \
        "t:none,t:urlDecodeUni"

SecMarker END-RULE5000252


# CVE: CVE-2012-6642
# CVSS: 4.3
# Publish: 2014-04-08T14:22:00
# Cross-site scripting (XSS) vulnerability in ClipBucket 2.6 allows remote attackers to inject arbitrary web script or HTML via the type parameter to view_channel.php.  NOTE: the provenance of this information is unknown; the details are obtained solely from third party information.
SecRule REQUEST_URI "view_channel\.php" \
	"id:66600566,chain,msg:'POL-2012-6642',deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:type "[^a-zA-Z]{1,}" "


# CVE: CVE-2012-6643
# CVSS: 7.5
# Publish: 2014-04-08T14:22:00
# Multiple SQL injection vulnerabilities in the update_counter function in includes/functions.php in ClipBucket 2.6 allow remote attackers to execute arbitrary SQL commands via the time parameter to (1) videos.php or (2) channels.php.  NOTE: some of these details are obtained from third party information.
SecRule REQUEST_URI "channels\.php|videos\.php" \
	"id:66600567,chain,msg:'POL-2012-6643',deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:time "[^a-zA-Z_]{1,}" "


# CVE: CVE-2014-3783
# CVSS: 6
# Publish: 2014-05-22T15:13:00
# SQL injection vulnerability in admin/categories.php in Dotclear before 2.6.3 allows remote authenticated users with the manage categories permission to execute arbitrary SQL commands via the categories_order parameter.
# SecRule REQUEST_FILENAME "@endsWith admin/categories.php" \
# 	"id:66600568,chain,msg:'POL-2014-3783',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:4,severity:2,tag:'OtherApps'"
# SecRule ARGS:categories_order "@rx \"(?:item_id|left|right)\":(?!(?:null|\"\d+\"|\d+)(?:,|}))" \
# 	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,t:removeWhitespace"


# CVE: CVE-2012-6644
# CVSS: 4.3
# Publish: 2014-04-08T14:22:00
# Multiple cross-site scripting (XSS) vulnerabilities in ClipBucket 2.6 allow remote attackers to inject arbitrary web script or HTML via the (1) cat parameter to channels.php, (2) collections.php, (3) groups.php, or (4) videos.php; (5) query parameter to search_result.php; or (6) type parameter to view_collection.php or (7) view_item.php.
SecRule REQUEST_URI "(?:channels|collections|groups|search_result|videos|view_collection|view_item)\.php" \
	"id:66600569,chain,msg:'POL-2012-6644',deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,multiMatch,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:cat|ARGS_GET:query|ARGS_GET:type "@rx \"" "


# CVE: CVE-2013-7346
# CVSS: 6.8
# Publish: 2014-03-27T16:55:00
# Cross-site request forgery (CSRF) vulnerability in Symphony CMS before 2.3.2 allows remote attackers to hijack the authentication of administrators for requests that conduct SQL injection attacks via the sort parameter to system/authors/, related to CVE-2013-2559.
#5000314
SecRule REQUEST_URI "!@rx /symphony/system/authors" \
        "id:66600570,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000314"

SecMarker BEGIN-RULE5000314
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600571,chain,phase:2,pass,nolog,rev:1,severity:2,tag:'OtherApps'"
SecRule QUERY_STRING "@rx ^$" \
        "setvar:'SESSION.TIMEOUT=1200',setvar:'SESSION.symphony=1',expirevar:'SESSION.symphony=1200',t:none,t:urlDecodeUni"

SecRule SESSION:symphony "@eq 1" \
        "id:66600572,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'OtherApps'"

SecRule REQUEST_METHOD "@streq GET" \
        "id:66600573,chain,msg:'POL-2013-7346',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:order|ARGS_GET:sort "@rx ." \
        "t:none,t:urlDecodeUni"

SecMarker END-RULE5000314

# CVE: CVE-2013-4430
# CVSS: 4.3
# Publish: 2014-05-19T14:55:00
# Cross-site scripting (XSS) vulnerability in Mahara before 1.5.12, 1.6.x before 1.6.7, and 1.7.x before 1.7.3 allows remote attackers to inject arbitrary web script or HTML via the Host header to lib/web.php.
SecRule ARGS_POST:title "@rx \"" \
	"id:66600574,chain,msg:'POL-2013-4430',phase:2,deny,status:403,log,t:none,t:htmlEntityDecode,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "/artefact/internal/editnote\.php" "


# CVE: CVE-2014-5266
# CVSS: 5
# Publish: 2014-08-18T11:15:00
# The Incutio XML-RPC (IXR) Library, as used in WordPress before 3.9.2 and Drupal 6.x before 6.33 and 7.x before 7.31, does not limit the number of elements in an XML document, which allows remote attackers to cause a denial of service (CPU consumption) via a large document, a different vulnerability than CVE-2014-5265.
#5000311
SecRule REQUEST_URI "!@rx /xmlrpc\.php" \
        "id:66600575,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000311"

SecMarker BEGIN-RULE5000311
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600576,chain,msg:'POL-2014-5266',phase:2,deny,status:403,log,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_BODY "@contains ENTITY" \
        "chain"
SecRule REQUEST_BODY "@rx (\;.*?\&.+?){100,}?" "

SecRule REQUEST_HEADERS:User-Agent "WinHttp\.WinHttpRequest\.5" \
        "id:66600577,chain,msg:'POL-2014-5266',deny,status:403,t:none,t:removeWhitespace,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule &REQUEST_HEADERS:Referer "@eq 0" \
        "chain"
SecRule &REQUEST_HEADERS:User-Agent "@eq 0" "

SecMarker END-RULE5000311

# CVE: CVE-2016-10083
# CVSS: 4.3
# Publish: 2016-12-30T07:59:00
# Cross-site scripting (XSS) vulnerability in admin/plugin.php in Piwigo through 2.8.3 allows remote attackers to inject arbitrary web script or HTML via a crafted filename that is mishandled in a certain error case.
SecRule &REQUEST_COOKIES_NAMES:pwg_id "@ge 1" \
	"id:66600578,chain,msg:'POL-2016-10083',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith ws.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:method "@streq pwg.images.upload" \
	"chain,t:none,t:lowercase"
SecRule FILES:file "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-2945
# CVSS: 6.5
# Publish: 2014-04-02T16:17:00
# SQL injection vulnerability in blogs/admin.php in b2evolution before 4.1.7 allows remote authenticated administrators to execute arbitrary SQL commands via the show_statuses[] parameter.  NOTE: this can be leveraged using CSRF to allow remote unauthenticated attackers to execute arbitrary SQL commands.
SecRule REQUEST_FILENAME "@endsWith blogs/admin.php" \
	"id:66600579,chain,msg:'POL-2013-2945',phase:2,deny,status:403,log,t:none,t:normalisePath,t:lowercase,t:urlDecodeUni,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:ctrl "@contains items" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:show_statuses[] "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-5916
# CVSS: 4.3
# Publish: 2014-05-08T15:55:00
# Cross-site scripting (XSS) vulnerability in falha.php in the Bradesco Gateway plugin 2.0 for Wordpress, as used in the WP e-Commerce plugin, allows remote attackers to inject arbitrary web script or HTML via the QUERY_STRING.
SecRule REQUEST_FILENAME "@endswith view_all_set.php" \
	"id:66600580,chain,msg:'POL-2013-5916',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:view_type "@streq advanced" \
	"chain,t:none,t:lowercase"
SecRule &REQUEST_COOKIES:MANTIS_STRING_COOKIE "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:match_type "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith falha.php" \
	"id:66600581,chain,msg:'POL-2013-5916',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@contains /wp-content/plugins/" \
	"chain,t:none,t:lowercase,t:urlDecodeUni,t:normalizePath"
SecRule REQUEST_URI "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-3639
# CVSS: 4.3
# Publish: 2014-02-05T15:10:00
# Multiple cross-site scripting (XSS) vulnerabilities in Xaraya 2.4.0-b1 and earlier allow remote attackers to inject arbitrary web script or HTML via the (1) id, (2) interface, (3) name, or (4) tabmodule parameter to index.php.
#5000246
SecRule REQUEST_URI "!@rx /index\.php" \
        "id:66600582,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000246"

SecMarker BEGIN-RULE5000246
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600583,chain,msg:'POL-2013-3639',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:func "!@rx ^$" \
        "chain"
SecRule ARGS_GET:id|ARGS_GET:interface|ARGS_GET:name|ARGS_GET:tabmodule "@rx <" "

SecMarker END-RULE5000246


# CVE: CVE-2014-4850
# CVSS: 7.5
# Publish: 2014-07-10T16:55:00
# SQL injection vulnerability in index.php in FoeCMS allows remote attackers to execute arbitrary SQL commands via the i parameter.
SecRule REQUEST_COOKIES_NAMES "@streq foecms_lang" \
	"id:66600584,chain,msg:'POL-2014-4850',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:removeWhitespace,skip:1,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:i|REQUEST_COOKIES:foecms_lang "!@rx \d" \
	"t:none,t:urlDecodeUni,t:removeWhitespace"

SecRule RESPONSE_HEADERS:Set-Cookie "@rx ^foecms_lang=(.*);\ expires.*$" \
	"id:66600585,chain,msg:'POL-2014-4850',phase:3,capture,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule TX:1 "!@rx ^\d$" "


# CVE: CVE-2014-0010
# CVSS: 6.8
# Publish: 2014-01-20T15:14:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in user/profile/index.php in Moodle through 2.2.11, 2.3.x before 2.3.11, 2.4.x before 2.4.8, 2.5.x before 2.5.4, and 2.6.x before 2.6.1 allow remote attackers to hijack the authentication of administrators for requests that delete (1) categories or (2) fields.
#5000242
SecRule REQUEST_URI "!@rx /user/profile/index\.php" \
        "id:66600586,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000242"

SecMarker BEGIN-RULE5000242
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600587,chain,phase:2,pass,nolog,rev:1,severity:2,tag:'OtherApps'"
SecRule QUERY_STRING "@rx ^$" \
        "setvar:'SESSION.TIMEOUT=3600',setvar:'SESSION.Moodle=1',expirevar:'SESSION.Moodle=3600',t:none,t:urlDecodeUni"

SecRule SESSION:Moodle "@eq 1" \
        "id:66600588,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'OtherApps'"

SecRule REQUEST_METHOD "@streq GET" \
        "id:66600589,chain,msg:'POL-2014-0010',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@streq deletefield" \
        "t:none,t:urlDecodeUni"

SecMarker END-RULE5000242


# CVE: CVE-2014-4689
# CVSS: 5
# Publish: 2014-07-02T10:35:00
# Absolute path traversal vulnerability in pkg_edit.php in pfSense before 2.1.4 allows remote attackers to read arbitrary XML files via a full pathname in the xml parameter.
SecRule REQUEST_FILENAME "@endsWith pkg_mgr_install.php" \
	"id:66600590,chain,msg:'POL-2014-4689',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:id|ARGS:mode|ARGS:pkg "@rx [\\\\|\||\.|\"|\0|'|\/]" \
	"t:none,t:urlDecodeUni,multiMatch"

SecRule REQUEST_FILENAME "@endsWith pkg_edit.php" \
	"id:66600591,chain,msg:'POL-2014-4689',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:xml "@rx [\\\\|\//\.|\0]" \
	"t:none,t:urlDecodeUni,multiMatch"

SecRule REQUEST_FILENAME "@endsWith system_firmware_restorefullbackup.php" \
	"id:66600592,chain,msg:'POL-2014-4689',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:downloadbackup "@rx [\\\\|\//\.|\0]" \
	"t:none,t:urlDecodeUni,multiMatch"


# CVE: CVE-2015-8793
# CVSS: 4.3
# Publish: 2016-01-29T19:59:00
# Cross-site scripting (XSS) vulnerability in program/include/rcmail.php in Roundcube before 1.0.6 and 1.1.x before 1.1.2 allows remote attackers to inject arbitrary web script or HTML via the _mbox parameter in a mail task to the default URL, a different vulnerability than CVE-2011-2937.
SecRule ARGS_GET:_mbox "@contains <" \
	"id:66600593,chain,msg:'POL-2015-8793',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:_action "@ge 1" \
	"chain,t:none"
SecRule &ARGS_GET:_remote "@ge 1" \
	"chain,t:none"
SecRule REQUEST_COOKIES_NAMES "@contains roundcube" \
	"t:none"


# CVE: CVE-2015-6655
# CVSS: 6.8
# Publish: 2015-08-31T19:59:00
# Cross-site request forgery (CSRF) vulnerability in Pligg CMS 2.0.2 allows remote attackers to hijack the authentication of administrators for requests that add an administrator via a request to admin/admin_users.php.
SecRule REQUEST_FILENAME "@endsWith admin/admin_users.php" \
	"id:66600594,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:mnm_user "@ge 1" \
	"chain,t:none"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.pligg_user=1',expirevar:'SESSION.pligg_user=300',t:none,t:lowercase"

SecRule SESSION:pligg_user "@eq 1" \
	"id:66600595,phase:2,pass,nolog,t:none,skip:1,rev:1,severity:2,tag:'OtherApps'"

SecRule REQUEST_FILENAME "@endsWith admin/admin_users.php" \
	"id:66600596,chain,msg:'POL-2015-6655',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:mnm_user "@ge 1" \
	"chain,t:none"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:pligg_user "!@eq 1" \
	"t:none"


# CVE: CVE-2014-2736
# CVSS: 7.5
# Publish: 2014-04-24T14:55:00
# Multiple SQL injection vulnerabilities in MODX Revolution before 2.2.14 allow remote attackers to execute arbitrary SQL commands via the (1) session ID (PHPSESSID) to index.php or remote authenticated users to execute arbitrary SQL commands via the (2) user parameter to connectors/security/message.php or (3) id parameter to manager/index.php.
SecRule REQUEST_FILENAME "@contains /manager/" \
	"id:66600597,chain,msg:'POL-2014-2736',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:id "@rx \D" \
	"t:none"

SecRule REQUEST_FILENAME "@endsWith connectors/security/message.php" \
	"id:66600598,chain,msg:'POL-2014-2736',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:HTTP_MODAUTH "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:user "@rx \D" \
	"t:none"


# CVE: CVE-2014-1914
# CVSS: 4.3
# Publish: 2014-02-07T15:48:00
# Multiple cross-site scripting (XSS) vulnerabilities in Command School Student Management System 1.06.01 allow remote attackers to inject arbitrary web script or HTML via the (1) topic parameter to sw/add_topic.php or (2) nick parameter to sw/chat/message.php.
#5000248
SecRule REQUEST_URI "!@rx /sw/chat/message\.php" \
        "id:66600599,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000247"

SecMarker BEGIN-RULE5000247
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600600,chain,msg:'POL-2014-1914',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:nick "@rx <" "

SecMarker END-RULE5000247

SecRule REQUEST_URI "!@rx /sw/add_topic\.php" \
        "id:66600601,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000248"

SecMarker BEGIN-RULE5000248
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600602,chain,msg:'POL-2014-1914',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:topic "@rx <" "

SecMarker END-RULE5000248


# CVE: CVE-2014-5451
# CVSS: 4.3
# Publish: 2014-11-06T18:55:00
# Cross-site scripting (XSS) vulnerability in manager/templates/default/header.tpl in MODX Revolution 2.3.1-pl and earlier allows remote attackers to inject arbitrary web script or HTML via the "a" parameter to manager/.  NOTE: this issue exists because of a CVE-2014-2080 regression.
SecRule REQUEST_URI "@contains /manager/" \
	"id:66600603,chain,msg:'POL-2014-5451',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:a "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-8773
# CVSS: 6.8
# Publish: 2014-12-03T18:59:00
# MODX Revolution 2.x before 2.2.15 allows remote attackers to bypass the cross-site request forgery (CSRF) protection mechanism by (1) omitting the CSRF token or via a (2) long string in the CSRF token parameter.
SecRule REQUEST_URI "@contains /manager/" \
	"id:66600604,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:a "@ge 1" \
	"chain,t:none"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.modx=1',expirevar:'SESSION.modx=300',t:none,t:lowercase"

SecRule SESSION:modx "@eq 1" \
	"id:66600605,phase:2,pass,nolog,skip:1,rev:2,severity:2,tag:'OtherApps'"

SecRule REQUEST_FILENAME "@endsWith connectors/security/profile.php" \
	"id:66600606,chain,msg:'POL-2014-8773',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:modx "!@eq 1" \
	"t:none"


# CVE: CVE-2014-8992
# CVSS: 4.3
# Publish: 2014-12-22T19:59:00
# Cross-site scripting (XSS) vulnerability in manager/assets/fileapi/FileAPI.flash.image.swf in MODX Revolution 2.3.2-pl allows remote attackers to inject arbitrary web script or HTML via the callback parameter.
SecRule REQUEST_FILENAME "@endsWith manager/assets/fileapi/fileapi.flash.image.swf" \
	"id:66600607,chain,msg:'POL-2014-8992',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:callback "@contains )" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-1475
# CVSS: 4.3
# Publish: 2015-02-04T16:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in my little forum 2.3.3, 2.2, and 1.7 allow remote attackers to inject arbitrary web script or HTML via the (1) page or (2) category parameter to forum.php or the (3) page or (4) order parameter to (a) board_entry.php or (b) forum_entry.php.
SecRule &REQUEST_COOKIES:/^mlf\w+$/ "@gt 0" \
	"id:66600608,chain,msg:'POL-2015-1475',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page|ARGS_GET:category|ARGS_GET:order|ARGS_POST:title|ARGS_POST:menu_linkname "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-10020
# CVSS: 7.5
# Publish: 2015-01-13T11:59:00
# SQL injection vulnerability in login.php in Simple e-document 1.31 allows remote attackers to execute arbitrary SQL commands via the username parameter.
SecRule ARGS_POST:op "@streq login" \
	"id:66600609,chain,msg:'POL-2014-10020',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:Submit "@streq login" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith login.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:username "@rx \'" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-5064
# CVSS: 4.3
# Publish: 2015-06-24T14:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in MySql Lite Administrator (mysql-lite-administrator) beta-1 allow remote attackers to inject arbitrary web script or HTML via the table_name parameter to (1) tabella.php, (2) coloni.php, or (3) insert.php or (4) num_row parameter to coloni.php.
SecRule REQUEST_FILENAME "@pm tabella.php coloni.php insert.php" \
	"id:66600610,chain,msg:'POL-2015-5064',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES:PHPSESSID "@rx ^[a-z0-9]{26}$" \
	"chain,t:none"
SecRule ARGS_GET:table_name "@contains <" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_FILENAME "@endsWith coloni.php" \
	"id:66600611,chain,msg:'POL-2015-5064',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES:PHPSESSID "@rx ^[a-z0-9]{26}$" \
	"chain,t:none"
SecRule ARGS_GET:num_row "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2013-2618
# CVSS: 4.3
# Publish: 2014-06-05T20:55:00
# Cross-site scripting (XSS) vulnerability in editor.php in Network Weathermap before 0.97b allows remote attackers to inject arbitrary web script or HTML via the map_title parameter.
SecRule REQUEST_FILENAME "@endsWith editor.php" \
	"id:66600612,chain,msg:'POL-2013-2618',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:mapname "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:map_title "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-8304
# CVSS: 4.3
# Publish: 2014-10-16T19:55:00
# Cross-site scripting (XSS) vulnerability in In-Portal CMS 5.2.0 and earlier allows remote attackers to inject arbitrary web script or HTML via the next_template parameter to admin/index.php.
SecRule ARGS_GET:env "@contains -login:" \
	"id:66600613,chain,msg:'POL-2014-8304',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:next_template "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-9599
# CVSS: 4.3
# Publish: 2015-01-16T15:59:00
# Cross-site scripting (XSS) vulnerability in the filemanager in b2evolution before 5.2.1 allows remote attackers to inject arbitrary web script or HTML via the fm_filter parameter to blogs/admin.php.
SecRule REQUEST_FILENAME "@contains blogs/admin.php" \
	"id:66600614,chain,msg:'POL-2014-9599',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:actionArray[filter] "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:fm_filter "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-6729
# CVSS: 4.3
# Publish: 2015-09-01T14:59:00
# Cross-site scripting (XSS) vulnerability in thumb.php in MediaWiki before 1.23.10, 1.24.x before 1.24.3, and 1.25.x before 1.25.2 allows remote attackers to inject arbitrary web script or HTML via the rel404 parameter, which is not properly handled in an error page.
SecRule REQUEST_FILENAME "@endsWith thumb.php" \
	"id:66600615,chain,msg:'POL-2015-6729',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:rel404 "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-9241
# CVSS: 4.3
# Publish: 2014-12-03T21:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in MyBB (aka MyBulletinBoard) 1.8.x before 1.8.2 allow remote attackers to inject arbitrary web script or HTML via the (1) type parameter to report.php, (2) signature parameter in a do_editsig action to usercp.php, or (3) title parameter in the style-templates module in an edit_template action or (4) file parameter in the config-languages module in an edit action to admin/index.php.
SecRule REQUEST_FILENAME "@endsWith report.php" \
	"id:66600616,chain,msg:'POL-2014-9241',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:my_post_key "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:action "@streq do_report" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_POST:pid "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:type "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith usercp.php" \
	"id:66600617,chain,msg:'POL-2014-9241',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:my_post_key "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:action "@streq do_editsig" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:signature "@rx '|\"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@contains /admin/index.php" \
	"id:66600618,chain,msg:'POL-2014-9241',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:my_post_key "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:module "@streq style-templates" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:action "@streq add_set" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:title "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@contains /admin/index.php" \
	"id:66600619,chain,msg:'POL-2014-9241',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:module "@streq config-languages" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:action "@streq edit" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:file "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-9240
# CVSS: 7.5
# Publish: 2014-12-03T21:59:00
# SQL injection vulnerability in member.php in MyBB (aka MyBulletinBoard) 1.8.x before 1.8.2 allows remote attackers to execute arbitrary SQL commands via the question_id parameter in a do_register action.
SecRule REQUEST_FILENAME "@endsWith member.php" \
	"id:66600620,chain,msg:'POL-2014-9240',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:action "@streq do_register" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:regsubmit "@streq submitregistration!" \
	"chain,t:none,t:lowercase,t:urlDecodeUni,t:removeWhitespace"
SecRule ARGS_POST:question_id "@contains '" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-2149
# CVSS: 3.5
# Publish: 2015-03-18T14:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the administrative backend in MyBB (aka MyBulletinBoard) before 1.8.4 allow remote authenticated users to inject arbitrary web script or HTML via the (1) MIME-type field in an add action in the config-attachment_types module to admin/index.php; (2) title or (3) short description field in an add action in the (a) config-mycode or (b) user-groups module to admin/index.php; (4) title field in an add action in the (c) forum-management or (d) tool-tasks module to admin/index.php; (5) name field in an add_set action in the style-templates module to admin/index.php; (6) title field in an add_template_group action in the style-templates module to admin/index.php; (7) name field in an add action in the config-post_icons module to admin/index.php; (8) "title to assign" field in an add action in the user-titles module to admin/index.php; or (9) username field in the config-banning module to admin/index.php.
SecRule &ARGS_POST:my_post_key "@eq 0" \
	"id:66600621,phase:2,pass,nolog,skip:5,rev:1,severity:2,tag:'OtherApps'"

SecRule ARGS_GET:module "@streq config-attachment_types" \
	"id:66600622,chain,msg:'POL-2015-2149',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@pm add edit" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:mimetype "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:module "@pm config-mycode user-groups forum-management tools-tasks user-titles" \
	"id:66600623,chain,msg:'POL-2015-2149',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@pm add edit" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:title|ARGS_POST:description "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:module "@streq style-templates" \
	"id:66600624,chain,msg:'POL-2015-2149',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@pm add_template_group edit_template_group add_set edit_set" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:title "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:module "@streq user-banning" \
	"id:66600625,chain,msg:'POL-2015-2149',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:username "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:module "@streq config-post_icons" \
	"id:66600626,chain,msg:'POL-2015-2149',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@pm add edit" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:name|ARGS_POST:path "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-7830
# CVSS: 3.5
# Publish: 2014-11-24T11:59:00
# Cross-site scripting (XSS) vulnerability in mod/feedback/mapcourse.php in the Feedback module in Moodle through 2.4.11, 2.5.x before 2.5.9, 2.6.x before 2.6.6, and 2.7.x before 2.7.3 allows remote authenticated users to inject arbitrary web script or HTML by leveraging the mod/feedback:mapcourse capability to provide a searchcourse parameter.
SecRule REQUEST_FILENAME "@endsWith mod/feedback/mapcourse.php" \
	"id:66600627,chain,msg:'POL-2014-7830',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:MoodleSession "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:searchcourse "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-2678
# CVSS: 4.3
# Publish: 2015-03-23T16:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in MetalGenix GeniXCMS before 0.0.2 allow remote attackers to inject arbitrary web script or HTML via the (1) cat parameter in the categories page to gxadmin/index.php or (2) page parameter to index.php.
SecRule REQUEST_FILENAME "@endsWith /gxadmin/index.php" \
	"id:66600628,chain,msg:'POL-2015-2678',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:GeniXCMS "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:cat "@contains <" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_COOKIES:GeniXCMS "@ge 1" \
	"id:66600629,chain,msg:'POL-2015-2678',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2013-7326
# CVSS: 4.3
# Publish: 2014-02-14T19:55:00
# Cross-site scripting (XSS) vulnerability in vTiger CRM 5.4.0 allows remote attackers to inject arbitrary web script or HTML via the (1) return_url parameter to modules\com_vtiger_workflow\savetemplate.php, or unspecified vectors to (2) deletetask.php, (3) edittask.php, (4) savetask.php, or (5) saveworkflow.php.
#5000249
SecRule REQUEST_URI "!@rx /index\.php" \
        "id:66600630,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000249"

SecMarker BEGIN-RULE5000249
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600631,chain,msg:'POL-2013-7326',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:return_url "@rx <|\"" "

SecMarker END-RULE5000249

# CVE: CVE-2014-9501
# CVSS: 3.5
# Publish: 2015-01-09T18:59:00
# Cross-site scripting (XSS) vulnerability in the Poll Chart Block module 7.x-1.x before 7.x-1.2 for Drupal allows remote authenticated users to inject arbitrary web script or HTML via a poll node title.
SecRule TX:drupal "@eq 1" \
	"id:66600632,chain,msg:'POL-2014-9501',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:form_id "@streq poll_node_form" \
	"chain,t:none,t:lowercase"
SecRule ARGS:title "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2014-3544
# CVSS: 3.5
# Publish: 2014-07-29T11:10:00
# Cross-site scripting (XSS) vulnerability in user/profile.php in Moodle through 2.3.11, 2.4.x before 2.4.11, 2.5.x before 2.5.7, 2.6.x before 2.6.4, and 2.7.x before 2.7.1 allows remote authenticated users to inject arbitrary web script or HTML via the Skype ID profile field.
SecRule REQUEST_FILENAME "@endsWith user/edit.php" \
	"id:66600633,chain,msg:'POL-2014-3544',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES "@streq MoodleSession" \
	"chain,t:none,t:urlDecodeUni"
SecRule ARGS_POST:skype "!@rx ^(?:live:|[a-z0-9,\._\-]){6,32}$" \
	"t:none,t:urlDecodeUni,t:compressWhitespace,t:lowercase,multiMatch"


# CVE: CVE-2014-3920
# CVSS: 6.8
# Publish: 2014-07-03T14:55:00
# Cross-site request forgery (CSRF) vulnerability in Kanboard before 1.0.6 allows remote attackers to hijack the authentication of administrators for requests that add an administrative user via a save action to the default URI.
#5000350
SecRule REQUEST_URI "!@rx /kan" \
        "id:66600634,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000350"

SecMarker BEGIN-RULE5000350
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600635,chain,phase:2,pass,setvar:'SESSION.TIMEOUT=3600',setvar:'SESSION.kan=1',expirevar:'SESSION.kan=3600',nolog,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:controller "@streq user" \
        "chain"
SecRule ARGS_GET:action "@streq create"

SecRule SESSION:kan "@eq 1" \
        "id:66600636,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'OtherApps'"

SecRule REQUEST_METHOD "@streq POST" \
        "id:66600637,chain,msg:'POL-2014-3920',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:controller "@streq user" \
        "chain"
SecRule ARGS_GET:action "@streq save" \
        "chain"
SecRule &ARGS_POST:username "@eq 1" \
        "chain"
SecRule &ARGS_POST:name "@eq 1" \
        "chain"
SecRule &ARGS_POST:password "@eq 1" "

SecRule ARGS_GET:table "@rx '|<" \
        "id:66600638,chain,msg:'POL-2014-3920',deny,status:403,log,t:none,t:htmlEntityDecode,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@contains db_triggers.php" \
        "t:none,t:urlDecodeUni,t:lowercase"

SecMarker END-RULE5000350

# CVE: CVE-2014-3549
# CVSS: 4.3
# Publish: 2014-07-29T11:10:00
# Cross-site scripting (XSS) vulnerability in the get_description function in lib/classes/event/user_login_failed.php in Moodle 2.7.x before 2.7.1 allows remote attackers to inject arbitrary web script or HTML via a crafted username that is improperly handled during the logging of an invalid login attempt.
SecRule REQUEST_FILENAME "@endsWith login/index.php" \
	"id:66600639,chain,msg:'POL-2014-3549',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:removeWhitespace,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &SESSION:moodlesession "@gt 0" \
	"chain"
SecRule ARGS_POST:username "@rx [^\w\-\.\@]" \
	"t:none,t:urlDecodeUni,t:compressWhitespace,t:lowercase,multiMatch"


# CVE: CVE-2013-4880
# CVSS: 4.3
# Publish: 2013-08-14T13:50:00
# Cross-site scripting (XSS) vulnerability in core/admin/modules/developer/modules/views/add.php in BigTree CMS 4.0 RC2 and earlier allows remote attackers to inject arbitrary web script or HTML via the module parameter.
SecRule REQUEST_URI "@contains admin/developer/modules/views/add" \
	"id:66600640,chain,msg:'POL-2013-4880',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:module "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-0297
# CVSS: 3.5
# Publish: 2014-03-14T15:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in ownCloud before 4.0.12 and 4.5.x before 4.5.7 allow remote authenticated administrators to inject arbitrary web script or HTML via the (1) site_name or (2) site_url parameter to apps/external/ajax/setsites.php.
SecRule ARGS_GET:getfile "@contains ajax/setsites.php" \
	"id:66600641,chain,msg:'POL-2013-0297',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:site_name[]|ARGS_POST:site_url[] "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-1470
# CVSS: 4.3
# Publish: 2014-02-05T15:10:00
# Cross-site scripting (XSS) vulnerability in calendar/index.php in the Calendar plugin in Geeklog before 1.8.2sr1 and 2.0.0 before 2.0.0rc2 allows remote attackers to inject arbitrary web script or HTML via the calendar_type parameter to submit.php.
SecRule REQUEST_FILENAME "@endsWith public_html/submit.php" \
	"id:66600642,chain,msg:'POL-2013-1470',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:type "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:calendar_type "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-6168
# CVSS: 4.3
# Publish: 2013-11-14T20:55:00
# Cross-site scripting (XSS) vulnerability in Zikula Application Framework before 1.3.6 allows remote attackers to inject arbitrary web script or HTML via the returnpage parameter to index.php.
SecRule REQUEST_FILENAME "@endsWith src/index.php" \
	"id:66600643,chain,msg:'POL-2013-6168',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:module "@contains users" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:func "@contains login" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:returnpage "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-5693
# CVSS: 4.3
# Publish: 2013-09-30T22:55:00
# Cross-site scripting (XSS) vulnerability in X2Engine X2CRM before 3.5 allows remote attackers to inject arbitrary web script or HTML via the model parameter to index.php/admin/editor.
SecRule REQUEST_FILENAME "@contains x2engine/index.php" \
	"id:66600644,chain,msg:'POL-2013-5693',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "@contains /admin/editor" \
	"chain,t:none,t:lowercase"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:model "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-9505
# CVSS: 3.5
# Publish: 2015-01-09T18:59:00
# Cross-site scripting (XSS) vulnerability in the School Administration module 7.x-1.x before 7.x-1.8 for Drupal allows remote authenticated users with permission to create or edit a class node to inject arbitrary web script or HTML via a node title.
SecRule TX:drupal "@eq 1" \
	"id:66600645,chain,msg:'POL-2014-9505',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:form_id "@streq class_node_form" \
	"chain,t:none,t:lowercase"
SecRule ARGS:title "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2015-6544
# CVSS: 4.3
# Publish: 2018-02-20T20:29:00
# Cross-site scripting (XSS) vulnerability in application/dashboard.class.inc.php in Combodo iTop before 2.2.0-2459 allows remote attackers to inject arbitrary web script or HTML via a dashboard title.
SecRule &REQUEST_COOKIES_NAMES:/^itop-([a-f0-9]{32})$/ "@ge 1" \
	"id:66600646,chain,msg:'POL-2015-6544',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith /pages/ajax.render.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule ARGS_POST:dashboard_id "@streq welcomemenupage" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:title "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-6012
# CVSS: 5.8
# Publish: 2015-09-28T02:59:00
# Multiple open redirect vulnerabilities in Web Reference Database (aka refbase) through 0.9.6 and bleeding-edge before 2015-01-08 allow remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via the referrer parameter. <a href="http://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a>
SecRule ARGS:referer "@contains :" \
	"id:66600647,chain,msg:'POL-2015-6012',phase:3,deny,status:403,log,t:none,t:urlDecodeUni,rev:2,severity:2,tag:'OtherApps'"
SecRule RESPONSE_STATUS "@streq 302" \
	"chain,t:none"
SecRule REQUEST_BASENAME "@within user_login.php user_logout.php modify.php user_options_modify.php user_validation.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_COOKIES_NAMES|RESPONSE_HEADERS:Set-Cookie "@contains phpsessid" \
	"t:none,t:lowercase"


# CVE: CVE-2013-5317
# CVSS: 3.5
# Publish: 2013-08-20T14:55:00
# Cross-site scripting (XSS) vulnerability in RiteCMS 1.0.0 allows remote authenticated users to inject arbitrary web script or HTML via the mode parameter to cms/index.php.
SecRule REQUEST_METHOD "@streq GET" \
	"id:66600648,chain,msg:'POL-2013-5317',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "cms/index\.php" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS:mode "@rx <script" \
	"t:none,t:urlDecodeUni,t:lowercase,t:removeWhitespace"


# CVE: CVE-2013-5121
# CVSS: 7.5
# Publish: 2013-08-14T15:55:00
# SQL injection vulnerability in PHPFox before 3.6.0 (build6) allows remote attackers to execute arbitrary SQL commands via the search[sort_by] parameter to user/browse/view_/.
SecRule REQUEST_FILENAME "@rx /user/browse/view_" \
	"id:66600649,chain,msg:'POL-2013-5121',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:search[sort_by] "@rx ^(?!^(asc|desc)$).+$" \
	"t:none,t:removeWhitespace,t:lowercase"


# CVE: CVE-2013-4948
# CVSS: 7.5
# Publish: 2013-07-29T23:27:00
# SQL injection vulnerability in view.php in Machform 2 allows remote attackers to execute arbitrary SQL commands via the element_2 parameter.
SecRule REQUEST_FILENAME "@endsWith view.php" \
	"id:66600650,chain,msg:'POL-2013-4948',phase:2,deny,status:403,log,t:none,t:lowercase,rev:5,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:id "@rx \d+" \
	"chain,t:none"
SecRule ARGS_POST:form_id "@rx \D" \
	"t:none"

SecRule REQUEST_FILENAME "@endsWith view.php" \
	"id:66600651,chain,msg:'POL-2013-4948',phase:4,deny,status:403,log,t:none,t:lowercase,rev:5,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:id "@rx \d+" \
	"chain,t:none"
SecRule RESPONSE_BODY "@contains `ap_form_" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule MATCHED_VAR "@rx ^INSERT INTO \`ap_form_\d+\` \(\`ip_address\`,\`date_created\`\) VALUES.*Query failed: Table \'\w+.ap_form_\d+\' doesn\'t exist$" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2013-5003
# CVSS: 6.5
# Publish: 2013-07-31T13:20:00
# Multiple SQL injection vulnerabilities in phpMyAdmin 3.5.x before 3.5.8.2 and 4.0.x before 4.0.4.2 allow remote authenticated users to execute arbitrary SQL commands via (1) the scale parameter to pmd_pdf.php or (2) the pdf_page_number parameter to schema_export.php.
SecRule REQUEST_METHOD "@streq POST" \
	"id:66600652,chain,msg:'POL-2013-5003',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "pmd_pdf\.php|schema_export\.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS:pdf_page_number|ARGS:scale "!@rx ^[0-9]+$" "


# CVE: CVE-2013-4998
# CVSS: 5
# Publish: 2013-07-31T13:20:00
# phpMyAdmin 3.5.x before 3.5.8.2 and 4.0.x before 4.0.4.2 allows remote attackers to obtain sensitive information via an invalid request, which reveals the installation path in an error message, related to pmd_common.php and other files.
SecRule REQUEST_FILENAME "libraries\/(?:error(?:_handler)?\.class|auth\/swekey\/swekey\.auth\.lib|bookmark\.lib|common\.inc|config\.class|config\.default|data_drizzle\.inc|data_mysql\.inc|dbi\/drizzle-wrappers\.lib|display_tbl\.lib|engines\/(?:bdb|berkeleydb|binlog|innobase|innodb|memory|merge|mrg_myisam|myisam|ndbcluster|pbms|pbxt)\.lib|list_database\.class|pdf\.class|pma|pmd_common|recenttable\.class|schema\/pdf_relation_schema\.class)\.php" \
	"id:66600653,msg:'POL-2013-4998',phase:1,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"


# CVE: CVE-2013-5318
# CVSS: 7.5
# Publish: 2013-08-20T14:55:00
# SQL injection vulnerability in Ginkgo CMS 5.0 allows remote attackers to execute arbitrary SQL commands via the rang parameter to index.php.
# SecRule ARGS "@pm unionselect union/*" \
# 	"id:66600654,chain,msg:'POL-2013-5318',phase:2,deny,status:403,log,logdata:'%{MATCHED_VAR}',t:none,t:removeWhitespace,rev:4,severity:2,tag:'OtherApps'"
# SecRule ARGS|!ARGS:/FCKeditor/|!ARGS:/^jform/|!ARGS:/^para/|!ARGS:/appendTo/|!ARGS:/database/|!ARGS:/description/|!ARGS:/insertAfter/|!ARGS:/insertBefore/|!ARGS:/installcode/|!ARGS:/message/|!ARGS:/msg/|!ARGS:/narrative/|!ARGS:/php/|!ARGS:/prependTo/|!ARGS:/prevObject/|!ARGS:/replaceAll/|!ARGS:/report/|!ARGS:/sql/|!ARGS:/teaser/|!ARGS:/text/|!ARGS:/txt/|!ARGS:Db_submit|!ARGS:Post|!ARGS:TicketID|!ARGS:action|!ARGS:alternate1|!ARGS:article_content|!ARGS:body|!ARGS:code|!ARGS:comment|!ARGS:contenido|!ARGS:content|!ARGS:data|!ARGS:faqs_answer|!ARGS:fck_body|!ARGS:file_content|!ARGS:form[pagina_text]|!ARGS:fulldescr|!ARGS:json|!ARGS:keywords|!ARGS:newcontent|!ARGS:p_action|!ARGS:prefix|!ARGS:query|!ARGS:resolution|!ARGS:saved_data|!ARGS:steps|!ARGS:suffix|!ARGS:wpSummary "@rx (?:union(?:\/\*.*\*\/)?select)" \
# 	"t:none,t:removeWhitespace,t:lowercase"
# SecRule REQUEST_URI "^/options-general.php$" "id:66600655, phase:1,t:none,pass, \
#   nolog,ctl:ruleRemoveTargetById=5000217
# SecRule REQUEST_URI "^/sql.php$" "id:66600656, phase:1,t:none,pass, \
#   nolog,ctl:ruleRemoveTargetById=5000217
# SecRule REQUEST_URI "^/lib/exe/ajax.php$" "id:66600657, phase:1,t:none,pass, \
#   nolog,ctl:ruleRemoveTargetById=5000217
# SecRule REQUEST_URI "^/export.php$" "id:66600658, phase:1,t:none,pass, \
#   nolog,ctl:ruleRemoveTargetById=5000217


# CVE: CVE-2013-2209
# CVSS: 4.3
# Publish: 2013-07-31T13:20:00
# Cross-site scripting (XSS) vulnerability in the auto-complete widget in htdocs/media/rb/js/reviews.js in Review Board 1.6.x before 1.6.17 and 1.7.x before 1.7.10 allows remote attackers to inject arbitrary web script or HTML via a full name.
SecRule REQUEST_METHOD "@streq POST" \
	"id:66600659,chain,msg:'POL-2013-2209',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "@contains /account/register/" \
	"chain,t:none,t:urlDecodeUni,t:lowercase,t:removeWhitespace"
SecRule ARGS:first_name|ARGS:last_name "@rx <script" \
	"t:none,t:urlDecodeUni,t:lowercase,t:removeWhitespace"


# CVE: CVE-2013-4950
# CVSS: 4.3
# Publish: 2013-07-29T23:27:00
# Cross-site scripting (XSS) vulnerability in view.php in Machform 2 allows remote attackers to inject arbitrary web script or HTML via the element_2 parameter.
SecRule REQUEST_FILENAME "@endsWith save.php" \
	"id:66600660,chain,msg:'POL-2013-4950',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:form "@rx ^\{\"id\":.*</?script" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,t:removeWhitespace"

SecRule REQUEST_FILENAME "@endsWith save.php" \
	"id:66600661,chain,msg:'POL-2013-4950',phase:2,deny,status:403,log,t:lowercase,rev:3,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:elements "@rx ^\{\"elements\":\[\{\"title\":\".*</?script" \
	"t:none,t:removeWhitespace,t:lowercase,t:urlDecodeUni"


# CVE: CVE-2015-1562
# CVSS: 4.3
# Publish: 2015-02-09T11:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in Saurus CMS 4.7.0 allow remote attackers to inject arbitrary web script or HTML via the (1) search parameter to admin/user_management.php, (2) data_search parameter to /admin/profile_data.php, or (3) filter parameter to error_log.php.
SecRule REQUEST_FILENAME "@pm user_management.php" \
	"id:66600662,chain,msg:'POL-2015-1562',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:search "@rx <" \
	"t:none,t:lowercase,t:urlDecodeUni"

SecRule REQUEST_FILENAME "@pm profile_data.php" \
	"id:66600663,chain,msg:'POL-2015-1562',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:data_search "@rx <" \
	"t:none,t:lowercase,t:urlDecodeUni"

SecRule REQUEST_FILENAME "@pm error_log.php" \
	"id:66600664,chain,msg:'POL-2015-1562',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:filter "@rx <" \
	"t:none,t:lowercase,t:urlDecodeUni"


# CVE: CVE-2017-9313
# CVSS: 4.3
# Publish: 2017-07-04T02:29:00
# Multiple Cross-site scripting (XSS) vulnerabilities in Webmin before 1.850 allow remote attackers to inject arbitrary web script or HTML via the sec parameter to view_man.cgi, the referers parameter to change_referers.cgi, or the name parameter to save_user.cgi. NOTE: these issues were not fixed in 1.840.
SecRule ARGS_GET:sec|ARGS_GET:referers|ARGS_POST:name "@contains <" \
	"id:66600665,chain,msg:'POL-2017-9313',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:sid "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@pm /man/view_man.cgi change_referers.cgi /acl/save_user.cgi" \
	"t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"


# CVE: CVE-2017-6069
# CVSS: 6.8
# Publish: 2017-03-27T02:59:00
# Subrion CMS 4.0.5 has CSRF in admin/blog/add/. The attacker can add any tag, and can optionally insert XSS via the tags parameter.
SecRule REQUEST_COOKIES_NAMES "@beginsWith intelli_" \
	"id:66600666,chain,msg:'POL-2017-6069',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:tags "@contains <" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@pm admin/blog/add admin/blog/edit" \
	"t:none,t:urlDecodeUni,t:normalisePath"


# CVE: CVE-2017-6480
# CVSS: 4.3
# Publish: 2017-03-05T20:59:00
# groovel/cmsgroovel before 3.3.7-beta is vulnerable to a reflected XSS in commons/browser.php (path parameter).
SecRule ARGS:path "@contains <" \
	"id:66600667,chain,msg:'POL-2017-6480',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith src/commons/browser.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2017-6484
# CVSS: 4.3
# Publish: 2017-03-05T20:59:00
# Multiple Cross-Site Scripting (XSS) issues were discovered in INTER-Mediator 5.5. The vulnerabilities exist due to insufficient filtration of user-supplied data (c and cred) passed to the "INTER-Mediator-master/Auth_Support/PasswordReset/resetpassword.php" URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule REQUEST_FILENAME "@endsWith auth_support/passwordreset/resetpassword.php" \
	"id:66600668,chain,msg:'POL-2017-6484',phase:3,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:3,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES|RESPONSE_HEADERS:/Set-Cookie/ "@contains phpsessid" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:c|ARGS_POST:cred "@rx [^0-9A-Fa-f]" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-6485
# CVSS: 4.3
# Publish: 2017-03-05T20:59:00
# A Cross-Site Scripting (XSS) issue was discovered in php-calendar before 2017-03-03. The vulnerability exists due to insufficient filtration of user-supplied data (errorMsg) passed to the "php-calendar-master/error.php" URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule ARGS_GET:errorMsg "@contains <" \
	"id:66600669,chain,msg:'POL-2017-6485',phase:3,deny,status:403,log,t:none,t:urlDecodeUni,rev:3,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES|RESPONSE_HEADERS:/Set-Cookie/ "@contains phpsessid" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith php-calendar/error.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2016-10223
# CVSS: 3.5
# Publish: 2017-02-14T06:59:00
# An issue was discovered in BigTree CMS before 4.2.15. The vulnerability exists due to insufficient filtration of user-supplied data in the "id" HTTP GET parameter passed to the "core/admin/adjax/dashboard/check-module-integrity.php" URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"id:66600670,chain,msg:'POL-2016-10223',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@contains /ajax/dashboard/integrity-check/" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_GET:id "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-5541
# CVSS: 5
# Publish: 2017-01-20T08:59:00
# Directory traversal vulnerability in template/usererror.missing_extension.php in Symphony CMS before 2.6.10 allows remote attackers to rename arbitrary files via a .. (dot dot) in the existing-folder and new-folder parameters.
SecRule REQUEST_FILENAME "@contains symphony/system/extensions" \
	"id:66600671,chain,msg:'POL-2017-5541',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:existing-folder|ARGS_POST:new-folder "@pm .. <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2017-5961
# CVSS: 4.3
# Publish: 2017-02-12T04:59:00
# An issue was discovered in ionize through 1.0.8. The vulnerability exists due to insufficient filtration of user-supplied data in the "path" HTTP GET parameter passed to the "ionize-master/themes/admin/javascript/tinymce/jscripts/tiny_mce/plugins/codemirror/dialog.php" URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule &REQUEST_COOKIES_NAMES:ion_selected_language "@ge 1" \
	"id:66600672,chain,msg:'POL-2017-5961',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith /themes/admin/javascript/tinymce/jscripts/tiny_mce/plugins/codemirror/dialog.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule ARGS_GET:path "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2017-6188
# CVSS: 1.9
# Publish: 2017-02-22T19:59:00
# Munin before 2.999.6 has a local file write vulnerability when CGI graphs are enabled. Setting multiple upper_limit GET parameters allows overwriting any file accessible to the www-data user.
SecRule &ARGS:upper_limit "@gt 1" \
	"id:66600673,chain,msg:'POL-2017-6188',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@contains munin-cgi-graph" \
	"chain,t:none,t:lowercase"
SecRule ARGS:/upper_limit/ "@contains /" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-6489
# CVSS: 4.3
# Publish: 2017-03-05T20:59:00
# Multiple Cross-Site Scripting (XSS) issues were discovered in EPESI 1.8.1.1. The vulnerabilities exist due to insufficient filtration of user-supplied data (element, state, cat, id, cid) passed to the EPESI-master/modules/Utils/Watchdog/subscribe.php URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule REQUEST_FILENAME "@endsWith modules/utils/watchdog/subscribe.php" \
	"id:66600674,chain,msg:'POL-2017-6489',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:cid|ARGS_POST:state|ARGS_POST:element|ARGS_POST:id|ARGS_POST:cat "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2017-6487
# CVSS: 4.3
# Publish: 2017-03-05T20:59:00
# Multiple Cross-Site Scripting (XSS) issues were discovered in EPESI 1.8.1.1. The vulnerabilities exist due to insufficient filtration of user-supplied data (state, element, id, tab, cid) passed to the "EPESI-master/modules/Utils/RecordBrowser/favorites.php" URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule REQUEST_FILENAME "@endsWith modules/utils/recordbrowser/favorites.php" \
	"id:66600675,chain,msg:'POL-2017-6487',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:cid|ARGS_POST:state|ARGS_POST:element|ARGS_POST:id|ARGS_POST:tab "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-5078
# CVSS: 6.5
# Publish: 2015-06-28T14:59:00
# SQL injection vulnerability in the insert function in application/controllers/admin/dataentry.php in LimeSurvey 2.06+ allows remote authenticated users to execute arbitrary SQL commands via the closedate parameter.
SecRule REQUEST_FILENAME "@endsWith index.php/admin/dataentry/sa/insert" \
	"id:66600676,chain,msg:'POL-2015-5078',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:subaction "@streq insert" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:closedate "!@rx ^[\d-:]+$" \
	"t:none,t:removeWhitespace"


# CVE: CVE-2015-4628
# CVSS: 6.5
# Publish: 2015-06-18T10:59:00
# SQL injection vulnerability in application/controllers/admin/questiongroups.php in LimeSurvey before 2.06+ Build 150618 allows remote authenticated administrators to execute arbitrary SQL commands via the sid parameter.
SecRule REQUEST_FILENAME "@endsWith index.php/admin/questiongroups/sa/import" \
	"id:66600677,chain,msg:'POL-2015-4628',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:action "@streq importgroup" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:sid "@rx \D" \
	"t:none"


# CVE: CVE-2014-1613
# CVSS: 7.5
# Publish: 2014-05-16T15:55:00
# Dotclear before 2.6.2 allows remote attackers to execute arbitrary PHP code via a serialized object in the dc_passwd cookie to a password-protected page, which is not properly handled by (1) inc/public/lib.urlhandlers.php or (2) plugins/pages/_public.php.
SecRule REQUEST_COOKIES:dc_passwd "!@rx ^a:\d+:{(?:i:\d+;s:\d+:\".*?\";)*}$" \
	"id:66600678,msg:'POL-2014-1613',phase:1,deny,log,t:none,t:htmlEntityDecode,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"


# CVE: CVE-2015-6512
# CVSS: 5
# Publish: 2015-08-18T15:59:00
# SQL injection vulnerability in the get_messages function in server/plugins/chatroom/chatroom.php in FreiChat 9.6 allows remote attackers to execute arbitrary SQL commands via the time parameter to server/freichat.php.
SecRule ARGS_GET:time "!@rx ^[\d\.]+$" \
	"id:66600679,chain,msg:'POL-2015-6512',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith server/freichat.php" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2015-1057
# CVSS: 4.3
# Publish: 2015-01-16T15:59:00
# Cross-site scripting (XSS) vulnerability in usersettings.php in e107 2.0.0 allows remote attackers to inject arbitrary web script or HTML via the "Real Name" value.
SecRule &REQUEST_COOKIES:e107_tzOffset "@ge 1" \
	"id:66600680,chain,msg:'POL-2015-1057',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith usersettings.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:realname "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-5074
# CVSS: 7.5
# Publish: 2015-09-29T19:59:00
# Incomplete blacklist vulnerability in the FileUploadsFilter class in protected/components/filters/FileUploadsFilter.php in X2Engine X2CRM before 5.0.9 allows remote authenticated users to execute arbitrary PHP code by uploading a file with a .pht extension.
SecRule &ARGS_POST:yii_csrf_token "@ge 1" \
	"id:66600681,chain,msg:'POL-2015-5074',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:phpsessid "@ge 1" \
	"chain,t:none"
SecRule &REQUEST_COOKIES:yii_csrf_token "@ge 1" \
	"chain,t:none"
SecRule FILES "@rx \.(?:p(?:[ly]|h(?:p[2-7s]?|t(?:ml)?)|if)|c(?:o(?:nf|m)|gi|md|nf|pl)|ht(?:access|passwd|ml?)|m(?:ht(?:ml)?|si)|j(?:html|sb?)|s(?:html|cr)|v(?:bs|xd)|xht(?:ml)?|i(?:ni|v)|bat|dll|exe|key)$" \
	"t:none,t:lowercase"


# CVE: CVE-2014-8996
# CVSS: 4.3
# Publish: 2014-11-20T13:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in Nibbleblog before 4.0.2 allow remote attackers to inject arbitrary web script or HTML via the (1) author_name or (2) content parameter to index.php.
SecRule ARGS_GET:controller "@streq post" \
	"id:66600682,chain,msg:'POL-2014-8996',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@streq view" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:hash "@rx ^[0-9a-f]+$" \
	"chain,t:none"
SecRule ARGS_POST:author_name|ARGS_POST:content "@rx <|\"" \
	"t:none"


# CVE: CVE-2015-6966
# CVSS: 6.8
# Publish: 2015-09-16T14:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in Nibbleblog before 4.0.5 allow remote attackers to hijack the authentication of administrators for requests that (1) create a post via a new_simple action to admin.php or (2) conduct cross-site scripting (XSS) attacks via the content parameter in a new_simple action to admin.php.
SecRule ARGS_GET:controller "@streq post" \
	"id:66600683,chain,phase:2,pass,nolog,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@streq new_simple" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"setvar:'SESSION.TIMEOUT=300',setvar:'SESSION.nbblog=1',expirevar:'SESSION.nbblog=300',t:none,t:lowercase"

SecRule SESSION:nbblog "@eq 1" \
	"id:66600684,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'OtherApps'"

SecRule ARGS_GET:controller "@streq post" \
	"id:66600685,chain,msg:'POL-2015-6966',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@streq new_simple" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:nbblog "!@eq 1" \
	"t:none"


# CVE: CVE-2015-1604
# CVSS: 6.5
# Publish: 2015-02-19T15:59:00
# Unrestricted file upload vulnerability in asys/site/files.php in Adminsystems CMS before 4.0.2 allows remote authenticated users to execute arbitrary code by uploading a file with an executable extension, then accessing it via a direct request to the file in upload/files/.
SecRule REQUEST_FILENAME "@endsWith asys/site/files/upload.php" \
	"id:66600686,chain,msg:'POL-2015-1604',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:name "@rx \.(?:php[\d]?|js|pl|rb|sh|p?html|asp|exe|com|htaccess)$" \
	"t:none,t:lowercase"


# CVE: CVE-2015-8794
# CVSS: 4
# Publish: 2016-01-29T19:59:00
# Absolute path traversal vulnerability in program/steps/addressbook/photo.inc in Roundcube before 1.0.6 and 1.1.x before 1.1.2 allows remote authenticated users to read arbitrary files via a full pathname in the _alt parameter, related to contact photo handling.
SecRule &ARGS:_alt "@ge 1" \
	"id:66600687,chain,msg:'POL-2015-8794',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:_task "@streq addressbook" \
	"chain,t:none,t:lowercase"
SecRule ARGS:_action "@streq import" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_COOKIES_NAMES "@contains roundcube" \
	"t:none"


# CVE: CVE-2015-1176
# CVSS: 4.3
# Publish: 2015-01-23T15:59:00
# Cross-site scripting (XSS) vulnerability in upload/scp/tickets.php in osTicket before 1.9.5 allows remote attackers to inject arbitrary web script or HTML via the status parameter in a search action.
SecRule REQUEST_FILENAME "@endsWith scp/tickets.php" \
	"id:66600688,chain,msg:'POL-2015-1176',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:a "@streq search" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:status "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-3172
# CVSS: 6.5
# Publish: 2016-04-12T16:59:00
# SQL injection vulnerability in tree.php in Cacti 0.8.8g and earlier allows remote authenticated users to execute arbitrary SQL commands via the parent_id parameter in an item_edit action.
SecRule ARGS_GET:action "@streq item_edit" \
	"id:66600689,chain,msg:'POL-2016-3172',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:parent_id "@rx \D" \
	"chain,t:none"
SecRule &REQUEST_COOKIES:Cacti "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith tree.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-2182
# CVSS: 4.3
# Publish: 2015-03-11T14:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in ZeusCart 4 allow remote attackers to inject arbitrary web script or HTML via the (1) schltr parameter in a brands action or (2) brand parameter in a viewbrands action to index.php.  NOTE: The search parameter vector is already covered by CVE-2010-5322.
SecRule ARGS_GET:do "@streq search" \
	"id:66600690,chain,msg:'POL-2015-2182',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:search "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-5018
# CVSS: 4.3
# Publish: 2014-07-21T14:55:00
# Incomplete blacklist vulnerability in the autoEscape function in common_helper.php in LimeSurvey 2.05+ Build 140618 allows remote attackers to conduct cross-site scripting (XSS) attacks via the GBK charset in the loadname parameter to index.php, related to the survey resume. <a href="http://cwe.mitre.org/data/definitions/184.html" target="_blank">CWE-184: Incomplete Blacklist</a>
SecRule REQUEST_URI "@contains survey/index" \
	"id:66600691,chain,msg:'POL-2014-5018',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:loadname "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-2182
# CVSS: 4.3
# Publish: 2015-03-11T14:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in ZeusCart 4 allow remote attackers to inject arbitrary web script or HTML via the (1) schltr parameter in a brands action or (2) brand parameter in a viewbrands action to index.php.  NOTE: The search parameter vector is already covered by CVE-2010-5322.
SecRule ARGS_GET:do "@streq viewbrands" \
	"id:66600692,chain,msg:'POL-2015-2182',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:brand "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:do "@streq brands" \
	"id:66600693,chain,msg:'POL-2015-2182',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:schltr "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-1603
# CVSS: 4.3
# Publish: 2015-02-19T15:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in Adminsystems CMS before 4.0.2 allow remote attackers to inject arbitrary web script or HTML via the (1) page parameter to index.php or (2) id parameter in a users_users action to asys/site/system.php.
SecRule REQUEST_FILENAME "@endsWith asys/site/system.php" \
	"id:66600694,chain,msg:'POL-2015-1603',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:id "@rx \D" \
	"t:none"


# CVE: CVE-2014-5016
# CVSS: 4.3
# Publish: 2014-07-21T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in LimeSurvey 2.05+ Build 140618 allow remote attackers to inject arbitrary web script or HTML via (1) the pid attribute to the getAttribute_json function to application/controllers/admin/participantsaction.php in CPDB, (2) the sa parameter to application/views/admin/globalSettings_view.php, or (3) a crafted CSV file to the "Import CSV" functionality.
SecRule REQUEST_URI "@contains participants/sa/getAttribute_json/pid/" \
	"id:66600695,chain,msg:'POL-2014-5016',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_LINE "@contains <" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_URI "@contains admin/globalsettings" \
	"id:66600696,chain,msg:'POL-2014-5016',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:sa "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-7386
# CVSS: 4.3
# Publish: 2017-04-01T00:59:00
# citymont/symetrie v.0.9.6 is vulnerable to a reflected XSS in symetrie-master/app/commands/page.php (model parameter).
SecRule ARGS_GET:model "@contains <" \
	"id:66600697,chain,msg:'POL-2017-7386',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith /app/commands/page.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2017-6797
# CVSS: 4.3
# Publish: 2017-03-10T00:59:00
# A cross-site scripting (XSS) vulnerability in bug_change_status_page.php in MantisBT before 1.3.7 and 2.x before 2.2.1 allows remote attackers to inject arbitrary JavaScript via the 'action_type' parameter.
SecRule ARGS:change_type "@contains \"" \
	"id:66600698,chain,msg:'POL-2017-6797',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS:id "@ge 1" \
	"chain,t:none"
SecRule &REQUEST_COOKIES:MANTIS_STRING_COOKIE "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith bug_change_status_page.php" \
	"t:none,t:lowercase"


# CVE: CVE-2017-7309
# CVSS: 3.5
# Publish: 2017-03-31T04:59:00
# A cross-site scripting (XSS) vulnerability in the MantisBT Configuration Report page (adm_config_report.php) allows remote attackers to inject arbitrary code (if CSP settings permit it) through a crafted 'config_option' parameter. This is fixed in 1.3.9, 2.1.3, and 2.2.3.
SecRule ARGS:config_option "@contains \"" \
	"id:66600699,chain,msg:'POL-2017-7309',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:MANTIS_STRING_COOKIE "@ge 1" \
	"chain,t:none"
SecRule REQUEST_BASENAME "@streq adm_config_report.php" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2017-7241
# CVSS: 3.5
# Publish: 2017-03-31T04:59:00
# A cross-site scripting (XSS) vulnerability in the MantisBT Move Attachments page (move_attachments_page.php, part of admin tools) allows remote attackers to inject arbitrary code through a crafted 'type' parameter, if Content Security Protection (CSP) settings allows it. This is fixed in 1.3.9, 2.1.3, and 2.2.3. Note that this vulnerability is not exploitable if the admin tools directory is removed, as recommended in the "Post-installation and upgrade tasks" of the MantisBT Admin Guide. A reminder to do so is also displayed on the login page.
SecRule ARGS:type "@contains \"" \
	"id:66600700,chain,msg:'POL-2017-7241',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:MANTIS_STRING_COOKIE "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith /admin/move_attachments_page.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2017-7570
# CVSS: 6.5
# Publish: 2017-04-07T04:59:00
# PivotX 2.3.11 allows remote authenticated Advanced users to execute arbitrary PHP code by performing an upload with a safe file extension (such as .jpg) and then invoking the duplicate function to change to the .php extension.
SecRule &ARGS_GET:pivotxsession "@ge 1" \
	"id:66600701,chain,msg:'POL-2017-7570',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:file "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:page "@streq media" \
	"chain,t:none,t:lowercase"
SecRule &REQUEST_COOKIES:pivotxsession "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:answer "@rx \.(?:(?:p|s|x|d)?h(?:p[2-7s]?|(?:tm)?l?)|dll|exe|js|p(?:l|y)|rb|sh)$" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2017-7695
# CVSS: 7.5
# Publish: 2017-04-11T23:59:00
# Unrestricted File Upload exists in BigTree CMS before 4.2.17: if an attacker uploads an 'xxx.php[space]' file, they could bypass a safety check and execute any code.
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"id:66600702,chain,msg:'POL-2017-7695',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@contains /ajax/file-browser/upload/" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule FILES "@rx \.(?:(?:p|s|x|d)?h(?:p[2-7s]?|(?:tm)?l?)|dll|exe|js|p(?:l|y)|rb|sh|cgi|com|bat|aspx?)" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-6488
# CVSS: 4.3
# Publish: 2017-03-05T20:59:00
# Multiple Cross-Site Scripting (XSS) issues were discovered in EPESI 1.8.1.1. The vulnerabilities exist due to insufficient filtration of user-supplied data (visible, tab, cid) passed to the EPESI-master/modules/Utils/RecordBrowser/Filters/save_filters.php URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule REQUEST_FILENAME "@endsWith modules/utils/recordbrowser/filters/save_filters.php" \
	"id:66600703,chain,msg:'POL-2017-6488',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:cid|ARGS_POST:visible|ARGS_POST:tab "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-6799
# CVSS: 4.3
# Publish: 2017-03-10T10:59:00
# A cross-site scripting (XSS) vulnerability in view_filters_page.php in MantisBT before 2.2.1 allows remote attackers to inject arbitrary JavaScript via the 'view_type' parameter.
SecRule ARGS_GET:view_type "@contains \"" \
	"id:66600704,chain,msg:'POL-2017-6799',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:MANTIS_STRING_COOKIE "@ge 1" \
	"chain,t:none"
SecRule REQUEST_BASENAME "@streq view_filters_page.php" \
	"t:none,t:lowercase"


# CVE: CVE-2017-7389
# CVSS: 4.3
# Publish: 2017-04-01T02:59:00
# Multiple Cross-Site Scripting (XSS) were discovered in 'openeclass Release_3.5.4'. The vulnerabilities exist due to insufficient filtration of user-supplied data (meeting_id, user) passed to the 'openeclass-master/modules/tc/webconf/webconf.php' URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule ARGS_GET:meeting_id|ARGS_GET:user "@pm < \"" \
	"id:66600705,chain,msg:'POL-2017-7389',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith /modules/tc/webconf/webconf.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2017-7203
# CVSS: 4.3
# Publish: 2017-03-21T06:59:00
# A Cross-Site Scripting (XSS) was discovered in ZoneMinder before 1.30.2. The vulnerability exists due to insufficient filtration of user-supplied data (postLoginQuery) passed to the "ZoneMinder-master/web/skins/classic/views/js/postlogin.js.php" URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule ARGS_POST:postLoginQuery "@pm < \"" \
	"id:66600706,chain,msg:'POL-2017-7203',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith /skins/classic/views/js/postlogin.js.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2014-5107
# CVSS: 5
# Publish: 2014-07-28T15:55:00
# concrete5 before 5.6.3 allows remote attackers to obtain the installation path via a direct request to (1) system/basics/editor.php, (2) system/view.php, (3) system/environment/file_storage_locations.php, (4) system/mail/importers.php, (5) system/mail/method.php, (6) system/permissions/file_types.php, (7) system/permissions/files.php, (8) system/permissions/tasks.php, (9) system/permissions/users.php, (10) system/seo/view.php, (11) view.php, (12) users/attributes.php, (13) scrapbook/view.php, (14) pages/attributes.php, (15) files/attributes.php, or (16) files/search.php in single_pages/dashboard/.
SecRule REQUEST_FILENAME "@rx concrete\/single_pages\/dashboard\/(?:(?:system\/(basics|mail|environment|permissions|seo)?|users|scrapbook|pages|files)?\/?(?:editor|file_storage_locations|importers|method|file_types|files|tasks|users|attributes|search)?(view)?)\.php" \
	"id:66600707,chain,msg:'POL-2014-5107',phase:4,deny,status:403,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule RESPONSE_BODY "@beginsWith Fatalerror:" \
	"t:none,t:urlDecodeUni,t:removeWhitespace"


# CVE: CVE-2014-3550
# CVSS: 4.3
# Publish: 2014-07-29T11:10:00
# Multiple cross-site scripting (XSS) vulnerabilities in admin/tool/task/scheduledtasks.php in Moodle 2.7.x before 2.7.1 allow remote attackers to inject arbitrary web script or HTML via vectors that trigger a crafted (1) error or (2) success message for a scheduled task.
SecRule REQUEST_FILENAME "@endsWith admin/tool/task/scheduledtasks.php" \
	"id:66600708,chain,msg:'POL-2014-3550',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &SESSION:moodlesession "@gt 0" \
	"chain"
SecRule ARGS:success|ARGS:error "@pm < > /" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2012-0984
# CVSS: 4.3
# Publish: 2014-09-11T14:16:00
# Multiple cross-site scripting (XSS) vulnerabilities in XOOPS before 2.5.5 allow remote attackers to inject arbitrary web script or HTML via the (1) to_userid parameter to modules/pm/pmlite.php or the (2) current_file, (3) imgcat_id, or (4) target parameter to class/xoopseditor/tinymce/tinymce/jscripts/tiny_mce/plugins/xoopsimagemanager/xoopsimagebrowser.php.
SecRule REQUEST_FILENAME "@contains modules/pm/pmlite.php" \
	"id:66600709,chain,msg:'POL-2012-0984',deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:to_userid "@rx \"" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_FILENAME "@contains class/xoopseditor/tinymce/tinymce/jscripts/tiny_mce/plugins/xoopsimagemanager/xoopsimagebrowser.php" \
	"id:66600710,chain,msg:'POL-2012-0984',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:current_file|ARGS_POST:imgcat_id|ARGS_POST:target "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-1879
# CVSS: 3.5
# Publish: 2014-02-20T15:27:00
# Cross-site scripting (XSS) vulnerability in import.php in phpMyAdmin before 4.1.7 allows remote authenticated users to inject arbitrary web script or HTML via a crafted filename in an import action.
#5000392
SecRule REQUEST_URI "!@rx /import\.php" \
        "id:66600711,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000256"

SecMarker BEGIN-RULE5000256
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600712,chain,msg:'POL-2014-1879',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule FILES:import_file "@rx <" "

SecMarker END-RULE5000256

SecRule REQUEST_URI "!@rx .*import\.php" \
        "id:66600713,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000392"

SecMarker BEGIN-RULE5000392
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600714,chain,msg:'POL-2014-1879',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule FILES:import_file "@contains <" "

SecMarker END-RULE5000392


# CVE: CVE-2012-1506
# CVSS: 6.5
# Publish: 2014-09-17T14:55:00
# SQL injection vulnerability in the updateStatus function in lib/models/benefits/Hsp.php in OrangeHRM before 2.7 allows remote authenticated users to execute arbitrary SQL commands via the hspSummaryId parameter to plugins/ajaxCalls/haltResumeHsp.php.  NOTE: some of these details are obtained from third party information.
SecRule REQUEST_FILENAME "@contains haltResumeHsp.php" \
	"id:66600715,chain,msg:'POL-2012-1506',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:hspSummaryId "\D" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-5112
# CVSS: 7.5
# Publish: 2014-07-28T15:55:00
# maint/modules/home/index.php in Fonality trixbox allows remote attackers to execute arbitrary commands via shell metacharacters in the lang parameter.
SecRule REQUEST_FILENAME "@contains maint/modules/home/index.php" \
	"id:66600716,chain,msg:'POL-2014-5112',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:lang "@rx [^a-zA-Z0-9_]" \
	"t:none,t:urlDecodeUni,t:cmdLine"


# CVE: CVE-2014-4735
# CVSS: 4.3
# Publish: 2014-09-12T14:55:00
# Cross-site scripting (XSS) vulnerability in MyWebSQL 3.4 and earlier allows remote attackers to inject arbitrary web script or HTML via the table parameter to index.php.
SecRule REQUEST_COOKIES_NAMES "@pm data_layout main_layout" \
	"id:66600717,chain,msg:'POL-2014-4735',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:table "@pm < >" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-3547
# CVSS: 4.3
# Publish: 2014-07-29T11:10:00
# Multiple cross-site scripting (XSS) vulnerabilities in badges/renderer.php in Moodle 2.5.x before 2.5.7, 2.6.x before 2.6.4, and 2.7.x before 2.7.1 allow remote attackers to inject arbitrary web script or HTML via an external badge.
SecRule REQUEST_FILENAME "@rx (badges\/mybadges|user\/profile)\.php$" \
	"id:66600718,chain,msg:'POL-2014-3547',phase:4,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &SESSION:moodlesession "@gt 0" \
	"chain"
SecRule RESPONSE_BODY "!@rx <spanclass=\"badge\-name\">[a-z0-9\.'\!\:\-]+<\/a><\/li>" "


# CVE: CVE-2015-8739
# CVSS: 4.3
# Publish: 2016-01-04T05:59:00
# The ipmi_fmt_udpport function in epan/dissectors/packet-ipmi.c in the IPMI dissector in Wireshark 2.0.x before 2.0.1 improperly attempts to access a packet scope, which allows remote attackers to cause a denial of service (assertion failure and application exit) via a crafted packet.
SecRule REQUEST_HEADERS:X-HTTP-Method-Override "!@streq %{REQUEST_METHOD}" \
	"id:66600719,chain,msg:'POL-2015-8739',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_HEADERS:X-HTTP-Method-Override "@ge 1" \
	"chain,t:none,t:length"
SecRule REQUEST_COOKIES_NAMES "@contains cakephp" \
	"t:none,t:lowercase"

SecRule ARGS:_method "!@streq %{REQUEST_METHOD}" \
	"id:66600720,chain,msg:'POL-2015-8739',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS:_method "@ge 1" \
	"chain,t:none,t:length"
SecRule REQUEST_COOKIES_NAMES "@contains cakephp" \
	"t:none,t:lowercase"


# CVE: CVE-2014-9464
# CVSS: 7.5
# Publish: 2015-01-03T22:59:00
# SQL injection vulnerability in Category.php in Microweber CMS 0.95 before 20141209 allows remote attackers to execute arbitrary SQL commands via the category parameter when displaying a category, related to the $parent_id variable.
SecRule REQUEST_URI "@rx shop-\d+\/category:" \
	"id:66600721,chain,msg:'POL-2014-9464',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "!@rx category:\d+$" \
	"t:none,t:lowercase"


# CVE: CVE-2016-3659
# CVSS: 6.5
# Publish: 2016-04-11T15:59:00
# SQL injection vulnerability in graph_view.php in Cacti 0.8.8.g allows remote authenticated users to execute arbitrary SQL commands via the host_group_data parameter.
SecRule REQUEST_FILENAME "@endsWith graph_view.php" \
	"id:66600722,chain,msg:'POL-2016-3659',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:Cacti "@ge 1" \
	"chain,setvar:'TX.cacti=1',t:none"
SecRule ARGS:host_group_data "!@rx ^(?:graph_template|data_query)\:\d+$" \
	"chain,t:none,t:urlDecodeUni"
SecRule ARGS:host_group_data "!@contains data_query_index" \
	"t:none"

SecRule TX:cacti "@eq 1" \
	"id:66600723,chain,msg:'POL-2016-3659',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:host_group_data "@rx ^(?:data_query_index\:\d+\:(.+))$" \
	"chain,capture,t:none,t:urlDecodeUni"
SecRule TX:1 "@pm ( )" \
	"t:none"


# CVE: CVE-2015-4426
# CVSS: 7.5
# Publish: 2015-08-18T17:59:00
# SQL injection vulnerability in pimcore before build 3473 allows remote attackers to execute arbitrary SQL commands via the filter parameter to admin/asset/grid-proxy.
SecRule REQUEST_FILENAME "@endsWith admin/asset/grid-proxy" \
	"id:66600724,chain,msg:'POL-2015-4426',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:filter "@rx \'" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2016-2044
# CVSS: 5
# Publish: 2016-02-20T01:59:00
# libraries/sql-parser/autoload.php in the SQL parser in phpMyAdmin 4.5.x before 4.5.4 allows remote attackers to obtain sensitive information via a crafted request, which reveals the full path in an error message.
SecRule REQUEST_FILENAME "@endsWith /libraries/sql-parser/autoload.php" \
	"id:66600725,msg:'POL-2016-2044',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"


# CVE: CVE-2016-5364
# CVSS: 4.3
# Publish: 2017-02-17T17:59:00
# Cross-site scripting (XSS) vulnerability in manage_custom_field_edit_page.php in MantisBT 1.2.19 and earlier allows remote attackers to inject arbitrary web script or HTML via the return parameter.
SecRule ARGS:return|ARGS:redirect_url|ARGS:ref|REQUEST_HEADERS:Referer "@contains javascript:" \
	"id:66600726,chain,msg:'POL-2016-5364',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:MANTIS_STRING_COOKIE "@ge 1" \
	"chain,t:none"
SecRule REQUEST_BASENAME "@rx ^(?:account_prefs_update|manage_(?:config_revert|custom_field_(?:delete|update))|print_all_bug_options_update|set_project)\.php$" \
	"t:none,t:lowercase"

SecRule ARGS:return|ARGS:ref|REQUEST_HEADERS:Referer "@rx \"" \
	"id:66600727,chain,msg:'POL-2016-5364',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:MANTIS_STRING_COOKIE "@ge 1" \
	"chain,t:none"
SecRule REQUEST_BASENAME "@within set_project.php manage_custom_field_edit_page.php" \
	"t:none,t:lowercase"


# CVE: CVE-2013-4619
# CVSS: 6.5
# Publish: 2013-08-09T21:55:00
# Multiple SQL injection vulnerabilities in OpenEMR 4.1.1 allow remote authenticated users to execute arbitrary SQL commands via the (1) start or (2) end parameter to interface/reports/custom_report_range.php, or the (3) form_newid parameter to custom/chart_tracker.php.
SecRule REQUEST_FILENAME "@pm interface/reports/custom_report_range.php custom/chart_tracker.php" \
	"id:66600728,chain,msg:'POL-2013-4619',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:start|ARGS_POST:end|ARGS_POST:form_newid "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-3929
# CVSS: 2.1
# Publish: 2013-12-09T16:55:00
# Cross-site scripting (XSS) vulnerability in admin/editevent.php in CMS Made Simple (CMSMS) 1.11.9 allows remote authenticated users with the "Modify Events" permission to inject arbitrary web script or HTML via the handler parameter.
SecRule REQUEST_FILENAME "@endsWith admin/editevent.php" \
	"id:66600729,chain,msg:'POL-2013-3929',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:_sx_ "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:handler "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-2561
# CVSS: 3.5
# Publish: 2016-03-01T11:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in phpMyAdmin 4.4.x before 4.4.15.5 and 4.5.x before 4.5.5.1 allow remote authenticated users to inject arbitrary web script or HTML via (1) normalization.php or (2) js/normalization.js in the database normalization page, (3) templates/database/structure/sortable_header.phtml in the database structure page, or (4) the pos parameter to db_central_columns.php in the central columns page.
SecRule REQUEST_FILENAME "@endsWith db_structure.php" \
	"id:66600730,chain,msg:'POL-2016-2561',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES "@contains pmapass" \
	"chain,t:none,t:lowercase"
SecRule ARGS:tbl_type|ARGS:tbl_group "@rx \"" \
	"t:none,t:lowercase"

SecRule ARGS:normalizeTo "!@within 1nf 2nf 3nf" \
	"id:66600731,chain,msg:'POL-2016-2561',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES "@contains pmapass" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith normalization.php" \
	"t:none,t:lowercase"

SecRule REQUEST_FILENAME "@endsWith db_central_columns.php" \
	"id:66600732,chain,msg:'POL-2016-2561',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES "@contains pmapass" \
	"chain,t:none,t:lowercase"
SecRule ARGS:pos "@rx \D" \
	"t:none"


# CVE: CVE-2015-6584
# CVSS: 4.3
# Publish: 2015-09-11T15:59:00
# Cross-site scripting (XSS) vulnerability in the DataTables plugin 1.10.8 and earlier for jQuery allows remote attackers to inject arbitrary web script or HTML via the scripts parameter to media/unit_testing/templates/6776.php.
SecRule REQUEST_FILENAME "@endsWith media/unit_testing/templates/6776.php" \
	"id:66600733,chain,msg:'POL-2015-6584',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:scripts "@contains \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2016-2038
# CVSS: 5
# Publish: 2016-02-20T01:59:00
# phpMyAdmin 4.0.x before 4.0.10.13, 4.4.x before 4.4.15.3, and 4.5.x before 4.5.4 allows remote attackers to obtain sensitive information via a crafted request, which reveals the full path in an error message.
SecRule REQUEST_FILENAME "@endsWith /setup/lib/common.inc.php" \
	"id:66600734,msg:'POL-2016-2038',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"


# CVE: CVE-2015-6732
# CVSS: 4.3
# Publish: 2015-09-01T14:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the SemanticForms extension for MediaWiki allow remote attackers to inject arbitrary web script or HTML via the (1) wpSummary parameter to Special:FormEdit, the (2) "Template label (optional)" field in a form, or a (3) Field name in a template.
SecRule &REQUEST_COOKIES_NAMES:mediawiki_mw_Token "@ge 1" \
	"id:66600735,chain,msg:'POL-2015-6732',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "@contains Special:CreateForm" \
	"chain,t:none,t:normalizePath"
SecRule ARGS_POST:sectionname "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule &REQUEST_COOKIES_NAMES:mediawiki_mw_Token "@ge 1" \
	"id:66600736,chain,msg:'POL-2015-6732',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "@contains Special:CreateTemplate" \
	"chain,t:none,t:normalizePath"
SecRule ARGS_POST:/name_\d+/ "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule &REQUEST_COOKIES_NAMES:mediawiki_mw_Token "@ge 1" \
	"id:66600737,chain,msg:'POL-2015-6732',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "@contains Special:FormEdit" \
	"chain,t:none,t:normalizePath"
SecRule ARGS_POST:wpSummary "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-6734
# CVSS: 4.3
# Publish: 2015-09-01T14:59:00
# Cross-site scripting (XSS) vulnerability in contrib/cssgen.php in the GeSHi, as used in the SyntaxHighlight_GeSHi extension and MediaWiki before 1.23.10, 1.24.x before 1.24.3, and 1.25.x before 1.25.2, allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.
SecRule &REQUEST_COOKIES_NAMES:mediawiki_mw_Token "@ge 1" \
	"id:66600738,chain,msg:'POL-2015-6734',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@contains /geshi/contrib/cssgen.php" \
	"chain,t:none,t:lowercase,t:normalizePath"
SecRule ARGS_GET:step "@eq 3" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:/keywords\-[1-4]/ "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-5530
# CVSS: 6.8
# Publish: 2015-07-16T15:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in Free Reprintables ArticleFR 3.0.6 allow remote attackers to hijack the authentication of administrators for requests that add an administrator account via a request to dashboard/users/create/.
#5000406
SecRule REQUEST_URI "!@rx .*/dashboard/users/create/" \
        "id:66600739,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000406"

SecMarker BEGIN-RULE5000406
SecRule REQUEST_COOKIES:_ga "@rx ^ga(\d+\.*)+" \
        "id:66600740,phase:2,capture,pass,setsid:'%{TX.1}',nolog,t:none,t:lowercase,rev:4,severity:2,tag:'OtherApps'"

SecRule REQUEST_COOKIES_NAMES "@contains _ga" \
        "id:66600741,chain,phase:2,pass,nolog,t:none,t:lowercase,rev:4,severity:2,tag:'OtherApps'"
SecRule REQUEST_METHOD "@streq get" \
        "setvar:'SESSION.TIMEOUT=300',setvar:'SESSION.articleFR=1',expirevar:'SESSION.articleFR=300',t:none,t:lowercase"

SecRule SESSION:articleFR "@eq 1" \
        "id:66600742,phase:2,pass,nolog,skip:1,rev:4,severity:2,tag:'OtherApps'"

SecRule REQUEST_METHOD "@streq post" \
        "id:66600743,chain,msg:'POL-2015-5530',phase:2,deny,status:403,log,t:none,t:lowercase,rev:4,severity:2,tag:'OtherApps'"
SecRule ARGS_NAMES "@pm username name password email website blog membership isactive" \
        "chain,t:none,t:lowercase"
SecRule &SESSION:articleFR "!@eq 1" "

SecMarker END-RULE5000406

# CVE: CVE-2015-5066
# CVSS: 4.3
# Publish: 2015-06-24T14:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the MetalGenix GeniXCMS 0.0.3 allow remote attackers to inject arbitrary web script or HTML via the (1) content or (2) title field in an add action in the posts page to index.php or the (3) q parameter in the posts page to index.php.
SecRule ARGS_GET:page "@streq posts" \
	"id:66600744,chain,msg:'POL-2015-5066',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:act "add" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:title|ARGS_POST:content "@rx \"|'" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "index.php" \
	"t:none,t:lowercase"

SecRule ARGS_GET:page "posts" \
	"id:66600745,chain,msg:'POL-2015-5066',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:q "@rx \'" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "index.php" \
	"t:none,t:lowercase"


# CVE: CVE-2016-4423
# CVSS: 5
# Publish: 2016-06-01T22:59:00
# The attemptAuthentication function in Component/Security/Http/Firewall/UsernamePasswordFormAuthenticationListener.php in Symfony before 2.3.41, 2.7.x before 2.7.13, 2.8.x before 2.8.6, and 3.0.x before 3.0.6 does not limit the length of a username stored in a session, which allows remote attackers to cause a denial of service (session storage consumption) via a series of authentication attempts with long, non-existent usernames.
SecRule ARGS_POST:_username "@gt 4096" \
	"id:66600746,chain,msg:'POL-2016-4423',phase:2,deny,status:403,log,t:none,t:length,rev:2,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"t:none"


# CVE: CVE-2015-6731
# CVSS: 4.3
# Publish: 2015-09-01T14:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the SemanticForms extension for MediaWiki allow remote attackers to inject arbitrary web script or HTML via a (1) section_*, (2) template_*, (3) label_*, or (4) new_template parameter to Special:CreateForm or (5) target or (6) alt_form parameter to Special:FormEdit.
SecRule &REQUEST_COOKIES_NAMES:mediawiki_mw_Token "!@ge 1" \
	"id:66600747,phase:2,pass,nolog,skip:2,rev:1,severity:2,tag:'OtherApps'"

SecRule REQUEST_URI "@contains special:createform" \
	"id:66600748,chain,msg:'POL-2015-6731',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:/section\_[a-z0-9]+/|ARGS_GET:/template\_[a-z0-9]+/|ARGS_POST:/label\_[\w\d]+/|ARGS_POST:new_template "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_URI "@contains special:formedit" \
	"id:66600749,chain,msg:'POL-2015-6731',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:target|ARGS_GET:alt_form "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-6943
# CVSS: 6
# Publish: 2015-09-15T18:59:00
# SQL injection vulnerability in the serendipity_checkCommentToken function in include/functions_comments.inc.php in Serendipity before 2.0.2, when "Use Tokens for Comment Moderation" is enabled, allows remote administrators to execute arbitrary SQL commands via the serendipity[id] parameter to serendipity_admin.php.
SecRule REQUEST_FILENAME "@endsWith serendipity_admin.php" \
	"id:66600750,chain,msg:'POL-2015-6943',phase:1,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:serendipity[id] "@rx \D" \
	"t:none"


# CVE: CVE-2014-7987
# CVSS: 4.3
# Publish: 2014-10-31T14:55:00
# Cross-site scripting (XSS) vulnerability in EspoCRM before 2.6.0 allows remote attackers to inject arbitrary web script or HTML via the desc parameter in an errors action to install/index.php.
SecRule ARGS_GET:action "@contains errors" \
	"id:66600751,chain,msg:'POL-2014-7987',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith /install/index.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule ARGS_GET:desc "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-7902
# CVSS: 6.5
# Publish: 2017-01-04T21:59:00
# Unrestricted file upload vulnerability in the fileUnzip->unzip method in Dotclear before 2.10.3 allows remote authenticated users with permissions to manage media items to execute arbitrary code by uploading a ZIP file containing a file with a crafted extension, as demonstrated by .php.txt or .php%20.
SecRule &REQUEST_COOKIES_NAMES:dcxd "@ge 1" \
	"id:66600752,chain,msg:'POL-2016-7902',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:upfiletitle "@ge 1" \
	"chain,t:none"
SecRule FILES "@rx \.(?:php[\d]?|js|pl|rb|sh|p?html|asp|exe|com|htaccess)" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-100036
# CVSS: 4.3
# Publish: 2015-01-13T15:59:00
# Cross-site scripting (XSS) vulnerability in FlatPress 1.0.2 allows remote attackers to inject arbitrary web script or HTML via the content parameter to the default URI.
SecRule ARGS_GET:x "@beginsWith entry:entry" \
	"id:66600753,chain,msg:'POL-2014-100036',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:content "@contains </textarea" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"


# CVE: CVE-2016-9998
# CVSS: 4.3
# Publish: 2016-12-17T03:59:00
# SPIP 3.1.x suffer from a Reflected Cross Site Scripting Vulnerability in /ecrire/exec/info_plugin.php involving the `$plugin` parameter, as demonstrated by a /ecrire/?exec=info_plugin URL.
SecRule ARGS_GET:plugin "@contains <" \
	"id:66600754,chain,msg:'POL-2016-9998',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:spip_lang|&REQUEST_COOKIES:spip_session "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:exec "@streq info_plugin" \
	"t:none,t:lowercase"


# CVE: CVE-2016-9184
# CVSS: 5
# Publish: 2016-11-04T10:59:00
# In /framework/modules/core/controllers/expHTMLEditorController.php of Exponent CMS 2.4.0, untrusted input is used to construct a table name, and in the selectObject method in mysqli class, table names are wrapped with a character that common filters do not filter, allowing for SQL Injection. Impact is Information Disclosure.
SecRule ARGS_GET:controller "@streq exphtmleditorcontroller" \
	"id:66600755,chain,msg:'POL-2016-9184',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:action "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:editor "@rx \W" \
	"t:none"

SecRule ARGS_POST:controller "@streq exphtmleditorcontroller" \
	"id:66600756,chain,msg:'POL-2016-9184',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:action "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:editor "@rx \W" \
	"t:none"


# CVE: CVE-2016-9272
# CVSS: 6.4
# Publish: 2016-11-11T11:59:00
# A Blind SQL Injection Vulnerability in Exponent CMS through 2.4.0, with the rerank array parameter, can lead to site database information disclosure and denial of service.
SecRule ARGS:action "@streq manage_ranks" \
	"id:66600757,chain,msg:'POL-2016-9272',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:controller "@streq container" \
	"chain,t:none,t:lowercase"
SecRule ARGS:rerank[] "@rx \D" \
	"t:none"

SecRule REQUEST_FILENAME "@endsWith serendipity_admin.php" \
	"id:66600758,chain,msg:'POL-2016-9272',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:serendipity[adminModule]|ARGS_GET:serendipity[step] "@pm category directorydocreate" \
	"chain,t:none,t:lowercase"
SecRule ARGS:serendipity[cat][name]|ARGS:serendipity[name] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-9889
# CVSS: 4.3
# Publish: 2016-12-23T05:59:00
# Some forms with the parameter geo_zoomlevel_to_found_location in Tiki Wiki CMS 12.x before 12.10 LTS, 15.x before 15.3 LTS, and 16.x before 16.1 don't have the input sanitized, related to tiki-setup.php and article_image.php. The impact is XSS.
SecRule &ARGS_POST:mapsset "@ge 1" \
	"id:66600759,chain,msg:'POL-2016-9889',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith tiki-admin.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@streq maps" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:geo_zoomlevel_to_found_location "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-10037
# CVSS: 7.5
# Publish: 2016-12-24T11:59:00
# Directory traversal in /connectors/index.php in MODX Revolution before 2.5.2-pl allows remote attackers to perform local file inclusion/traversal/manipulation via a crafted id (aka dir) parameter, related to browser/directory/getlist.
SecRule ARGS:id|ARGS:dir "@contains .." \
	"id:66600760,chain,msg:'POL-2016-10037',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:action "@pm getfiles getlist" \
	"chain,t:none,t:lowercase"
SecRule &REQUEST_HEADERS:modauth|&REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@contains /connectors/" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2016-10082
# CVSS: 7.5
# Publish: 2016-12-30T07:59:00
# include/functions_installer.inc.php in Serendipity through 2.0.5 is vulnerable to File Inclusion and a possible Code Execution attack during a first-time installation because it fails to sanitize the dbType POST parameter before adding it to an include() call in the bundled-libs/serendipity_generateFTPChecksums.php file.
SecRule REQUEST_FILENAME "@endsWith serendipity_admin.php" \
	"id:66600761,chain,msg:'POL-2016-10082',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:dbType "@rx \W" \
	"t:none"


# CVE: CVE-2016-10096
# CVSS: 7.5
# Publish: 2017-01-01T19:59:00
# SQL injection vulnerability in register.php in GeniXCMS before 1.0.0 allows remote attackers to execute arbitrary SQL commands via the activation parameter.
SecRule &REQUEST_COOKIES_NAMES:GenixCMS "@ge 1" \
	"id:66600762,chain,msg:'POL-2016-10096',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith register.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS:activation "@contains '" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-3974
# CVSS: 4.3
# Publish: 2014-06-05T17:55:00
# Cross-site scripting (XSS) vulnerability in filemanager.php in AuraCMS 3.0 and earlier allows remote attackers to inject arbitrary web script or HTML via the viewdir parameter.
SecRule REQUEST_FILENAME "@endsWith filemanager.php" \
	"id:66600763,chain,msg:'POL-2014-3974',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES:Login "@rx ^[a-z0-9]{26}$" \
	"chain,t:none"
SecRule ARGS_GET:viewdir "@contains \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2013-1466
# CVSS: 4.3
# Publish: 2014-02-05T15:10:00
# Multiple cross-site scripting (XSS) vulnerabilities in glFusion before 1.2.2.pl4 allow remote attackers to inject arbitrary web script or HTML via the (1) subject parameter to profiles.php; (2) address1, (3) address2, (4) calendar_type, (5) city, (6) state, (7) title, (8) url, or (9) zipcode parameter to calendar/index.php; (10) title or (11) url parameter to links/index.php; or (12) PATH_INFO to admin/plugins/mediagallery/xppubwiz.php/.
#5000245
SecRule REQUEST_URI "!@rx /profiles\.php" \
        "id:66600764,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000243"

SecMarker BEGIN-RULE5000243
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600765,chain,msg:'POL-2013-1466',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:subject "@rx <" "

SecMarker END-RULE5000243

SecRule REQUEST_URI "!@rx /calendar/index\.php" \
        "id:66600766,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000244"

SecMarker BEGIN-RULE5000244
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600767,chain,msg:'POL-2013-1466',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:address1|ARGS_POST:address2|ARGS_POST:calendar_type|ARGS_POST:city|ARGS_POST:state|ARGS_POST:title|ARGS_POST:url|ARGS_POST:zipcode "@rx <" "

SecMarker END-RULE5000244

SecRule REQUEST_URI "!@rx /links/index\.php" \
        "id:66600768,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000245"

SecMarker BEGIN-RULE5000245
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600769,chain,msg:'POL-2013-1466',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:title|ARGS_POST:url "@rx <" "

SecMarker END-RULE5000245


# CVE: CVE-2013-3728
# CVSS: 3.5
# Publish: 2014-03-13T14:55:00
# Cross-site scripting (XSS) vulnerability in Kasseler CMS before 2 r1232 allows remote authenticated users with permissions to create categories to inject arbitrary web script or HTML via the cat parameter in an admin_new_category action to admin.php.
SecRule &ARGS_GET:do "!eq 0" \
	"id:66600770,chain,msg:'POL-2013-3728',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:module "@pm sendmail news voting forum account categories database" \
	"chain,t:none,t:lowercase,multiMatch"
SecRule ARGS:cat|ARGS:desc|ARGS:dok|ARGS:fid|ARGS:groups[]|ARGS:id|ARGS:module|ARGS:nid|ARGS:tid|ARGS:tid|ARGS:vid "@contains >" \
	"chain,t:none,t:urlDecodeUni,multiMatch"
SecRule REQUEST_FILENAME "@pm admin.php index.php" \
	"t:none,t:urlDecodeUni,t:lowercase,multiMatch"


# CVE: CVE-2013-3727
# CVSS: 7.5
# Publish: 2014-03-13T14:55:00
# SQL injection vulnerability in Kasseler CMS before 2 r1232 allows remote authenticated users to execute arbitrary SQL commands via the groups[] parameter to admin.php.  NOTE: this can be leveraged using CSRF to allow remote unauthenticated attackers to execute arbitrary SQL commands.
SecRule &ARGS_GET:do "!eq 0" \
	"id:66600771,chain,msg:'POL-2013-3727',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:module "@pm sendmail news voting forum account categories" \
	"chain,t:none,t:lowercase,multiMatch"
SecRule ARGS:desc|ARGS:dok|ARGS:fid|ARGS:groups[]|ARGS:id|ARGS:module|ARGS:nid|ARGS:tid|ARGS:tid|ARGS:vid "@rx [\'\,]" \
	"chain,t:none,t:urlDecodeUni,multiMatch"
SecRule REQUEST_FILENAME "@pm admin.php index.php" \
	"t:none,t:urlDecodeUni,t:lowercase,multiMatch"


# CVE: CVE-2014-8295
# CVSS: 7.5
# Publish: 2014-10-15T14:55:00
# SQL injection vulnerability in joblogs.php in Bacula-Web 5.2.10 allows remote attackers to execute arbitrary SQL commands via the jobid parameter.
SecRule REQUEST_FILENAME "@endsWith joblogs.php" \
	"id:66600772,chain,msg:'POL-2014-8295',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:jobid "@rx \'" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-5101
# CVSS: 4.3
# Publish: 2014-07-25T19:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in WeBid 1.1.1 allow remote attackers to inject arbitrary web script or HTML via the (1) TPL_name, (2) TPL_nick, (3) TPL_email, (4) TPL_year, (5) TPL_address, (6) TPL_city, (7) TPL_prov, (8) TPL_zip, (9) TPL_phone, (10) TPL_pp_email, (11) TPL_authnet_id, (12) TPL_authnet_pass, (13) TPL_worldpay_id, (14) TPL_toocheckout_id, or (15) TPL_moneybookers_email in a first action to register.php or the (16) username parameter in a login action to user_login.php.
SecRule REQUEST_FILENAME "@endsWith register.php" \
	"id:66600773,chain,msg:'POL-2014-5101',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:TPL_name|ARGS_POST:TPL_nick|ARGS_POST:TPL_email|ARGS_POST:TPL_year|ARGS_POST:TPL_address|ARGS_POST:TPL_city|ARGS_POST:TPL_prov|ARGS_POST:TPL_zip|ARGS_POST:TPL_phone|ARGS_POST:TPL_pp_email|ARGS_POST:TPL_authnet_id|ARGS_POST:TPL_authnet_pass|ARGS_POST:TPL_wordpay_id|ARGS_POST:TPL_toocheckout_id|ARGS_POST:TPL_moneybookers_email "@rx \"" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_FILENAME "@endsWith user_login.php" \
	"id:66600774,chain,msg:'POL-2014-5101',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:username "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4036
# CVSS: 4.3
# Publish: 2014-06-11T14:55:00
# Cross-site scripting (XSS) vulnerability in modules/system/admin.php in ImpressCMS 1.3.6.1 allows remote attackers to inject arbitrary web script or HTML via the query parameter in a listimg action.
SecRule REQUEST_FILENAME "@endsWith modules/system/admin.php" \
	"id:66600775,chain,msg:'POL-2014-4036',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:ICMSSESSION "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:fct "@streq images" \
	"chain,t:none"
SecRule ARGS_POST:query "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2016-1713
# CVSS: 8.5
# Publish: 2017-04-14T18:59:00
# Unrestricted file upload vulnerability in the Settings_Vtiger_CompanyDetailsSave_Action class in modules/Settings/Vtiger/actions/CompanyDetailsSave.php in Vtiger CRM 6.4.0 allows remote authenticated users to execute arbitrary code by uploading a crafted image file with an executable extension, then accessing it via a direct request to the file in test/logo/.  NOTE: this vulnerability exists because of an incomplete fix for CVE-2015-6000.
SecRule ARGS_POST:__vtrftk "@beginsWith sid:" \
	"id:66600776,chain,msg:'POL-2016-1713',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES:PHPSESSID "@eq 26" \
	"chain,t:none,t:length"
SecRule FILES "!@rx \.(?:gif|p?jpe?g|(?:x-)?png)$" \
	"t:none,t:lowercase"


# CVE: CVE-2014-9752
# CVSS: 6.5
# Publish: 2015-11-16T19:59:00
# Unrestricted file upload vulnerability in mods/_core/properties/lib/course.inc.php in ATutor before 2.2 patch 6 allows remote authenticated users to execute arbitrary PHP code by uploading a file with a PHP extension as a customicon for a new course, then accessing it via a direct request to the file in content/. <a href="http://cwe.mitre.org/data/definitions/434.html">CWE-434: Unrestricted Upload of File with Dangerous Type</a>
SecRule REQUEST_FILENAME "@pm create_course.php edit_course.php" \
	"id:66600777,chain,msg:'POL-2014-9752',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule FILES_NAMES "@streq customicon" \
	"chain,t:none,t:lowercase"
SecRule FILES "!@rx \w+.(png|jpg|gif)" \
	"t:none,t:lowercase"


# CVE: CVE-2015-1435
# CVSS: 4.3
# Publish: 2015-02-16T15:59:00
# Cross-site scripting (XSS) vulnerability in my little forum before 2.3.4 allows remote attackers to inject arbitrary web script or HTML via the back parameter to index.php.
SecRule ARGS_GET:mode "@streq posting" \
	"id:66600778,chain,msg:'POL-2015-1435',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:/^mlf\w+$/ "@gt 0" \
	"chain,t:none"
SecRule ARGS_GET:back "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4688
# CVSS: 6.5
# Publish: 2014-07-02T10:35:00
# pfSense before 2.1.4 allows remote authenticated users to execute arbitrary commands via (1) the hostname value to diag_dns.php in a Create Alias action, (2) the smartmonemail value to diag_smart.php, or (3) the database value to status_rrd_graph_img.php. Per: http://cwe.mitre.org/data/definitions/77.html
# 
# "CWE-77: Improper Neutralization of Special Elements used in a Command ('Command Injection')"
SecRule REQUEST_FILENAME "@endsWith status_rrd_graph_img.php" \
	"id:66600779,chain,msg:'POL-2014-4688',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:database|ARGS:graph "@rx [\\\\|\||\"|\0|'|\/]" \
	"t:none,t:urlDecodeUni,multiMatch"


# CVE: CVE-2014-5193
# CVSS: 4.3
# Publish: 2014-08-07T11:13:00
# Cross-site scripting (XSS) vulnerability in admin/admin.php in Sphider 1.3.6 allows remote attackers to inject arbitrary web script or HTML via the category parameter.  NOTE: the url parameter vector is already covered by CVE-2014-5082.
SecRule REQUEST_URI "@contains admin/admin.php" \
	"id:66600780,chain,msg:'POL-2014-5193',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,t:normalizePath,t:removeWhitespace,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:f "@rx \d" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:removeWhitespace"
SecRule ARGS_POST:category "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-5194
# CVSS: 6.5
# Publish: 2014-08-07T11:13:00
# Static code injection vulnerability in admin/admin.php in Sphider 1.3.6 allows remote authenticated users to inject arbitrary PHP code into settings/conf.php via the _word_upper_bound parameter.
SecRule REQUEST_URI "@contains admin/admin.php" \
	"id:66600781,chain,msg:'POL-2014-5194',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,t:normalizePath,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:_word_upper_bound "@rx \D" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4852
# CVSS: 7.5
# Publish: 2014-07-10T16:55:00
# SQL injection vulnerability in admin/uploads.php in The Digital Craft AtomCMS, possibly 2.0, allows remote attackers to execute arbitrary SQL commands via the id parameter.
SecRule REQUEST_FILENAME "@endsWith admin/uploads.php" \
	"id:66600782,chain,msg:'POL-2014-4852',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:id "@rx \D+" \
	"t:none"


# CVE: CVE-2014-5115
# CVSS: 5
# Publish: 2014-07-29T14:55:00
# Absolute path traversal vulnerability in DirPHP 1.0 allows remote attackers to read arbitrary files via a full pathname in the phpfile parameter to index.php.
SecRule ARGS_GET:phpfile "@rx ^[\.\\\\\/]+" \
	"id:66600783,msg:'POL-2014-5115',phase:2,deny,status:403,log,t:none,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"


# CVE: CVE-2015-5648
# CVSS: 6.5
# Publish: 2015-10-11T01:59:00
# SQL injection vulnerability in list.php in phpRechnung before 1.6.5 allows remote authenticated users to execute arbitrary SQL commands via unspecified vectors.
SecRule &ARGS:TBLName "@ge 1" \
	"id:66600784,chain,msg:'POL-2015-5648',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@pm methodofpayment tax category posgroup position invoice addressbook payment syslog config cashbook message user offer" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith list.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-8369
# CVSS: 7.5
# Publish: 2015-12-17T19:59:00
# SQL injection vulnerability in include/top_graph_header.php in Cacti 0.8.8f and earlier allows remote attackers to execute arbitrary SQL commands via the rra_id parameter in a properties action to graph.php.
SecRule ARGS_GET:rra_id "@rx \D" \
	"id:66600785,chain,msg:'POL-2015-8369',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@streq properties" \
	"chain,t:none"
SecRule &REQUEST_COOKIES:Cacti "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith graph.php" \
	"t:none,t:lowercase"


# CVE: CVE-2013-5983
# CVSS: 4.3
# Publish: 2014-02-06T16:10:00
# Multiple cross-site scripting (XSS) vulnerabilities in GuppY before 4.6.28 allow remote attackers to inject arbitrary web script or HTML via the (1) "an" parameter to agenda.php or (2) cat parameter to mobile/thread.php.
#5000251
SecRule REQUEST_URI "!@rx /agenda\.php" \
        "id:66600786,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000250"

SecMarker BEGIN-RULE5000250
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600787,chain,msg:'POL-2013-5983',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:an "@rx <|\"" "

SecMarker END-RULE5000250

SecRule REQUEST_URI "!@rx /mobile/thread\.php" \
        "id:66600788,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000251"

SecMarker BEGIN-RULE5000251
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600789,chain,msg:'POL-2013-5983',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:cat "@rx <|\"" "

SecMarker END-RULE5000251


# CVE: CVE-2015-5651
# CVSS: 4.3
# Publish: 2015-10-03T22:59:00
# Cross-site scripting (XSS) vulnerability in Dotclear before 2.8.1 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.
SecRule REQUEST_COOKIES:dcxd "@rx ^[0-9a-f]{40}$" \
	"id:66600790,chain,msg:'POL-2015-5651',phase:1,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith posts.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:/entries\[\d+\]/ "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-6809
# CVSS: 4.3
# Publish: 2015-09-04T15:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in BEdita before 3.6.0 allow remote attackers to inject arbitrary web script or HTML via the (1) cfg[projectName] parameter to index.php/admin/saveConfig, the (2) data[stats_provider_url] parameter to index.php/areas/saveArea, or the (3) data[description] parameter to index.php/areas/saveSection.
SecRule REQUEST_FILENAME "@contains bedita-app/admin/saveconfig" \
	"id:66600791,chain,msg:'POL-2015-6809',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:cfg[projectName] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith bedita-app/areas/savearea" \
	"id:66600792,chain,msg:'POL-2015-6809',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:data[stats_provider_url] "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2013-7375
# CVSS: 7.5
# Publish: 2014-05-05T17:06:00
# SQL injection vulnerability in includes/classes/Authenticate.class.php in PHP-Fusion 7.02.01 through 7.02.05 allows remote attackers to execute arbitrary SQL commands via the user ID in a user cookie, a different vulnerability than CVE-2013-1803.
SecRule REQUEST_COOKIES:/fusion\w+user/ "@rx [^a-z0-9\.]" \
	"id:66600793,msg:'POL-2013-7375',phase:1,deny,log,t:none,t:htmlEntityDecode,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"


# CVE: CVE-2015-0213
# CVSS: 6.8
# Publish: 2015-06-01T19:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in (1) editcategories.html and (2) editcategories.php in the Glossary module in Moodle through 2.5.9, 2.6.x before 2.6.7, 2.7.x before 2.7.4, and 2.8.x before 2.8.2 allow remote attackers to hijack the authentication of unspecified victims.
SecRule REQUEST_FILENAME "@endsWith mod/glossary/editcategories.php" \
	"id:66600794,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.moodle_gl=1',setvar:'SESSION.TIMEOUT=300',expirevar:'SESSION.moodle_gl=300',t:none,t:lowercase"

SecRule SESSION:moodle_gl "@eq 1" \
	"id:66600795,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'OtherApps'"

SecRule REQUEST_FILENAME "@endsWith mod/glossary/editcategories.php" \
	"id:66600796,chain,msg:'POL-2015-0213',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:moodle_gl "!@eq 1" \
	"t:none"


# CVE: CVE-2014-2579
# CVSS: 7.6
# Publish: 2014-04-25T20:55:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in XCloner Standalone 3.5 and earlier allow remote attackers to hijack the authentication of administrators for requests that (1) change the administrator password via the config task to index2.php or (2) when the enable_db_backup and sql_mem options are enabled, access the database backup functionality via the dbbackup_comp parameter in the generate action to index2.php.  NOTE: vector 2 might be a duplicate of CVE-2014-2340, which is for the XCloner Wordpress plugin.  NOTE: remote attackers can leverage CVE-2014-2996 with vector 2 to execute arbitrary commands.
#5000323
SecRule REQUEST_URI "!@rx index2\.php" \
        "id:66600797,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000323"

SecMarker BEGIN-RULE5000323
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600798,phase:2,pass,setvar:'SESSION.TIMEOUT=3600',setvar:'SESSION.XCloner=1',expirevar:'SESSION.XCloner=3600',nolog,rev:1,severity:2,tag:'OtherApps'"

SecRule SESSION:XCloner "@eq 1" \
        "id:66600799,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'OtherApps'"

SecRule REQUEST_METHOD "@streq POST" \
        "id:66600800,chain,msg:'POL-2014-2579',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:jcuser "@eq 1" \
        "chain"
SecRule &ARGS_POST:jcpass "@eq 1" \
        "chain"
SecRule ARGS_POST:task "@streq config" \
        "chain"
SecRule ARGS_POST:action "@streq save" "

SecMarker END-RULE5000323

# CVE: CVE-2015-8832
# CVSS: 6.5
# Publish: 2017-02-09T15:59:00
# Multiple incomplete blacklist vulnerabilities in inc/core/class.dc.core.php in Dotclear before 2.8.2 allow remote authenticated users with "manage their own media items" and "manage their own entries and comments" permissions to execute arbitrary PHP code by uploading a file with a (1) .pht, (2) .phps, or (3) .phtml extension.
SecRule &REQUEST_COOKIES:dcxd "@ge 1" \
	"id:66600801,chain,msg:'POL-2015-8832',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'OtherApps'"
SecRule REQUEST_BASENAME "@streq media.php" \
	"chain,t:none,t:lowercase"
SecRule FILES "@rx \.(?:(?:p|s)?h(?:p[2-7s]?|(?:tm)?l?)|dll|exe|js|pl|rb|sh|\.htaccess)$" \
	"t:none,t:lowercase"


# CVE: CVE-2015-1040
# CVSS: 3.5
# Publish: 2015-01-15T15:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the administrative backend in BEdita 3.4.0 allow remote authenticated users to inject arbitrary web script or HTML via the (1) lrealname field in the editProfile form to index.php/home/profile; the (2) data[title] or (3) data[description] field in the addQuickItem form to index.php; the (4) "note text" field in the saveNote form to index.php/areas; or the (5) titleBEObject or (6) tagsArea field in the updateForm form to index.php/documents/view.
SecRule REQUEST_FILENAME "@endsWith bedita-app/home/editprofile" \
	"id:66600802,chain,msg:'POL-2015-1040',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:data[User][realname] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith bedita-app/pages/savequickitem" \
	"id:66600803,chain,msg:'POL-2015-1040',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:data[title]|ARGS_POST:data[description] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith bedita-app/pages/savenote" \
	"id:66600804,chain,msg:'POL-2015-1040',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:data[description] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith bedita-app/documents/save" \
	"id:66600805,chain,msg:'POL-2015-1040',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:data[title] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-2708
# CVSS: 7.5
# Publish: 2014-04-10T20:29:00
# Multiple SQL injection vulnerabilities in graph_xport.php in Cacti 0.8.7g, 0.8.8b, and earlier allow remote attackers to execute arbitrary SQL commands via the (1) graph_start, (2) graph_end, (3) graph_height, (4) graph_width, (5) graph_nolegend, (6) print_source, (7) local_graph_id, or (8) rra_id parameter.
SecRule ARGS_GET:graph_end|ARGS_GET:graph_height|ARGS_GET:graph_start|ARGS_GET:graph_width|ARGS_GET:local_graph_id|ARGS_GET:rra_id "[^0-9]" \
	"id:66600806,chain,msg:'POL-2014-2708',phase:1,deny,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@streq graph_xport.php" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2016-9283
# CVSS: 5
# Publish: 2016-11-11T22:59:00
# SQL Injection in framework/core/subsystems/expRouter.php in Exponent CMS v2.4.0 allows remote attackers to read database information via address/addContentToSearch/id/ and a trailing string, related to a "sef URL" issue.
SecRule REQUEST_URI "@contains address/addcontenttosearch/id/" \
	"id:66600807,chain,msg:'POL-2016-9283',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule MATCHED_VAR "!@rx id\/(?:\d+$)?$" \
	"t:none,t:lowercase,t:removeWhitespace"


# CVE: CVE-2015-8786
# CVSS: 6.8
# Publish: 2016-12-09T20:59:00
# The Management plugin in RabbitMQ before 3.6.1 allows remote authenticated users with certain privileges to cause a denial of service (resource consumption) via the (1) lengths_age or (2) lengths_incr parameter.
SecRule REQUEST_FILENAME "@contains /api/vhosts/" \
	"id:66600808,chain,msg:'POL-2015-8786',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS:lengths_age|ARGS:lengths_incr "@gt 3" \
	"chain,t:none,t:length"
SecRule &REQUEST_COOKIES:auth "@ge 1" \
	"t:none"

SecRule REQUEST_FILENAME "@contains /api/vhosts/" \
	"id:66600809,chain,msg:'POL-2015-8786',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:auth "@ge 1" \
	"chain,t:none"
SecRule ARGS:lengths_age|ARGS:lengths_incr "@rx ^[5-9][0-9][1-9]$" \
	"t:none"


# CVE: CVE-2014-3247
# CVSS: 4.3
# Publish: 2014-05-15T14:55:00
# Cross-site scripting (XSS) vulnerability in Collabtive 1.2 allows remote authenticated users to inject arbitrary web script or HTML via the desc parameter in an Add project (addpro) action to admin.php.
#5000293
SecRule REQUEST_URI "!@rx admin\.php" \
        "id:66600810,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000293"

SecMarker BEGIN-RULE5000293
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600811,chain,msg:'POL-2014-3247',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@streq addpro" \
        "chain,t:none,t:urlDecodeUni"
SecRule ARGS_POST:desc "@rx \'|\"|\<" "

SecMarker END-RULE5000293


# CVE: CVE-2014-3246
# CVSS: 6.5
# Publish: 2014-05-13T14:55:00
# SQL injection vulnerability in Collabtive 1.2 allows remote authenticated users to execute arbitrary SQL commands via the folder parameter in a fileview_list action to manageajax.php.
#5000292
SecRule REQUEST_URI "!@rx manageajax\.php" \
        "id:66600812,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000292"

SecMarker BEGIN-RULE5000292
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600813,chain,msg:'POL-2014-3246',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@streq fileview_list" \
        "chain,t:none,t:urlDecodeUni"
SecRule ARGS_GET:folder "!@rx ^\d+$" \
        "t:none,t:urlDecodeUni"

SecMarker END-RULE5000292

# CVE: CVE-2014-2092
# CVSS: 4.3
# Publish: 2014-03-02T17:55:00
# Cross-site scripting (XSS) vulnerability in lib/filemanager/ImageManager/editorFrame.php in CMS Made Simple 1.11.10 allows remote attackers to inject arbitrary web script or HTML via the action parameter, a different issue than CVE-2014-0334.  NOTE: the original disclosure also reported issues that may not cross privilege boundaries.
#5000291
SecRule REQUEST_URI "!@rx install" \
        "id:66600814,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000281"

SecMarker BEGIN-RULE5000281
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600815,chain,msg:'POL-2014-2092',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:default_cms_lang|ARGS_POST:docroot "@rx <" "

SecMarker END-RULE5000281

SecRule REQUEST_URI "!@rx lib/filemanager/ImageManager/editorFrame\.php" \
        "id:66600816,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000282"

SecMarker BEGIN-RULE5000282
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600817,chain,msg:'POL-2014-2092',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@rx <" "

SecMarker END-RULE5000282

SecRule REQUEST_URI "!@rx admin/addhtmlblob\.php" \
        "id:66600818,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000283"

SecMarker BEGIN-RULE5000283
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600819,chain,msg:'POL-2014-2092',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:htmlblob "@rx <" "

SecMarker END-RULE5000283

SecRule REQUEST_URI "!@rx admin/addtemplate\.php" \
        "id:66600820,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000284"

SecMarker BEGIN-RULE5000284
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600821,chain,msg:'POL-2014-2092',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:template "@rx <" "

SecMarker END-RULE5000284

SecRule REQUEST_URI "!@rx admin/addcss\.php" \
        "id:66600822,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000285"

SecMarker BEGIN-RULE5000285
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600823,chain,msg:'POL-2014-2092',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:css_name "@rx <" "

SecMarker END-RULE5000285

SecRule REQUEST_URI "!@rx admin/siteprefs\.php" \
        "id:66600824,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000286"

SecMarker BEGIN-RULE5000286
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600825,chain,msg:'POL-2014-2092',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:metadata|ARGS_POST:sitedownmessage "@rx <" "

SecMarker END-RULE5000286

SecRule REQUEST_URI "!@rx admin/pagedefaults\.php" \
        "id:66600826,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000287"

SecMarker BEGIN-RULE5000287
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600827,chain,msg:'POL-2014-2092',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:page_metadata "@rx <" "

SecMarker END-RULE5000287

SecRule REQUEST_URI "!@rx admin/addbookmark\.php" \
        "id:66600828,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000288"

SecMarker BEGIN-RULE5000288
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600829,chain,msg:'POL-2014-2092',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:title "@rx <" "

SecMarker END-RULE5000288

SecRule REQUEST_URI "!@rx admin/myaccount\.php" \
        "id:66600830,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000289"

SecMarker BEGIN-RULE5000289
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600831,chain,msg:'POL-2014-2092',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:date_format_string "@rx <" "

SecMarker END-RULE5000289

SecRule REQUEST_URI "!@rx admin/adminlog\.php" \
        "id:66600832,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000290"

SecMarker BEGIN-RULE5000290
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600833,chain,msg:'POL-2014-2092',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:filteruser "@rx <" "

SecMarker END-RULE5000290

SecRule REQUEST_URI "!@rx admin/editevent\.php" \
        "id:66600834,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000291"

SecMarker BEGIN-RULE5000291
SecRule REQUEST_METHOD "@streq POST" \
        "id:66600835,chain,msg:'POL-2014-2092',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:handler "@rx <" "

SecMarker END-RULE5000291

# CVE: CVE-2013-2754
# CVSS: 6.8
# Publish: 2014-03-11T19:37:00
# Cross-site request forgery (CSRF) vulnerability in Umisoft UMI.CMS before 2.9 build 21905 allows remote attackers to hijack the authentication of administrators for requests that add administrator accounts via a request to admin/users/add/user/do/.
#5000297
SecRule REQUEST_URI "!@rx /admin/users/add/user/" \
        "id:66600836,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000295"

SecMarker BEGIN-RULE5000295
SecRule REQUEST_METHOD "@streq GET" \
        "id:66600837,phase:2,pass,setvar:'SESSION.TIMEOUT=3600',setvar:'SESSION.UMICMS=1',expirevar:'SESSION.UMICMS=3600',nolog,rev:1,severity:2,tag:'OtherApps'"

SecMarker END-RULE5000295
SecRule REQUEST_URI "!@rx /admin/users/add/user/do" \
        "id:66600838,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000297"

SecMarker BEGIN-RULE5000297
SecRule SESSION:UMICMS "@eq 1" \
        "id:66600839,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'OtherApps'"


SecRule REQUEST_METHOD "@streq POST" \
        "id:66600840,chain,msg:'POL-2013-2754',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:data[new][login] "!@rx ^$" \
        "chain"
SecRule ARGS_POST:data[new][password][] "!@rx ^$" "

SecMarker END-RULE5000297

# CVE: CVE-2014-2317
# CVSS: 6.8
# Publish: 2014-03-09T13:16:00
# SQL injection vulnerability in ajax_udf.php in OpenDocMan before 1.2.7.2 allows remote attackers to execute arbitrary SQL commands via the table parameter.  NOTE: some of these details are obtained from third party information.
SecRule REQUEST_FILENAME "@contains ajax_udf.php" \
	"id:66600841,chain,msg:'POL-2014-2317',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:table "!@rx ^[\w]*$" "


# CVE: CVE-2014-1840
# CVSS: 4.3
# Publish: 2014-03-03T16:55:00
# Cross-site scripting (XSS) vulnerability in Upload/search.php in MyBB 1.6.12 and earlier allows remote attackers to inject arbitrary web script or HTML via the keywords parameter in a do_search action, which is not properly handled in a forced SQL error message.
SecRule ARGS_POST:keywords "@rx \"" \
	"id:66600842,chain,msg:'POL-2014-1840',deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "/upload/search\.php" \
	"chain,t:none,t:lowercase,t:urlDecodeUni"
SecRule ARGS:action "do_search" "


# CVE: CVE-2014-2280
# CVSS: 4.3
# Publish: 2014-03-20T16:55:00
# Cross-site scripting (XSS) vulnerability in the search feature in SeedDMS (formerly LetoDMS and MyDMS) before 4.3.4 allows remote attackers to inject arbitrary web script or HTML via the query parameter.
SecRule ARGS_GET:query "@rx \"" \
	"id:66600843,chain,msg:'POL-2014-2280',deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "/op\.search\.php" \
	"t:none,t:lowercase,t:urlDecodeUni"


# CVE: CVE-2014-9115
# CVSS: 7.5
# Publish: 2014-12-23T11:59:00
# SQL injection vulnerability in the rate_picture function in include/functions_rate.inc.php in Piwigo before 2.5.5, 2.6.x before 2.6.4, and 2.7.x before 2.7.2 allows remote attackers to execute arbitrary SQL commands via the rate parameter to picture.php, related to an improper data type in a comparison of a non-numeric value that begins with a digit.
SecRule ARGS_GET:action "@streq rate" \
	"id:66600844,chain,msg:'POL-2014-9115',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "@rx picture\.php\?\/\d+\/category\/\d+" \
	"chain,t:none,t:lowercase,t:urlDecodeUni,t:normalizePath"
SecRule ARGS_GET:rate "@rx \D" \
	"t:none"


# CVE: CVE-2014-1456
# CVSS: 4.3
# Publish: 2014-03-01T00:01:00
# Cross-site scripting (XSS) vulnerability in the login page in Open Web Analytics (OWA) before 1.5.6 allows remote attackers to inject arbitrary web script or HTML via the owa_user_id parameter to index.php.
SecRule ARGS_POST:owa_action "@contains base.login" \
	"id:66600845,chain,msg:'POL-2014-1456',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:owa_user_id "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-5308
# CVSS: 9
# Publish: 2014-10-08T17:55:00
# Multiple SQL injection vulnerabilities in TestLink 1.9.11 allow remote authenticated users to execute arbitrary SQL commands via the (1) name parameter in a Search action to lib/project/projectView.php or (2) id parameter to lib/events/eventinfo.php.
SecRule REQUEST_FILENAME "@endsWith lib/project/projectview.php" \
	"id:66600846,chain,msg:'POL-2014-5308',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:doAction "@streq search" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:name "@rx \'|\"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith lib/events/eventinfo.php" \
	"id:66600847,chain,msg:'POL-2014-5308',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:TESTLINK_USER_AUTH_COOKIE "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:id "@rx \D" \
	"t:none"


# CVE: CVE-2015-8604
# CVSS: 6.5
# Publish: 2016-04-11T21:59:00
# SQL injection vulnerability in the host_new_graphs function in graphs_new.php in Cacti 0.8.8f and earlier allows remote authenticated users to execute arbitrary SQL commands via the cg_g parameter in a save action.
SecRule REQUEST_FILENAME "@endsWith graphs_new.php" \
	"id:66600848,chain,msg:'POL-2015-8604',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:cg_g "@rx \D" \
	"chain,t:none"
SecRule REQUEST_COOKIES_NAMES "@contains cacti" \
	"t:none,t:lowercase"


# CVE: CVE-2014-9432
# CVSS: 4.3
# Publish: 2014-12-31T22:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in templates/2k11/admin/overview.inc.tpl in Serendipity before 2.0-rc2 allow remote attackers to inject arbitrary web script or HTML via a blog comment in the QUERY_STRING to serendipity/index.php.
SecRule ARGS_POST:serendipity[comment] "@contains <" \
	"id:66600849,chain,msg:'POL-2014-9432',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES "@rx ^s9y_[a-f0-9]{32}$" \
	"t:none,t:lowercase"


# CVE: CVE-2014-4734
# CVSS: 4.3
# Publish: 2014-07-21T14:55:00
# Cross-site scripting (XSS) vulnerability in e107_admin/db.php in e107 2.0 alpha2 and earlier allows remote attackers to inject arbitrary web script or HTML via the type parameter.
SecRule REQUEST_FILENAME "@endsWith e107_admin/db.php" \
	"id:66600850,chain,msg:'POL-2014-4734',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:mode "@contains pref_editor" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:type "@contains '" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4737
# CVSS: 4.3
# Publish: 2014-10-10T14:55:00
# Cross-site scripting (XSS) vulnerability in Textpattern CMS before 4.5.7 allows remote attackers to inject arbitrary web script or HTML via the PATH_INFO to setup/index.php.
SecRule REQUEST_FILENAME "@contains textpattern/setup/index.php" \
	"id:66600851,chain,msg:'POL-2014-4737',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@contains \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-6635
# CVSS: 4.3
# Publish: 2014-10-26T20:55:00
# Cross-site scripting (XSS) vulnerability in Exponent CMS 2.3.0 allows remote attackers to inject arbitrary web script or HTML via the src parameter in the search action to index.php.
SecRule ARGS_POST:controller "@contains search" \
	"id:66600852,chain,msg:'POL-2014-6635',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:action "@contains none" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:src "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-6280
# CVSS: 4.3
# Publish: 2014-10-20T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in OSClass before 3.4.2 allow remote attackers to inject arbitrary web script or HTML via the (1) action or (2) nsextt parameter to oc-admin/index.php or the (3) nsextt parameter in an items_reported action to oc-admin/index.php.
SecRule REQUEST_FILENAME "@endsWith /oc-admin/index.php" \
	"id:66600853,chain,msg:'POL-2014-6280',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@contains items" \
	"chain,t:none"
SecRule ARGS_GET:action|ARGS_GET:nsextt "@contains <" \
	"t:none,t:lowercase,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-7257
# CVSS: 4.3
# Publish: 2014-01-03T18:54:00
# Cross-site scripting (XSS) vulnerability in Codiad 2.0.7 allows remote attackers to inject arbitrary web script or HTML via the Project Name field.
SecRule REQUEST_FILENAME "@endsWith project/controller.php" \
	"id:66600854,chain,msg:'POL-2013-7257',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@streq create" \
	"chain,t:none"
SecRule ARGS_GET:project_name "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-6308
# CVSS: 5
# Publish: 2014-10-20T14:55:00
# Directory traversal vulnerability in OSClass before 3.4.2 allows remote attackers to read arbitrary files via a .. (dot dot) in the file parameter in a render action to oc-admin/index.php.
SecRule REQUEST_FILENAME "@endsWith oc-admin/index.php" \
	"id:66600855,chain,msg:'POL-2014-6308',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES:osclass "@rx ^[a-z0-9]{26}$" \
	"chain,t:none"
SecRule ARGS_GET:page "@contains appearance" \
	"chain,t:none"
SecRule ARGS_GET:action "@contains render" \
	"chain,t:none"
SecRule ARGS_GET:file "@contains .." \
	"t:none,t:normalizePath"


# CVE: CVE-2014-1603
# CVSS: 4.3
# Publish: 2014-05-14T19:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in GetSimple CMS 3.3.1 allow remote attackers to inject arbitrary web script or HTML via the (1) param parameter to admin/load.php or (2) user, (3) email, or (4) name parameter in a Save Settings action to admin/settings.php.
SecRule REQUEST_FILENAME "@endsWith admin/settings.php" \
	"id:66600856,chain,msg:'POL-2014-1603',phase:2,deny,status:403,log,t:none,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:sitepwd_confirm "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:user|ARGS_POST:email|ARGS_POST:name "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith admin/load.php" \
	"id:66600857,chain,msg:'POL-2014-1603',phase:2,deny,status:403,log,t:none,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:param "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-3975
# CVSS: 5
# Publish: 2014-06-05T17:55:00
# Absolute path traversal vulnerability in filemanager.php in AuraCMS 3.0 allows remote attackers to list a directory via a full pathname in the viewdir parameter.
SecRule REQUEST_FILENAME "@endsWith filemanager.php" \
	"id:66600858,chain,msg:'POL-2014-3975',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:Login "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:viewdir "!@beginsWith files" \
	"t:none,t:urlDecodeUni,t:lowercase,t:normalizePath"


# CVE: CVE-2014-8793
# CVSS: 4.3
# Publish: 2014-12-19T15:59:00
# Cross-site scripting (XSS) vulnerability in lib/max/Admin/UI/Field/PublisherIdField.php in Revive Adserver before 3.0.6 allows remote attackers to inject arbitrary web script or HTML via the refresh_page parameter to www/admin/report-generate.php.
SecRule REQUEST_FILENAME "@endsWith www/admin/report-generate.php" \
	"id:66600859,chain,msg:'POL-2014-8793',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:submit_type "@streq change" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:refresh_page "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4744
# CVSS: 4.3
# Publish: 2014-07-09T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in osTicket before 1.9.2 allow remote attackers to inject arbitrary web script or HTML via the (1) Phone Number field to open.php or (2) Phone number field, (3) passwd1 field, (4) passwd2 field, or (5) do parameter to account.php.
SecRule REQUEST_COOKIES_NAMES "@contains ostsessid" \
	"id:66600860,chain,msg:'POL-2014-4744',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:a "@streq open" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith open.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_COOKIES_NAMES "@contains ostsessid" \
	"id:66600861,chain,msg:'POL-2014-4744',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith account.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:do "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_COOKIES_NAMES "@contains ostsessid" \
	"id:66600862,chain,msg:'POL-2014-4744',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith account.php" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_POST:do "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-8774
# CVSS: 4.3
# Publish: 2014-12-03T18:59:00
# Cross-site scripting (XSS) vulnerability in manager/index.php in MODX Revolution 2.x before 2.2.15 allows remote attackers to inject arbitrary web script or HTML via the context_key parameter.
SecRule ARGS_GET:class_key "@streq modstaticresource" \
	"id:66600863,chain,msg:'POL-2014-8774',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:context_key "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_URI "@contains /manager/" \
	"id:66600864,chain,msg:'POL-2014-8774',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:a "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:key "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule &ARGS_POST:HTTP_MODAUTH "@ge 1" \
	"id:66600865,chain,msg:'POL-2014-8774',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:context "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-8954
# CVSS: 4.3
# Publish: 2014-11-17T16:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in phpSound 1.0.5 allow remote attackers to inject arbitrary web script or HTML via the (1) Title or (2) Description fields in a playlist or the (3) filter parameter in an explore action to index.php.
SecRule REQUEST_FILENAME "@endsWith requests/manage_playlists.php" \
	"id:66600866,chain,msg:'POL-2014-8954',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:name "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:a "@streq explore" \
	"id:66600867,chain,msg:'POL-2014-8954',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:volume "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:filter "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-8690
# CVSS: 4.3
# Publish: 2015-02-19T15:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in Exponent CMS before 2.1.4 patch 6, 2.2.x before 2.2.3 patch 9, and 2.3.x before 2.3.1 patch 4 allow remote attackers to inject arbitrary web script or HTML via the (1) PATH_INFO, the (2) src parameter in a none action to index.php, or the (3) "First Name" or (4) "Last Name" field to users/edituser.
SecRule ARGS_POST:controller "@streq users" \
	"id:66600868,chain,msg:'POL-2014-8690',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:action "@streq update" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:firstname|ARGS_POST:lastname|ARGS_POST:username|ARGS_POST:src|ARGS_POST:int|ARGS_POST:avatar|ARGS_POST:email "@rx <|\"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-0807
# CVSS: 4.3
# Publish: 2014-03-28T15:55:00
# Cross-site scripting (XSS) vulnerability in the NewSectionPrompt function in include/tool/editing_page.php in gpEasy CMS 3.5.2 and earlier allows remote attackers to inject arbitrary web script or HTML via the section parameter in a new_section action to index.php.
SecRule REQUEST_FILENAME "@contains /gpEasy" \
	"id:66600869,chain,msg:'POL-2013-0807',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:PHPSESSID "@gt 0" \
	"chain,t:none"
SecRule ARGS_POST:cmd "@streq new_section" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:section "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2016-5706
# CVSS: 5
# Publish: 2016-07-03T01:59:00
# js/get_scripts.js.php in phpMyAdmin 4.0.x before 4.0.10.16, 4.4.x before 4.4.15.7, and 4.6.x before 4.6.3 allows remote attackers to cause a denial of service via a large array in the scripts parameter.
SecRule REQUEST_FILENAME "@endsWith /js/get_scripts.js.php" \
	"id:66600870,chain,msg:'POL-2016-5706',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:scripts[] "@gt 35" \
	"t:none"


# CVE: CVE-2016-5005
# CVSS: 3.5
# Publish: 2016-07-28T16:59:00
# Cross-site scripting (XSS) vulnerability in Apache Archiva 1.3.9 and earlier allows remote authenticated administrators to inject arbitrary web script or HTML via the connector.sourceRepoId parameter to admin/addProxyConnector_commit.action.
SecRule ARGS:connector.sourceRepoId "@contains <" \
	"id:66600871,chain,msg:'POL-2016-5005',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:rbkSignon "@ge 1" \
	"chain,t:none"
SecRule REQUEST_BASENAME "@rx ^(?:add|edit)proxyconnector(?:\!|_)commit\.action$" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2014-5462
# CVSS: 6.5
# Publish: 2014-12-08T16:59:00
# Multiple SQL injection vulnerabilities in OpenEMR 4.1.2 (Patch 7) and earlier allow remote authenticated users to execute arbitrary SQL commands via the (1) layout_id parameter to interface/super/edit_layout.php; (2) form_patient_id, (3) form_drug_name, or (4) form_lot_number parameter to interface/reports/prescriptions_report.php; (5) payment_id parameter to interface/billing/edit_payment.php; (6) id parameter to interface/forms_admin/forms_admin.php; (7) form_pid or (8) form_encounter parameter to interface/billing/sl_eob_search.php; (9) sortby parameter to interface/logview/logview.php; form_facility parameter to (10) procedure_stats.php, (11) pending_followup.php, or (12) pending_orders.php in interface/orders/; (13) patient, (14) encounterid, (15) formid, or (16) issue parameter to interface/patient_file/deleter.php; (17) search_term parameter to interface/patient_file/encounter/coding_popup.php; (18) text parameter to interface/patient_file/encounter/search_code.php; (19) form_addr1, (20) form_addr2, (21) form_attn, (22) form_country, (23) form_freeb_type, (24) form_partner, (25) form_name, (26) form_zip, (27) form_state, (28) form_city, or (29) form_cms_id parameter to interface/practice/ins_search.php; (30) form_pid parameter to interface/patient_file/problem_encounter.php; (31) patient, (32) form_provider, (33) form_apptstatus, or (34) form_facility parameter to interface/reports/appointments_report.php; (35) db_id parameter to interface/patient_file/summary/demographics_save.php; (36) p parameter to interface/fax/fax_dispatch_newpid.php; or (37) patient_id parameter to interface/patient_file/reminder/patient_reminders.php.
SecRule REQUEST_FILENAME "@pm super/edit_layout.php reports/prescriptions_report.php billing/edit_payment.php billing/sl_eob_search.php orders/procedure_stats.php orders/pending_followup.php orders/pending_orders.php encounter/coding_popup.php encounter/search_code.php reports/appointments_report.php summary/demographics_save.php fax/fax_dispatch_newpid.php patient_file/deleter.php forms_admin/forms_admin.php practice/ins_search.php" \
	"id:66600872,chain,msg:'POL-2014-5462',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:OpenEMR "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:layout_id|ARGS_POST:form_patient|ARGS_POST:form_drug_name|ARGS_POST:form_lot_number|ARGS_POST:payment_id|ARGS_POST:form_encounter|ARGS_POST:form_pid|ARGS_POST:search_term|ARGS_POST:text|ARGS_POST:form_facility|ARGS_POST:form_patient_id|ARGS_POST:form_apptstatus|ARGS_POST:form_provider|ARGS_POST:db_id|ARGS_POST:form_addr1|ARGS_POST:form_addr2|ARGS_POST:form_attn|ARGS_POST:form_country|ARGS_POST:form_freeb_type|ARGS_POST:form_partner|ARGS_POST:form_name|ARGS_POST:form_zip|ARGS_POST:form_state|ARGS_POST:form_city|ARGS_POST:form_cms_id|ARGS_GET:p|ARGS_GET:encounterid|ARGS_GET:issue|ARGS_GET:formid|ARGS_GET:id|ARGS:patient "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith patient_file/problem_encounter.php" \
	"id:66600873,chain,msg:'POL-2014-5462',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:OpenEMR "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:form_pid "@rx \D" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith reminder/patient_reminders.php" \
	"id:66600874,chain,msg:'POL-2014-5462',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:OpenEMR "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:patient_id "@rx \D" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith logview/logview.php" \
	"id:66600875,chain,msg:'POL-2014-5462',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:OpenEMR "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:sortby "!@pm date event user groupname patient_id success comments" \
	"t:none,t:lowercase"


# CVE: CVE-2014-8743
# CVSS: 3.5
# Publish: 2014-10-13T18:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Maestro module 7.x-1.x before 7.x-1.4 for Drupal allow remote authenticated users with certain permissions to inject arbitrary web script or HTML via a (1) Role or (2) Organic Group name.
SecRule TX:drupal "@eq 1" \
	"id:66600876,chain,msg:'POL-2014-8743',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:form_id "@pm content1_node_form user_admin_roles user_admin_role" \
	"chain,t:none,t:lowercase"
SecRule ARGS:name|ARGS:title "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2013-3294
# CVSS: 7.5
# Publish: 2014-02-11T17:55:00
# Multiple SQL injection vulnerabilities in Exponent CMS before 2.2.0 release candidate 1 allow remote attackers to execute arbitrary SQL commands via the (1) src or (2) username parameter to index.php.
SecRule &ARGS_POST:action "@ge 1" \
	"id:66600877,chain,msg:'POL-2013-3294',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:module "@contains login" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:src "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-2228
# CVSS: 4.3
# Publish: 2016-04-13T16:59:00
# Cross-site scripting (XSS) vulnerability in horde/templates/topbar/_menubar.html.php in Horde Groupware before 5.2.12 and Horde Groupware Webmail Edition before 5.2.12 allows remote attackers to inject arbitrary web script or HTML via the searchfield parameter, as demonstrated by a request to xplorer/gollem/manager.php.
SecRule REQUEST_FILENAME "@endsWith gollem/manager.php" \
	"id:66600878,chain,msg:'POL-2016-2228',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES "@contains horde" \
	"chain,t:none,t:lowercase"
SecRule ARGS:searchfield "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2016-2152
# CVSS: 4.3
# Publish: 2016-05-22T20:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in auth/db/auth.php in Moodle through 2.6.11, 2.7.x before 2.7.13, 2.8.x before 2.8.11, 2.9.x before 2.9.5, and 3.0.x before 3.0.3 allow remote attackers to inject arbitrary web script or HTML via an external DB profile field.
SecRule REQUEST_FILENAME "@endsWith admin/auth_config.php" \
	"id:66600879,chain,msg:'POL-2016-2152',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES_NAMES:MoodleSession "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:auth "@streq db" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-4949
# CVSS: 6.8
# Publish: 2013-07-29T23:27:00
# Unrestricted file upload vulnerability in view.php in Machform 2 allows remote attackers to execute arbitrary PHP code by uploading a PHP file, then accessing it via a direct request to the file in the upload form's directory in data/. Per: http://cwe.mitre.org/data/definitions/434.html
# 
# 
# 
# 'CWE-434: Unrestricted Upload of File with Dangerous Type'
SecRule REQUEST_FILENAME "@rx /data/form_[0-9]+/files/element_[0-9]+.*\.php" \
	"id:66600880,msg:'POL-2013-4949',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"


# CVE: CVE-2013-4951
# CVSS: 4.3
# Publish: 2013-07-29T23:27:00
# Multiple cross-site scripting (XSS) vulnerabilities in Mintboard 0.3 allow remote attackers to inject arbitrary web script or HTML via the (1) name or (2) pass parameter in views/login.php or (3) name or (4) pass parameter in views/signup.php.
SecRule QUERY_STRING "@rx (login|signup)" \
	"id:66600881,chain,msg:'POL-2013-4951',phase:2,deny,status:403,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:name|ARGS_POST:pass "@rx </?script" \
	"t:none,t:urlDecodeUni,t:lowercase,t:removeWhitespace"


# CVE: CVE-2015-4678
# CVSS: 7.5
# Publish: 2015-06-19T14:59:00
# SQL injection vulnerability in Persian Car CMS 1.0 allows remote attackers to execute arbitrary SQL commands via the cat_id parameter to the default URI.
SecRule REQUEST_FILENAME "@endsWith upload/index.php" \
	"id:66600882,chain,msg:'POL-2015-4678',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:cat_id "@rx \'" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-2102
# CVSS: 7.5
# Publish: 2015-02-27T15:59:00
# SQL injection vulnerability in view_item.php in ClipBucket 2.7 RC3 (2.7.0.4.v2929-rc3) allows remote attackers to execute arbitrary SQL commands via the item parameter.
SecRule REQUEST_FILENAME "@endsWith view_item.php" \
	"id:66600883,chain,msg:'POL-2015-2102',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:type "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:item "@rx \'" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-9580
# CVSS: 4.3
# Publish: 2015-01-08T19:59:00
# Cross-site scripting (XSS) vulnerability in ProjectSend (formerly cFTP) r561 allows remote attackers to inject arbitrary web script or HTML via the Description field in a file upload.  NOTE: this issue was originally incorrectly mapped to CVE-2014-1155; see CVE-2014-1155 for more information.
SecRule REQUEST_FILENAME "@pm upload-process-form.php edit-file.php" \
	"id:66600884,chain,msg:'POL-2014-9580',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:/file\[\d+]\[name]/|ARGS_POST:/file/[/d+]/[description]/ "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-2560
# CVSS: 4.3
# Publish: 2016-03-01T11:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in phpMyAdmin 4.0.x before 4.0.10.15, 4.4.x before 4.4.15.5, and 4.5.x before 4.5.5.1 allow remote attackers to inject arbitrary web script or HTML via (1) a crafted Host HTTP header, related to libraries/Config.class.php; (2) crafted JSON data, related to file_echo.php; (3) a crafted SQL query, related to js/functions.js; (4) the initial parameter to libraries/server_privileges.lib.php in the user accounts page; or (5) the it parameter to libraries/controllers/TableSearchController.class.php in the zoom search page.
SecRule REQUEST_COOKIES_NAMES "@contains pmapass" \
	"id:66600885,chain,msg:'POL-2016-2560',phase:3,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_HEADERS:Host "@rx \"" \
	"chain,t:none,t:urlDecodeUni"
SecRule RESPONSE_HEADERS:Set-Cookie "@contains pmaPass" \
	"t:none"

SecRule REQUEST_FILENAME "@endsWith server_privileges.php" \
	"id:66600886,chain,msg:'POL-2016-2560',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:initial "@rx \"" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_COOKIES_NAMES "@contains pmapass" \
	"t:none,t:lowercase"

SecRule REQUEST_FILENAME "@endsWith tbl_zoom_select.php" \
	"id:66600887,chain,msg:'POL-2016-2560',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS:it "@rx \D" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_COOKIES_NAMES "@contains pmapass" \
	"t:none,t:lowercase"


# CVE: CVE-2016-10134
# CVSS: 7.5
# Publish: 2017-02-17T02:59:00
# SQL injection vulnerability in Zabbix before 2.2.14 and 3.0 before 3.0.4 allows remote attackers to execute arbitrary SQL commands via the toggle_ids array parameter in latest.php.
SecRule ARGS:favobj "@streq toggle" \
	"id:66600888,chain,msg:'POL-2016-10134',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES "@contains zbx_sessionid" \
	"chain,t:none,t:lowercase"
SecRule ARGS:toggle_ids[] "@rx \W" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-7255
# CVSS: 3.5
# Publish: 2017-03-24T15:59:00
# XSS exists in the CMS Made Simple (CMSMS) 2.1.6 "Content-->News-->Add Article" feature via the m1_title parameter. Someone must login to conduct the attack.
SecRule ARGS:m1_title "@contains <" \
	"id:66600889,chain,msg:'POL-2017-7255',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:cms_passhash "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith /admin/moduleinterface.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2008-2898
# CVSS: 9.3
# Publish: 2008-06-27T18:41:00
# Directory traversal vulnerability in includes/header.php in Hedgehog-CMS 1.21 allows remote attackers to include and execute arbitrary local files via a .. (dot dot) in the c_temp_path parameter. NOTE: in some environments, this can be leveraged for remote file inclusion by using a UNC share pathname or an ftp, ftps, or ssh2.sftp URL.
SecRule REQUEST_LINE "@contains /includes/header.php" \
	"id:66600890,chain,msg:'POL-2008-2898',phase:2,deny,status:403,t:none,t:lowercase,t:urlDecodeUni,t:htmlEntityDecode,t:normalizePathWin,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_LINE "@contains GET " \
	"chain"
SecRule ARGS:c_temp_path "@contains ../" "


# CVE: CVE-2015-0553
# CVSS: 4.3
# Publish: 2015-01-21T15:28:00
# Cross-site scripting (XSS) vulnerability in admin/pages/modify.php in WebsiteBaker 2.8.3 SP3 allows remote attackers to inject arbitrary web script or HTML via the page_id parameter.
SecRule REQUEST_FILENAME "@endsWith admin/pages/modify.php" \
	"id:66600891,chain,msg:'POL-2015-0553',phase:2,deny,status:403,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page_id "@rx \D" \
	"t:none"


# CVE: CVE-2015-5625
# CVSS: 4.3
# Publish: 2015-09-07T14:59:00
# Cross-site scripting (XSS) vulnerability in OpenDocMan before 1.3.4 allows remote attackers to inject arbitrary web script or HTML via the redirection parameter.
SecRule REQUEST_COOKIES_NAMES|RESPONSE_HEADERS "@contains PHPSESSID" \
	"id:66600892,chain,msg:'POL-2015-5625',phase:3,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@rx \/(?:index\.php)?$" \
	"chain,t:none,t:lowercase"
SecRule ARGS:redirection "@rx data\:[\w\/]+\;base64" \
	"t:none,t:lowercase,t:removeWhitespace"


# CVE: CVE-2015-5521
# CVSS: 4.3
# Publish: 2015-07-14T16:59:00
# Cross-site scripting (XSS) vulnerability in BlackCat CMS 1.1.2 allows remote attackers to inject arbitrary web script or HTML via the name in a new group to backend/groups/index.php.
SecRule REQUEST_FILENAME "@endsWith backend/groups/ajax_save_group.php" \
	"id:66600893,chain,msg:'POL-2015-5521',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES:/^cat[\d]+sessionid$/ "@rx [0-9a-z]{26}" \
	"chain,t:none"
SecRule ARGS_POST:name "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-5519
# CVSS: 4.3
# Publish: 2015-07-14T16:59:00
# Cross-site scripting (XSS) vulnerability in the applyConvolution demo in WideImage 11.02.19 allows remote attackers to inject arbitrary web script or HTML via the matrix parameter to demo/index.php.
SecRule ARGS_GET:demo "@streq applyconvolution" \
	"id:66600894,chain,msg:'POL-2015-5519',phase:1,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@rx \/demo\/(?:index\.php)?$" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_GET:matrix "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-8987
# CVSS: 3.5
# Publish: 2015-08-24T15:59:00
# Cross-site scripting (XSS) vulnerability in the "set configuration" box in the Configuration Report page (adm_config_report.php) in MantisBT 1.2.13 through 1.2.17 allows remote administrators to inject arbitrary web script or HTML via the config_option parameter, a different vulnerability than CVE-2014-8986.
SecRule REQUEST_FILENAME "@endsWith adm_config_report.php" \
	"id:66600895,chain,msg:'POL-2014-8987',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES:MANTIS_STRING_COOKIE "@rx ^[a-f0-9]{64}$" \
	"chain,t:none"
SecRule ARGS:config_option "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-2570
# CVSS: 6.5
# Publish: 2015-04-16T17:00:00
# Unspecified vulnerability in the Oracle Demand Planning component in Oracle Supply Chain Products Suite 11.5.10, 12.0, 12.1, and 12.2 allows remote authenticated users to affect confidentiality, integrity, and availability via unknown vectors related to Security.
SecRule REQUEST_FILENAME "@endsWith /www/make_subset.php" \
	"id:66600896,chain,msg:'POL-2015-2570',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:fontfile "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:name "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-4425
# CVSS: 4.9
# Publish: 2015-08-18T17:59:00
# Directory traversal vulnerability in pimcore before build 3473 allows remote authenticated users with the "assets" permission to create or write to arbitrary files via a .. (dot dot) in the dir parameter to admin/asset/add-asset-compatibility.
SecRule REQUEST_COOKIES_NAMES "@contains pimcore_admin_sid" \
	"id:66600897,chain,msg:'POL-2015-4425',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith /admin/asset/add-asset-compatibility/" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule &ARGS:parentId "@ge 1" \
	"chain,t:none"
SecRule ARGS:dir "@contains .." \
	"t:none"


# CVE: CVE-2015-2665
# CVSS: 4.3
# Publish: 2015-06-17T18:59:00
# Cross-site scripting (XSS) vulnerability in Cacti before 0.8.8d allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.
SecRule REQUEST_COOKIES_NAMES "@contains cacti" \
	"id:66600898,chain,msg:'POL-2015-2665',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith /graphs.php" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:title "@rx \'" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-6528
# CVSS: 4.3
# Publish: 2015-08-20T20:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in install_classic.php in Coppermine Photo Gallery (CPG) 1.5.36 allow remote attackers to inject arbitrary web script or HTML via the (1) admin_username, (2) admin_password, (3) admin_email, (4) dbserver, (5) dbname, (6) dbuser, (7) dbpass, (8) table_prefix, or (9) impath parameter.
SecRule REQUEST_FILENAME "@endsWith /cpg15x/install_classic.php" \
	"id:66600899,chain,msg:'POL-2015-6528',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:admin_username|ARGS_POST:admin_password|ARGS_POST:admin_email|ARGS_POST:dbserver|ARGS_POST:dbname|ARGS_POST:dbuser|ARGS_POST:dbpass|ARGS_POST:table_prefix|ARGS_POST:impath "@rx <|\'|\"" \
	"t:none,t:urlDecodeUni,t:htmlEntitydecode"


# CVE: CVE-2015-1367
# CVSS: 7.5
# Publish: 2015-01-27T20:04:00
# SQL injection vulnerability in index.php in CatBot 0.4.2 allows remote attackers to execute arbitrary SQL commands via the lastcatbot parameter.
SecRule ARGS_POST:submit "@contains send!" \
	"id:66600900,chain,msg:'POL-2015-1367',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:lastcatbot "@rx \'" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith index.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-1423
# CVSS: 6.5
# Publish: 2015-01-29T15:59:00
# Multiple SQL injection vulnerabilities in Gecko CMS 2.2 and 2.3 allow remote administrators to execute arbitrary SQL commands via the (1) jak_delete_log[] or (2) ssp parameter to admin/index.php.
SecRule ARGS_GET:p "@streq logs" \
	"id:66600901,chain,msg:'POL-2015-1423',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:ssp "@rx \D" \
	"t:none"

SecRule ARGS_GET:p "@streq logs" \
	"id:66600902,chain,msg:'POL-2015-1423',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:jak_delete_log[] "@rx \D" \
	"t:none"


# CVE: CVE-2015-8770
# CVSS: 6
# Publish: 2016-01-29T19:59:00
# Directory traversal vulnerability in the set_skin function in program/include/rcmail_output_html.php in Roundcube before 1.0.8 and 1.1.x before 1.1.4 allows remote authenticated users with certain permissions to read arbitrary files or possibly execute arbitrary code via a .. (dot dot) in the _skin parameter to index.php.
SecRule ARGS_POST:_skin "@contains .." \
	"id:66600903,chain,msg:'POL-2015-8770',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:_action "@streq save-prefs" \
	"chain,t:none"
SecRule &ARGS_POST:_token "@ge 1" \
	"chain,t:none"
SecRule REQUEST_COOKIES_NAMES "@contains roundcube" \
	"t:none,t:lowercase"


# CVE: CVE-2015-1422
# CVSS: 4.3
# Publish: 2015-01-29T15:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in Gecko CMS 2.2 and 2.3 allow remote attackers to inject arbitrary web script or HTML via the (1) horder[], (2) jak_catid, (3) jak_content, (4) jak_css, (5) jak_delete_log[], (6) jak_email, (7) jak_extfile, (8) jak_file, (9) jak_hookshow[], (10) jak_img, (11) jak_javascript, (12) jak_lcontent, (13) jak_name, (14) jak_password, (15) jak_showcontact, (16) jak_tags, (17) jak_title, (18) jak_url, (19) jak_username, (20) real_hook_id[], (21) sp, (22) sreal_plugin_id[], (23) ssp, or (24) sssp parameter to admin/index.php or the (25) editor, (26) field_id, (27) fldr, (28) lang, (29) popup, (30) subfolder, or (31) type parameter to js/editor/plugins/filemanager/dialog.php.
SecRule &ARGS_GET:p "@gt 0" \
	"id:66600904,chain,msg:'POL-2015-1422',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:jak_extfile|ARGS_POST:jak_file|ARGS_POST:jak_tags "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule &ARGS_GET:p "@gt 0" \
	"id:66600905,chain,msg:'POL-2015-1422',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:sp|ARGS_GET:ssp|ARGS_GET:sssp|ARGS_GET:ssssp "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith js/editor/plugins/filemanager/dialog.php" \
	"id:66600906,chain,msg:'POL-2015-1422',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:type|ARGS_GET:editor|ARGS_GET:lang|ARGS_GET:fldr|ARGS_GET:field_id "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:p "@streq categories" \
	"id:66600907,chain,msg:'POL-2015-1422',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:jak_name|ARGS_POST:jak_varname|ARGS_POST:jak_url|ARGS_POST:jak_img "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:p "@streq site" \
	"id:66600908,chain,msg:'POL-2015-1422',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:jak_title|ARGS_POST:jak_description|ARGS_POST:jak_keywords|ARGS_POST:jak_author|ARGS_POST:jak_copy "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:p "@streq plugins" \
	"id:66600909,chain,msg:'POL-2015-1422',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:jak_generala|ARGS_POST:jak_managea|ARGS_POST:jak_name|ARGS_POST:jak_phpcode "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:p "@streq user" \
	"id:66600910,chain,msg:'POL-2015-1422',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:jak_name|ARGS_POST:jak_email|ARGS_POST:jak_username|ARGS_POST:jak_password "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:p "@streq usergroup" \
	"id:66600911,chain,msg:'POL-2015-1422',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:jak_name "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:p "@streq page" \
	"id:66600912,chain,msg:'POL-2015-1422',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:jak_catid|ARGS_POST:jak_title|ARGS_POST:jak_password|ARGS_POST:jak_css|ARGS_POST:jak_javascript|ARGS_POST:jak_showcontact|ARGS_POST:horder_new[]|ARGS_POST:real_hook_id_new[]|ARGS_POST:sreal_plugin_id_new[]|ARGS_POST:horder[]|ARGS_POST:real_hook_id[]|ARGS_POST:sreal_plugin_id[] "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:p "@streq contactform" \
	"id:66600913,chain,msg:'POL-2015-1422',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:jak_email|ARGS_POST:jak_title|ARGS_POST:jak_option[]|ARGS_POST:jak_options[] "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:p "@streq sitemap" \
	"id:66600914,chain,msg:'POL-2015-1422',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:jak_title|ARGS_POST:jak_hookshow[]|ARGS_POST:horder_new[]|ARGS_POST:real_hook_id_new[]|ARGS_POST:sreal_plugin_id_new[]|ARGS_POST:horder[]|ARGS_POST:real_hook_id[]|ARGS_POST:sreal_plugin_id[] "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:p "@streq logs" \
	"id:66600915,chain,msg:'POL-2015-1422',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:jak_delete_log[] "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-6967
# CVSS: 6.5
# Publish: 2015-09-16T14:59:00
# Unrestricted file upload vulnerability in the My Image plugin in Nibbleblog before 4.0.5 allows remote administrators to execute arbitrary code by uploading a file with an executable extension, then accessing it via a direct request to the file in content/private/plugins/my_image/image.php. <a href="http://cwe.mitre.org/data/definitions/434.html">CWE-434: Unrestricted Upload of File with Dangerous Type</a>
SecRule &REQUEST_COOKIES:PHPSESSID "@gt 0" \
	"id:66600916,chain,msg:'POL-2015-6967',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS:plugin "@streq my_image" \
	"chain,t:none,t:lowercase"
SecRule FILES "!@rx \.(?:jpe?g|png|gif)$" \
	"t:none,t:urlDecodeUni,t:lowercase"

SecRule REQUEST_FILENAME "@contains /content/private/plugins/my_image/" \
	"id:66600917,chain,msg:'POL-2015-6967',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_BASENAME "!@rx image\.(?:jpe?g|png|gif)$" \
	"t:none,t:lowercase"


# CVE: CVE-2017-6490
# CVSS: 4.3
# Publish: 2017-03-05T20:59:00
# Multiple Cross-Site Scripting (XSS) issues were discovered in EPESI 1.8.1.1. The vulnerabilities exist due to insufficient filtration of user-supplied data (cid, value, element, mode, tab, form_name, id) passed to the EPESI-master/modules/Utils/RecordBrowser/grid.php URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule REQUEST_FILENAME "@endsWith modules/utils/recordbrowser/grid.php" \
	"id:66600918,chain,msg:'POL-2017-6490',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:cid|ARGS_POST:value|ARGS_POST:element|ARGS_POST:mode|ARGS_POST:tab|ARGS_POST:form_name|ARGS_POST:id "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2017-6491
# CVSS: 4.3
# Publish: 2017-03-05T20:59:00
# Multiple Cross-Site Scripting (XSS) issues were discovered in EPESI 1.8.1.1. The vulnerabilities exist due to insufficient filtration of user-supplied data (tooltip_id, callback, args, cid) passed to the EPESI-master/modules/Utils/Tooltip/req.php URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule REQUEST_FILENAME "@endsWith modules/utils/tooltip/req.php" \
	"id:66600919,chain,msg:'POL-2017-6491',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:cid|ARGS_POST:tooltip_id|ARGS_POST:callback|ARGS_POST:args "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2017-6492
# CVSS: 9
# Publish: 2017-03-05T20:59:00
# SQL Injection was discovered in adm_program/modules/dates/dates_function.php in Admidio 3.2.5. The POST parameter dat_cat_id is concatenated into a SQL query without any input validation/sanitization.
SecRule REQUEST_FILENAME "@endsWith adm_program/modules/dates/dates_function.php" \
	"id:66600920,chain,msg:'POL-2017-6492',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:dat_cat_id "@rx \D" \
	"t:none"


# CVE: CVE-2017-6483
# CVSS: 4.3
# Publish: 2017-03-05T20:59:00
# Multiple Cross-Site Scripting (XSS) issues were discovered in ATutor 2.2.2. The vulnerabilities exist due to insufficient filtration of user-supplied data passed to several pages (lang_code in themes/*/admin/system_preferences/language_edit.tmpl.php). An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule ARGS_GET:lang_code "@contains \"" \
	"id:66600921,chain,msg:'POL-2017-6483',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:2,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:ATutorID "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith language_edit.tmpl.php" \
	"t:none,t:lowercase"


# CVE: CVE-2017-6808
# CVSS: 4.3
# Publish: 2017-03-11T06:59:00
# paintballrefjosh/MaNGOSWebV4 4.0.8 is vulnerable to a reflected XSS in inc/admin/template_files/admin.faq.php (id parameter).
SecRule REQUEST_FILENAME "@contains inc/admin/template_files/admin" \
	"id:66600922,chain,msg:'POL-2017-6808',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule MATCHED_VAR "@pm admin.faq.php admin.donate.php admin.shop.php admin.vote.php admin.fplinks.php" \
	"chain,t:none"
SecRule ARGS_GET:id|ARGS_GET:linkid "@contains \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-6908
# CVSS: 4.3
# Publish: 2017-03-15T00:59:00
# An issue was discovered in concrete5 <= 5.6.3.4. The vulnerability exists due to insufficient filtration of user-supplied data (fID) passed to the "concrete5-legacy-master/web/concrete/tools/files/selector_data.php" URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule REQUEST_FILENAME "@endsWith /concrete/tools/files/selector_data.php" \
	"id:66600923,chain,msg:'POL-2017-6908',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:fID "@rx \"|(?:java)?script\:" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-6958
# CVSS: 4.3
# Publish: 2017-03-17T09:59:00
# An XSS vulnerability in the MantisBT Source Integration Plugin (before 2.0.2) search result page allows an attacker to inject arbitrary HTML or JavaScript (if MantisBT's CSP settings permit it) by crafting any valid parameter.
SecRule ARGS:page "@streq source/search" \
	"id:66600924,chain,msg:'POL-2017-6958',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:MANTIS_STRING_COOKIE "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith plugin.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS:revision "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-8363
# CVSS: 7.5
# Publish: 2014-10-20T17:55:00
# SQL injection vulnerability in ss_handler.php in the WordPress Spreadsheet (wpSS) plugin 0.62 for WordPress allows remote attackers to execute arbitrary SQL commands via the ss_id parameter.
SecRule REQUEST_FILENAME "@endsWith fileupload.php" \
	"id:66600925,chain,msg:'POL-2014-8363',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:path "@eq 1" \
	"chain,t:none,t:lowercase"
SecRule &REQUEST_COOKIES_NAMES:phpsessid "@eq 1" \
	"chain,t:none,t:lowercase"
SecRule &REQUEST_COOKIES_NAMES:pivotxsession "@eq 1" \
	"chain,t:none,t:lowercase"
SecRule ARGS:name "@rx \..*\.(?:(?:p|s)?h(?:p[2-7s]?|(?:tm)?l?)|dll|exe|js|pl|rb|sh)$" \
	"t:none,t:lowercase"

SecRule REQUEST_FILENAME "@endsWith ss_handler.php" \
	"id:66600926,chain,msg:'POL-2014-8363',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:ss_id "@rx \D" \
	"t:none"


# CVE: CVE-2014-4194
# CVSS: 7.5
# Publish: 2014-07-09T14:55:00
# SQL injection vulnerability in zero_transact_article.php in ZeroCMS 1.0 allows remote attackers to execute arbitrary SQL commands via the article_id parameter in a Submit Comment action.
SecRule ARGS_POST:article_id "[^0-9]" \
	"id:66600927,chain,msg:'POL-2014-4194',phase:2,deny,status:403,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@contains zero_transact_article.php" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2014-4195
# CVSS: 4.3
# Publish: 2014-07-03T14:55:00
# Cross-site scripting (XSS) vulnerability in zero_view_article.php in ZeroCMS 1.0 allows remote attackers to inject arbitrary web script or HTML via the article_id parameter.
SecRule REQUEST_FILENAME "@endsWith views/zero_view_article.php" \
	"id:66600928,chain,msg:'POL-2014-4195',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:3,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:article_id "@rx \D" \
	"t:none"


# CVE: CVE-2014-5108
# CVSS: 4.3
# Publish: 2014-07-28T15:55:00
# Cross-site scripting (XSS) vulnerability in single_pages\download_file.php in concrete5 before 5.6.3 allows remote attackers to inject arbitrary web script or HTML via the HTTP Referer header to index.php/download_file.
SecRule REQUEST_HEADERS:Referer "@contains >" \
	"id:66600929,chain,msg:'POL-2014-5108',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:removeWhitespace,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "@contains index.php/download_file" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:removeWhitespace,t:lowercase"


# CVE: CVE-2015-7364
# CVSS: 6.8
# Publish: 2015-10-14T19:59:00
# The HTML_Quickform library, as used in Revive Adserver before 3.2.2, allows remote attackers to bypass the CSRF protection mechanism via an empty token.
SecRule &ARGS_POST:token "@eq 0" \
	"id:66600930,chain,msg:'POL-2015-7364',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_COOKIES:sessionID "@rx ^[a-z0-9]{32}$" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@rx (?:(?:advertiser|campaign|affiliate|zone|channel)\-edit|account\-user\-(?:name\-language|email|password))\.php$" \
	"t:none,t:urlDecodeUni,t:lowercase"

SecRule ARGS_POST:token "@eq 0" \
	"id:66600931,chain,msg:'POL-2015-7364',phase:2,deny,status:403,log,t:none,t:length,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES:sessionID "@rx ^[a-z0-9]{32}$" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@rx (?:(?:advertiser|campaign|affiliate|zone|channel)\-edit|account\-user\-(?:name\-language|email|password))\.php$" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2015-7684
# CVSS: 9
# Publish: 2015-10-05T14:59:00
# Unrestricted file upload in GLPI before 0.85.3 allows remote authenticated users to execute arbitrary code by adding a file with an executable extension as an attachment to a new ticket, then accessing it via a direct request to the file in files/_tmp/. <a href="http://cwe.mitre.org/data/definitions/434.html">CWE-434: Unrestricted Upload of File with Dangerous Type</a>
SecRule REQUEST_FILENAME "@endsWith front/ticket.form.php" \
	"id:66600932,chain,msg:'POL-2015-7684',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:/_filename\[\d+]/ "@rx \.(?:php[\d]?|js|pl|rb|sh|p?html|asp|exe|com|htaccess)$" \
	"t:none,t:lowercase"


# CVE: CVE-2015-6969
# CVSS: 4.3
# Publish: 2015-09-16T14:59:00
# Cross-site scripting (XSS) vulnerability in js/2k11.min.js in the 2k11 theme in Serendipity before 2.0.2 allows remote attackers to inject arbitrary web script or HTML via a user name in a comment, which is not properly handled in a Reply link.
SecRule ARGS_POST:serendipity[submit] "@streq submit comment" \
	"id:66600933,chain,msg:'POL-2015-6969',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:serendipity[name] "@rx \W" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith index.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-6968
# CVSS: 6.5
# Publish: 2015-09-16T14:59:00
# Multiple incomplete blacklist vulnerabilities in the serendipity_isActiveFile function in include/functions_images.inc.php in Serendipity before 2.0.2 allow remote authenticated users to execute arbitrary PHP code by uploading a file with a (1) .pht or (2) .phtml extension. <a href="http://cwe.mitre.org/data/definitions/434.html">CWE-434: Unrestricted Upload of File with Dangerous Type</a>
SecRule REQUEST_FILENAME "@endsWith serendipity_admin.php" \
	"id:66600934,chain,msg:'POL-2015-6968',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:/serendipity\[target_filename]\[\d+]/ "@rx \.pht(?:ml)?$" \
	"t:none,t:lowercase"


# CVE: CVE-2015-2289
# CVSS: 3.5
# Publish: 2015-03-23T16:59:00
# Cross-site scripting (XSS) vulnerability in templates/2k11/admin/entries.tpl in Serendipity before 2.0.1 allows remote authenticated editors to inject arbitrary web script or HTML via the serendipity[cat][name] parameter to serendipity_admin.php, when creating a new category.
SecRule REQUEST_FILENAME "@endsWith serendipity_admin.php" \
	"id:66600935,chain,msg:'POL-2015-2289',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:serendipity[cat][name] "@rx \W" \
	"t:none"


# CVE: CVE-2014-4853
# CVSS: 4.3
# Publish: 2014-07-10T16:55:00
# Cross-site scripting (XSS) vulnerability in odm-init.php in OpenDocMan before 1.2.7.3 allows remote authenticated users to inject arbitrary web script or HTML via the file name of an uploaded file.
SecRule REQUEST_FILENAME "@endsWith add.php" \
	"id:66600936,chain,msg:'POL-2014-4853',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule FILES "@contains >" "


# CVE: CVE-2017-6486
# CVSS: 4.3
# Publish: 2017-03-05T20:59:00
# A Cross-Site Scripting (XSS) issue was discovered in reasoncms before 4.7.1. The vulnerability exists due to insufficient filtration of user-supplied data (nyroModalSel) passed to the "reasoncms-master/www/nyroModal/demoSent.php" URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule REQUEST_FILENAME "@endsWith /www/nyromodal/demosent.php" \
	"id:66600937,chain,msg:'POL-2017-6486',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalisePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:nyroModalSel "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-7620
# CVSS: 4.3
# Publish: 2017-05-21T14:29:00
# MantisBT before 1.3.11, 2.x before 2.3.3, and 2.4.x before 2.4.1 omits a backslash check in string_api.php and consequently has conflicting interpretations of an initial \/ substring as introducing either a local pathname or a remote hostname, which leads to (1) arbitrary Permalink Injection via CSRF attacks on a permalink_page.php?url= URI and (2) an open redirect via a login_page.php?return= URI.
SecRule REQUEST_BASENAME "@streq permalink_page.php" \
	"id:66600938,chain,msg:'POL-2017-7620',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:url "@beginsWith \/" \
	"chain,t:none,t:urlDecodeUni"
SecRule &REQUEST_COOKIES:MANTIS_STRING_COOKIE "@ge 1" \
	"t:none"


# CVE: CVE-2017-8763
# CVSS: 4.3
# Publish: 2017-05-04T04:59:00
# Cross-site scripting (XSS) vulnerability in modules/Base/Box/check_for_new_version.php in EPESI in Telaxus/EPESI 1.8.2 and earlier allows remote attackers to inject arbitrary web script or HTML via a crafted URI that lacks the cid parameter.
SecRule REQUEST_FILENAME "@endsWith /modules/base/box/check_for_new_version.php" \
	"id:66600939,chain,msg:'POL-2017-8763',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalisePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:cid "@eq 0" \
	"chain,t:none"
SecRule ARGS_POST|ARGS_POST_NAMES "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-9070
# CVSS: 3.5
# Publish: 2017-05-18T16:29:00
# In MODX Revolution before 2.5.7, a user with resource edit permissions can inject an XSS payload into the title of any post via the pagetitle parameter to connectors/index.php.
SecRule &ARGS_POST:HTTP_MODAUTH "@ge 1" \
	"id:66600940,chain,msg:'POL-2017-9070',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@contains /connectors/" \
	"chain,t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"
SecRule ARGS_POST:pagetitle "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-7887
# CVSS: 4.3
# Publish: 2017-05-10T14:29:00
# Dolibarr ERP/CRM 4.0.4 has XSS in doli/societe/list.php via the sall parameter.
SecRule ARGS_GET:sall "@contains <" \
	"id:66600941,chain,msg:'POL-2017-7887',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES "@beginsWith dolsessid" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith /societe/list.php" \
	"t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"


# CVE: CVE-2017-7886
# CVSS: 7.5
# Publish: 2017-05-10T14:29:00
# Dolibarr ERP/CRM 4.0.4 has SQL Injection in doli/theme/eldy/style.css.php via the lang parameter.
SecRule ARGS_GET:lang "@contains '" \
	"id:66600942,chain,msg:'POL-2017-7886',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith /theme/eldy/style.css.php" \
	"t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"


# CVE: CVE-2017-8832
# CVSS: 4.3
# Publish: 2017-05-08T06:29:00
# Allen Disk 1.6 has XSS in the id parameter to downfile.php.
SecRule ARGS_GET:id "@contains <" \
	"id:66600943,chain,msg:'POL-2017-8832',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith downfile.php" \
	"chain,t:none,t:lowercase"
SecRule &REQUEST_COOKIES:/^allendisk[a-z0-9]{13}$/ "@ge 1" \
	"t:none"


# CVE: CVE-2017-8876
# CVSS: 4.3
# Publish: 2017-05-10T05:29:00
# Symphony 2 2.6.11 has XSS in the meta[navigation_group] parameter to content/content.blueprintssections.php.
SecRule ARGS_POST:meta[navigation_group] "@contains <" \
	"id:66600944,chain,msg:'POL-2017-8876',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@contains /symphony/blueprints/sections/" \
	"chain,t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"t:none"


# CVE: CVE-2017-9289
# CVSS: 4.3
# Publish: 2017-05-29T17:29:00
# Bram Korsten Note through 1.2.0 is vulnerable to a reflected XSS in note-source\ui\editor.php (edit parameter).
SecRule REQUEST_FILENAME "@endsWith /ui/editor.php" \
	"id:66600945,chain,msg:'POL-2017-9289',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalisePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:note_session_id "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:edit "@contains \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-9331
# CVSS: 3.5
# Publish: 2017-06-01T05:29:00
# The Agenda component in Telaxus EPESI 1.8.2 and earlier has a Stored Cross-site Scripting (XSS) vulnerability in modules/Utils/RecordBrowser/RecordBrowserCommon_0.php, which allows remote attackers to inject arbitrary web script or HTML via a crafted meeting description parameter.
SecRule REQUEST_BASENAME "@streq process.php" \
	"id:66600946,chain,msg:'POL-2017-9331',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:url "@contains _qf__libs_qf_" \
	"chain,t:none,t:urlDecodeUni"
SecRule MATCHED_VAR "@rx (?:tab_name|description|akey|value|decimal_sign)=(.+)(?:\&|$)" \
	"chain,capture,t:none"
SecRule TX:1 "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-7402
# CVSS: 7.5
# Publish: 2017-04-03T17:59:00
# Pixie 1.0.4 allows remote authenticated users to upload and execute arbitrary PHP code via the POST data in an admin/index.php?s=publish&x=filemanager request for a filename with a double extension, such as a .jpg.php file with Content-Type of image/jpeg.
SecRule ARGS:x "@streq filemanager" \
	"id:66600947,chain,msg:'POL-2017-7402',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:pixie_login "@ge 1" \
	"chain,t:none"
SecRule FILES "@rx \.(?:(?:p|s|x|d)?h(?:p[2-7s]?|(?:tm)?l?)|dll|exe|js|p(?:l|y)|rb|sh)\." \
	"t:none,t:lowercase"


# CVE: CVE-2017-7615
# CVSS: 6.5
# Publish: 2017-04-16T14:59:00
# MantisBT through 2.3.0 allows arbitrary password reset and unauthenticated admin access via an empty confirm_hash value to verify.php.
SecRule ARGS:confirm_hash "@eq 0" \
	"id:66600948,chain,msg:'POL-2017-7615',phase:3,deny,status:403,log,t:none,t:length,rev:2,severity:2,tag:'OtherApps'"
SecRule &ARGS:id "@ge 1" \
	"chain,t:none"
SecRule REQUEST_COOKIES_NAMES|RESPONSE_HEADERS:Set-Cookie "@contains phpsessid" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_BASENAME "@streq verify.php" \
	"t:none,t:lowercase"


# CVE: CVE-2017-7455
# CVSS: 5
# Publish: 2017-04-14T14:59:00
# Moxa MXView 2.8 allows remote attackers to read web server's private key file, no access control.
SecRule REQUEST_FILENAME "@endsWith /certs/mxview.key" \
	"id:66600949,msg:'POL-2017-7455',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"


# CVE: CVE-2017-7891
# CVSS: 4.3
# Publish: 2017-04-17T14:59:00
# sourcebans-pp (SourceBans++) 1.5.4.7 has XSS in admin.comms.php via the rebanid parameter.
SecRule ARGS_GET:p|ARGS_GET:c "@pm comms admin" \
	"id:66600950,chain,msg:'POL-2017-7891',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:rebanid "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-7992
# CVSS: 4.3
# Publish: 2017-04-21T14:59:00
# Heartland Payment Systems Payment Gateway PHP SDK hps/heartland-php v2.8.17 is vulnerable to a reflected XSS in examples/consumer-authentication/cruise.php via the URI, as demonstrated by the cavv parameter.
SecRule ARGS_GET:cavv "@contains <" \
	"id:66600951,chain,msg:'POL-2017-7992',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith /examples/consumer-authentication/cruise.php" \
	"t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"


# CVE: CVE-2017-6561
# CVSS: 4.3
# Publish: 2017-03-09T09:59:00
# XSS in Agora-Project 3.2.2 exists with an index.php?ctrl=object&action=[XSS] attack.
SecRule ARGS:action "@contains <" \
	"id:66600952,chain,msg:'POL-2017-6561',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:ctrl "@streq object" \
	"chain,t:none,t:lowercase"
SecRule &REQUEST_COOKIES:Agora_agora "@ge 1" \
	"t:none"


# CVE: CVE-2016-6333
# CVSS: 4.3
# Publish: 2017-04-20T17:59:00
# Cross-site scripting (XSS) vulnerability in the CSS user subpage preview feature in MediaWiki before 1.23.15, 1.26.x before 1.26.4, and 1.27.x before 1.27.1 allows remote attackers to inject arbitrary web script or HTML via the edit box in Special:MyPage/common.css.
SecRule ARGS:wpTextbox1 "@contains </style>" \
	"id:66600953,chain,msg:'POL-2016-6333',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS:wpEditToken "@ge 1" \
	"chain,t:none"
SecRule ARGS:action "@streq submit" \
	"chain,t:none,t:lowercase"
SecRule ARGS:title "@endsWith common.css" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@rx \/(?:index\.php)?$" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2017-8104
# CVSS: 5
# Publish: 2017-04-24T18:59:00
# In MyBB before 1.8.11, the smilie module allows Directory Traversal via the pathfolder parameter.
SecRule ARGS_POST:pathfolder "@contains .." \
	"id:66600954,chain,msg:'POL-2017-8104',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:mybbuser "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:module|ARGS_GET:action "@pm config-smilies add_multiple" \
	"t:none,t:lowercase"


# CVE: CVE-2017-7251
# CVSS: 4.3
# Publish: 2017-03-23T22:59:00
# A Cross-Site Scripting (XSS) was discovered in pi-engine/pi 2.5.0. The vulnerability exists due to insufficient filtration of user-supplied data (preview) passed to the "pi-develop/www/script/editor/markitup/preview/markdown.php" URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule REQUEST_FILENAME "@endsWith /script/editor/markitup/preview/markdown.php" \
	"id:66600955,chain,msg:'POL-2017-7251',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalisePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:preview "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-8377
# CVSS: 6.5
# Publish: 2017-05-01T16:59:00
# GeniXCMS 1.0.2 has SQL Injection in inc/lib/Control/Backend/menus.control.php via the menuid parameter.
SecRule ARGS_GET:menuid "@contains '" \
	"id:66600956,chain,msg:'POL-2017-8377',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@streq menus" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:act "@streq remove" \
	"chain,t:none,t:lowercase"
SecRule &REQUEST_COOKIES:/^GeniXCMS-[a-zA-Z0-9]{20}$/ "@ge 1" \
	"t:none"


# CVE: CVE-2015-1434
# CVSS: 6.5
# Publish: 2015-02-16T15:59:00
# Multiple SQL injection vulnerabilities in my little forum before 2.3.4 allow remote administrators to execute arbitrary SQL commands via the (1) letter parameter in a user action or (2) edit_category parameter to index.php.
SecRule ARGS_GET:mode "@streq admin" \
	"id:66600957,chain,msg:'POL-2015-1434',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:/^mlf\w+$/ "@gt 0" \
	"chain,t:none"
SecRule ARGS_GET:edit_category|ARGS_GET:letter "@rx \'" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-3900
# CVSS: 4.3
# Publish: 2014-08-17T18:55:00
# Cross-site scripting (XSS) vulnerability in admin/picture_modify.php in the photo-edit subsystem in Piwigo 2.6.3 and earlier allows remote attackers to inject arbitrary web script or HTML via the associate[] field, a different vulnerability than CVE-2014-4649.
SecRule &REQUEST_COOKIES:pwg_id "@ge 1" \
	"id:66600958,chain,msg:'POL-2014-3900',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@contains photo-" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:associate[]|ARGS_POST:represent[] "@rx \D" \
	"t:none"


# CVE: CVE-2014-8596
# CVSS: 7.5
# Publish: 2014-11-17T16:59:00
# Multiple SQL injection vulnerabilities in PHP-Fusion 7.02.07 allow remote authenticated users to execute arbitrary SQL commands via the (1) submit_id parameter in a 2 action to files/administration/submissions.php or (2) status parameter to files/administration/members.php.
SecRule REQUEST_FILENAME "@contains administration/submissions.php" \
	"id:66600959,chain,msg:'POL-2014-8596',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:aid "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:submit_id "@rx \'" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_FILENAME "@contains administration/members.php" \
	"id:66600960,chain,msg:'POL-2014-8596',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:aid "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:status "@rx \'" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-0299
# CVSS: 4
# Publish: 2015-09-29T19:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in Open Source Point of Sale 2.3.1 allow remote authenticated users to inject arbitrary web script or HTML via unspecified vectors.
SecRule &REQUEST_COOKIES:ci_session "@eq 1" \
	"id:66600961,chain,msg:'POL-2015-0299',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "@pm opensourcepos customers items item_kits suppliers employees config" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:first_name|ARGS_POST:last_name|ARGS_POST:item_number|ARGS_POST:name|ARGS_POST:category|ARGS_POST:company_name|ARGS_POST:company "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-0307
# CVSS: 3.5
# Publish: 2014-03-14T15:55:00
# Cross-site scripting (XSS) vulnerability in settings.php in ownCloud before 4.0.12 and 4.5.x before 4.5.7 allows remote administrators to inject arbitrary web script or HTML via the group input field parameter.
SecRule REQUEST_FILENAME "@endsWith settings/ajax/createuser.php" \
	"id:66600962,chain,msg:'POL-2013-0307',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:groups[] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-1810
# CVSS: 2.1
# Publish: 2014-05-15T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in core/summary_api.php in MantisBT 1.2.12 allow remote authenticated users with manager or administrator permissions to inject arbitrary web script or HTML via a (1) category name in the summary_print_by_category function or (2) project name in the summary_print_by_project function.
SecRule REQUEST_FILENAME "@endsWith manage_proj_cat_add.php" \
	"id:66600963,chain,msg:'POL-2013-1810',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:2,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:manage_proj_cat_add_token "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:name "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-0917
# CVSS: 4.3
# Publish: 2015-01-08T15:59:00
# Cross-site scripting (XSS) vulnerability in the backend in Kajona before 4.6.3 allows remote attackers to inject arbitrary web script or HTML via the action parameter to index.php.
SecRule REQUEST_URI "@contains module" \
	"id:66600964,chain,msg:'POL-2015-0917',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES "@contains adminskin" \
	"chain,t:none"
SecRule ARGS_GET:action "@contains <" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2016-4056
# CVSS: 4.3
# Publish: 2017-01-23T21:59:00
# Cross-site scripting (XSS) vulnerability in the Backend component in TYPO3 6.2.x before 6.2.19 allows remote attackers to inject arbitrary web script or HTML via the module parameter when creating a bookmark.
SecRule &ARGS:ajaxID "@ge 1" \
	"id:66600965,chain,msg:'POL-2016-4056',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS:ajaxToken "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:module "@rx \"" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_COOKIES_NAMES "@contains be_typo_user" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith ajax.php" \
	"t:none,t:lowercase"


# CVE: CVE-2014-9261
# CVSS: 5
# Publish: 2015-03-23T16:59:00
# The sanitize function in Codoforum 2.5.1 does not properly implement filtering for directory traversal sequences, which allows remote attackers to read arbitrary files via a .. (dot dot) in the path parameter to index.php.
SecRule ARGS_GET:u "@pm serve/attachment serve/smiley" \
	"id:66600966,chain,msg:'POL-2014-9261',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith index.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:path "@rx \.\.|^\/" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-3295
# CVSS: 7.5
# Publish: 2014-12-30T02:59:00
# Directory traversal vulnerability in install/popup.php in Exponent CMS before 2.2.0 RC1 allows remote attackers to include and execute arbitrary local files via a .. (dot dot) in the page parameter.
SecRule REQUEST_FILENAME "@endsWith /install/popup.php" \
	"id:66600967,chain,msg:'POL-2013-3295',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@contains .." \
	"t:none,t:htmlEntityDecode"


# CVE: CVE-2015-7382
# CVSS: 7.5
# Publish: 2015-09-28T02:59:00
# SQL injection vulnerability in install.php in Web Reference Database (aka refbase) through 0.9.6 allows remote attackers to execute arbitrary SQL commands via the defaultCharacterSet parameter, a different issue than CVE-2015-6009.
SecRule ARGS_POST:formType "@pm install update" \
	"id:66600968,chain,msg:'POL-2015-7382',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@pm install.php update.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:submit "@pm install update" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:defaultCharacterSet "@rx \W" \
	"t:none"


# CVE: CVE-2013-4620
# CVSS: 4.3
# Publish: 2013-08-09T21:55:00
# Cross-site scripting (XSS) vulnerability in interface/main/onotes/office_comments_full.php in OpenEMR 4.1.1 allows remote attackers to inject arbitrary web script or HTML via the note parameter.
SecRule REQUEST_FILENAME "@endsWith interface/main/onotes/office_comments_full.php" \
	"id:66600969,chain,msg:'POL-2013-4620',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:openEMR "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:note "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-5025
# CVSS: 3.5
# Publish: 2014-10-20T17:55:00
# Cross-site scripting (XSS) vulnerability in data_sources.php in Cacti 0.8.8b allows remote authenticated users with console access to inject arbitrary web script or HTML via the name_cache parameter in a ds_edit action.
SecRule REQUEST_FILENAME "@endsWith data_sources.php" \
	"id:66600970,chain,msg:'POL-2014-5025',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:Cacti "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:name "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-5026
# CVSS: 3.5
# Publish: 2014-10-20T17:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in Cacti 0.8.8b allow remote authenticated users with console access to inject arbitrary web script or HTML via a (1) Graph Tree Title in a delete or (2) edit action; (3) CDEF Name, (4) Data Input Method Name, or (5) Host Templates Name in a delete action; (6) Data Source Title; (7) Graph Title; or (8) Graph Template Name in a delete or (9) duplicate action.
SecRule REQUEST_FILENAME "@pm tree.php cdef.php data_sources.php graphs.php data_input.php graph_templates.php host_templates.php" \
	"id:66600971,chain,msg:'POL-2014-5026',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:Cacti "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:name|ARGS_POST:title "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-9435
# CVSS: 6.5
# Publish: 2015-01-02T19:59:00
# Multiple SQL injection vulnerabilities in Absolut Engine 1.73 allow remote authenticated users to execute arbitrary SQL commands via the (1) sectionID parameter to admin/managersection.php, (2) userID parameter to admin/edituser.php, (3) username parameter to admin/admin.php, or (4) title parameter to admin/managerrelated.php.
SecRule REQUEST_FILENAME "@endsWith admin/managersection.php" \
	"id:66600972,chain,msg:'POL-2014-9435',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:session "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:sectionID "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith admin/edituser.php" \
	"id:66600973,chain,msg:'POL-2014-9435',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:session "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:userID "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith admin/admin.php" \
	"id:66600974,chain,msg:'POL-2014-9435',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:session "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:username "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith admin/managerrelated.php" \
	"id:66600975,chain,msg:'POL-2014-9435',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalisepath,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:session "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:title "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-9281
# CVSS: 4.3
# Publish: 2014-12-09T23:59:00
# Cross-site scripting (XSS) vulnerability in admin/copy_field.php in MantisBT before 1.2.18 allows remote attackers to inject arbitrary web script or HTML via the dest_id field.
SecRule REQUEST_FILENAME "@endsWith admin/copy_field.php" \
	"id:66600976,chain,msg:'POL-2014-9281',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:MANTIS_STRING_COOKIE "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:dest_id "@contains <" \
	"t:none,t:lowercase,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-4137
# CVSS: 7.5
# Publish: 2015-05-29T14:59:00
# SQL injection vulnerability in related.php in Milw0rm Clone Script 1.0 allows remote attackers to execute arbitrary SQL commands via the program parameter.
SecRule REQUEST_FILENAME "@endsWith related.php" \
	"id:66600977,chain,msg:'POL-2015-4137',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:program "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-6730
# CVSS: 4.3
# Publish: 2015-09-01T14:59:00
# Cross-site scripting (XSS) vulnerability in thumb.php in MediaWiki before 1.23.10, 1.24.x before 1.24.3, and 1.25.x before 1.25.2 allows remote attackers to inject arbitrary web script or HTML via the f parameter, which is not properly handled in an error page, related to "ForeignAPI images."
SecRule REQUEST_FILENAME "@endsWith thumb.php" \
	"id:66600978,chain,msg:'POL-2015-6730',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:f "@ge 1" \
	"chain,t:none"
SecRule &ARGS_GET:width "@ge 1" \
	"chain,t:none"
SecRule &ARGS_GET:rel404 "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:width|ARGS_GET:rel404 "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-2238
# CVSS: 6.5
# Publish: 2014-03-05T16:37:00
# SQL injection vulnerability in the manage configuration page (adm_config_report.php) in MantisBT 1.2.13 through 1.2.16 allows remote authenticated administrators to execute arbitrary SQL commands via the filter_config_id parameter.
SecRule REQUEST_FILENAME "@endsWith adm_config_report.php" \
	"id:66600979,chain,msg:'POL-2014-2238',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:MANTIS_STRING_COOKIE "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:filter_config_id "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-5355
# CVSS: 4.3
# Publish: 2015-07-01T16:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in GetSimple CMS before 3.3.6 allow remote attackers to inject arbitrary web script or HTML via the (1) post-content or (2) post-title parameter to admin/edit.php.
SecRule REQUEST_FILENAME "@endswith changedata.php" \
	"id:66600980,chain,msg:'POL-2015-5355',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:post-title|ARGS_POST:post-content "@contains \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-7373
# CVSS: 4.3
# Publish: 2015-10-14T19:59:00
# Cross-site scripting (XSS) vulnerability in the "magic-macros" feature in Revive Adserver before 3.2.2 allows remote attackers to inject arbitrary web script or HTML via a GET parameter, which is not properly handled in a banner.
SecRule REQUEST_FILENAME "@contains www/admin/banner-edit" \
	"id:66600981,chain,msg:'POL-2015-7373',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:submit "@streq savechanges" \
	"chain,t:none,t:removeWhitespace,t:lowercase"
SecRule ARGS_POST:url|ARGS_POST:height|ARGS_POST:width|ARGS_POST:weight "@rx <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-7383
# CVSS: 4.3
# Publish: 2015-09-28T02:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in Web Reference Database (aka refbase) through 0.9.6 and bleeding-edge through 2015-04-28 allow remote attackers to inject arbitrary web script or HTML via the (1) adminUserName, (2) pathToMYSQL, (3) databaseStructureFile, or (4) pathToBibutils parameter to install.php or the (5) adminUserName parameter to update.php.
SecRule ARGS_POST:formType "@pm install update" \
	"id:66600982,chain,msg:'POL-2015-7383',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES:PHPSESSID "@rx ^\w+$" \
	"chain,t:none"
SecRule ARGS_POST:submit "@pm install update" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:adminUserName|ARGS_POST:pathToMYSQL|ARGS_POST:databaseStructureFile|ARGS_POST:pathToBibutils "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-7773
# CVSS: 6.5
# Publish: 2015-11-20T03:59:00
# Unrestricted file upload vulnerability in the Panel component in Bastian Allgeier Kirby before 2.1.2 allows remote authenticated users to execute arbitrary PHP code by uploading a file that lacks an extension, and then renaming this file to have a .php extension. <a href="http://cwe.mitre.org/data/definitions/434.html">CWE-434: Unrestricted Upload of File with Dangerous Type</a>
SecRule ARGS:name "@endsWith .php" \
	"id:66600983,chain,msg:'POL-2015-7773',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:key "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@contains /panel/api/files/rename/" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2015-2034
# CVSS: 4.3
# Publish: 2015-02-20T16:59:00
# Cross-site scripting (XSS) vulnerability in the administrative backend in Piwigo before 2.7.4 allows remote attackers to inject arbitrary web script or HTML via the page parameter to admin.php.
SecRule &REQUEST_COOKIES:pwg_id "@gt 0" \
	"id:66600984,chain,msg:'POL-2015-2034',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@rx <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-1517
# CVSS: 6
# Publish: 2015-02-20T16:59:00
# SQL injection vulnerability in Piwigo before 2.7.4, when all filters are activated, allows remote authenticated users to execute arbitrary SQL commands via the filter_level parameter in a "Refresh photo set" action in the batch_manager page to admin.php.
SecRule &REQUEST_COOKIES:pwg_id "@gt 0" \
	"id:66600985,chain,msg:'POL-2015-1517',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@streq batch_manager" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:filter_level "@rx \D" \
	"t:none"


# CVE: CVE-2015-5612
# CVSS: 4.3
# Publish: 2015-09-04T15:59:00
# Cross-site scripting (XSS) vulnerability in October CMS build 271 and earlier allows remote attackers to inject arbitrary web script or HTML via the caption tag of a profile image.
SecRule &REQUEST_COOKIES:october_session "@eq 1" \
	"id:66600986,chain,msg:'POL-2015-5612',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:title "@contains <" \
	"t:none"


# CVE: CVE-2015-5356
# CVSS: 4.3
# Publish: 2015-07-01T16:59:00
# Cross-site scripting (XSS) vulnerability in admin/filebrowser.php in GetSimple CMS before 3.3.6 allows remote attackers to inject arbitrary web script or HTML via the func parameter.
SecRule REQUEST_FILENAME "@endswith filebrowser.php" \
	"id:66600987,chain,msg:'POL-2015-5356',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:func "@rx \W" \
	"t:none"


# CVE: CVE-2016-6837
# CVSS: 4.3
# Publish: 2017-01-10T15:59:00
# Cross-site scripting (XSS) vulnerability in MantisBT Filter API in MantisBT versions before 1.2.19, and versions 2.0.0-beta1, 1.3.0-beta1 allows remote attackers to inject arbitrary web script or HTML via the 'view_type' parameter.
SecRule REQUEST_FILENAME "@endsWith view_all_bug_page.php" \
	"id:66600988,chain,msg:'POL-2016-6837',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:MANTIS_STRING_COOKIE "@ge 1" \
	"chain,t:none"
SecRule ARGS:view_type "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2017-5346
# CVSS: 6.5
# Publish: 2017-01-12T06:59:00
# SQL injection vulnerability in inc/lib/Control/Backend/posts.control.php in GeniXCMS 0.0.8 allows remote authenticated administrators to execute arbitrary SQL commands via the id parameter to gxadmin/index.php.
# SecRule &REQUEST_COOKIES_NAMES:GeniXCMS "@ge 1" \
# 	"id:66600989,chain,msg:'POL-2017-5346',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
# SecRule ARGS_GET:page "@streq posts" \
# 	"chain,t:none,t:lowercase"
# SecRule ARGS_GET:id "@pm \" '" \
# 	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-6283
# CVSS: 4.3
# Publish: 2017-01-18T22:59:00
# Cross-site scripting (XSS) vulnerability in Atlassian Confluence before 5.10.6 allows remote attackers to inject arbitrary web script or HTML via the newFileName parameter to pages/doeditattachment.action.
SecRule &REQUEST_COOKIES_NAMES:confluence.browse.space.cookie "@ge 1" \
	"id:66600990,chain,msg:'POL-2016-6283',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule &ARGS:atl_token "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@contains /pages/doeditattachment.action" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:normalizePath,t:lowercase"
SecRule ARGS:newFileName "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-10114
# CVSS: 7.5
# Publish: 2017-01-04T02:59:00
# SQL injection vulnerability in the "aWeb Cart Watching System for Virtuemart" extension before 2.6.1 for Joomla! allows remote attackers to execute arbitrary SQL commands via vectors involving categorysearch and smartSearch.
SecRule &SESSION:joomla_session "@eq 1" \
	"id:66600991,chain,msg:'POL-2016-10114',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:option|ARGS:task "@pm com_virtuemart smartsearch" \
	"chain,t:none,t:lowercase"
SecRule ARGS:view "@rx \W" \
	"t:none"


# CVE: CVE-2016-9891
# CVSS: 3.5
# Publish: 2016-12-29T18:59:00
# Cross-site scripting (XSS) vulnerability in admin/media.php and admin/media_item.php in Dotclear before 2.11 allows remote authenticated users to inject arbitrary web script or HTML via the upfiletitle or media_title parameter (aka the media title).
SecRule ARGS_POST:media_title "@contains <" \
	"id:66600992,chain,msg:'POL-2016-9891',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:dcxd "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith media_item.php" \
	"t:none,t:lowercase"


# CVE: CVE-2016-10105
# CVSS: 7.5
# Publish: 2017-01-03T06:59:00
# admin/plugin.php in Piwigo through 2.8.3 doesn't validate the sections variable while using it to include files. This can cause information disclosure and code execution if it contains a .. sequence.
SecRule &REQUEST_COOKIES_NAMES:pwg_id "@ge 1" \
	"id:66600993,chain,msg:'POL-2016-10105',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@streq plugin" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:section "@contains ../" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-5347
# CVSS: 6.5
# Publish: 2017-01-12T06:59:00
# SQL injection vulnerability in inc/mod/newsletter/options.php in GeniXCMS 0.0.8 allows remote authenticated administrators to execute arbitrary SQL commands via the recipient parameter to gxadmin/index.php.
SecRule &REQUEST_COOKIES_NAMES:GeniXCMS "@ge 1" \
	"id:66600994,chain,msg:'POL-2017-5347',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@streq mods" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:mod "@streq newsletter" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:recipient "@contains '" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2016-10084
# CVSS: 6.5
# Publish: 2016-12-30T07:59:00
# admin/batch_manager.php in Piwigo through 2.8.3 allows remote authenticated administrators to conduct File Inclusion attacks via the $page['tab'] variable (aka the mode parameter).
SecRule ARGS_GET:mode "@contains .." \
	"id:66600995,chain,msg:'POL-2016-10084',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@streq batch_manager" \
	"chain,t:none,t:lowercase"
SecRule &REQUEST_COOKIES:pwg_id "@ge 1" \
	"t:none"


# CVE: CVE-2016-7981
# CVSS: 4.3
# Publish: 2017-01-18T17:59:00
# Cross-site scripting (XSS) vulnerability in valider_xml.php in SPIP 3.1.2 and earlier allows remote attackers to inject arbitrary web script or HTML via the var_url parameter in a valider_xml action.
SecRule ARGS_GET:var_url "@contains \"" \
	"id:66600996,chain,msg:'POL-2016-7981',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:spip_lang|&REQUEST_COOKIES:spip_session "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:exec "@streq valider_xml" \
	"t:none,t:lowercase"


# CVE: CVE-2017-5515
# CVSS: 3.5
# Publish: 2017-01-17T09:59:00
# Cross-site scripting (XSS) vulnerability in the user prompt function in GeniXCMS through 0.0.8 allows remote authenticated users to inject arbitrary web script or HTML via tag names.
SecRule &REQUEST_COOKIES_NAMES:GeniXCMS "@ge 1" \
	"id:66600997,chain,msg:'POL-2017-5515',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@pm tags categories" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:cat "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-2198
# CVSS: 4.3
# Publish: 2015-03-03T19:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in edit_prefs.php in Beehive Forum 1.4.4 allow remote attackers to inject arbitrary web script or HTML via the (1) homepage_url, (2) pic_url, or (3) avatar_url parameter, which are not properly handled in an error message.
SecRule &REQUEST_COOKIES:sess_hash "@gt 0" \
	"id:66600998,chain,msg:'POL-2015-2198',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:homepage_url|ARGS_POST:pic_url|ARGS_POST:avatar_url "@rx \"|<" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode"
SecRule REQUEST_FILENAME "@endsWith edit_prefs.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-2677
# CVSS: 3.5
# Publish: 2015-03-23T16:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in ocPortal before 9.0.17 allow remote authenticated users to inject arbitrary web script or HTML via the (1) title or (2) text field in the cms_calendar page to cms/index.php; unspecified fields in (3) the cms_polls page to cms/index.php or (4) a new topic in the topics page to forum/index.php; or (5) a new PT (private topic/private message) in the topics page to forum/index.php.
SecRule REQUEST_FILENAME "@pm cms/index.php forum/index.php" \
	"id:66600999,chain,msg:'POL-2015-2677',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:page "@pm cms_calendar cms_polls topics" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:title|ARGS_POST:question|ARGS_POST:reason|ARGS_POST:description "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-1899
# CVSS: 4.3
# Publish: 2016-01-20T16:59:00
# CRLF injection vulnerability in the ui-blob handler in CGit before 0.12 allows remote attackers to inject arbitrary HTTP headers and conduct HTTP response splitting attacks or cross-site scripting (XSS) attacks via CRLF sequences in the mimetype parameter, as demonstrated by a request to blob/cgit.c. <a href="https://cwe.mitre.org/data/definitions/93.html">CWE-93: Improper Neutralization of CRLF Sequences ('CRLF Injection')</a>
SecRule ARGS_GET:mimetype "!@within application/octet-stream text/plain" \
	"id:66601000,chain,msg:'POL-2016-1899',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@contains /blob/" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2016-1912
# CVSS: 3.5
# Publish: 2016-01-15T20:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in Dolibarr ERP/CRM 3.8.3 allow remote authenticated users to inject arbitrary web script or HTML via the (1) lastname, (2) firstname, (3) email, (4) job, or (5) signature parameter to htdocs/user/card.php.
SecRule REQUEST_FILENAME "@contains card.php" \
	"id:66601001,chain,msg:'POL-2016-1912',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:action "@streq update" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:lastname|ARGS_POST:firstname|ARGS_POST:job|ARGS_POST:email|ARGS_POST:signature "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-8685
# CVSS: 4.3
# Publish: 2016-01-15T19:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in Dolibarr ERP/CRM 3.8.3 and earlier allow remote attackers to inject arbitrary web script or HTML via the (1) external calendar url or (2) the bank name field in the "import external calendar" page.
SecRule REQUEST_FILENAME "@endsWith agenda_extsites.php" \
	"id:66601002,chain,msg:'POL-2015-8685',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES "@beginsWith DOLSESSID_" \
	"chain,t:none"
SecRule ARGS "@rx \"" \
	"chain,t:none,t:urlDecodeUni"
SecRule MATCHED_VARS_NAMES "@rx ^ARGS:AGENDA_EXT_(?:NAME|SRC|COLOR)__[\d]{1}$" \
	"t:none"


# CVE: CVE-2015-4671
# CVSS: 4.3
# Publish: 2016-01-12T19:59:00
# Cross-site scripting (XSS) vulnerability in OpenCart before 2.1.0.2 allows remote attackers to inject arbitrary web script or HTML via the zone_id parameter to index.php.
SecRule ARGS_GET:route "@streq account/address/add" \
	"id:66601003,chain,msg:'POL-2015-4671',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:zone_id "@rx \D" \
	"t:none"


# CVE: CVE-2015-5454
# CVSS: 4.3
# Publish: 2015-07-08T15:59:00
# Cross-site scripting (XSS) vulnerability in Nucleus CMS allows remote attackers to inject arbitrary web script or HTML via the title parameter when adding a new item.
SecRule REQUEST_URI "@endswith nucleus/index.php" \
	"id:66601004,chain,msg:'POL-2015-5454',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:title "@contains <" \
	"t:none"


# CVE: CVE-2014-10033
# CVSS: 6.5
# Publish: 2015-01-13T15:59:00
# SQL injection vulnerability in the update_zone function in catalog/admin/geo_zones.php in osCommerce Online Merchant 2.3.3.4 and earlier allows remote administrators to execute arbitrary SQL commands via the zID parameter in a list action.
SecRule &REQUEST_COOKIES:osCAdminID "@ge 1" \
	"id:66601005,chain,msg:'POL-2014-10033',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith geo_zones.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule ARGS_GET:action "@contains list" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:zID "@rx \D" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-5733
# CVSS: 4.3
# Publish: 2016-07-03T01:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in phpMyAdmin 4.0.x before 4.0.10.16, 4.4.x before 4.4.15.7, and 4.6.x before 4.6.3 allow remote attackers to inject arbitrary web script or HTML via vectors involving (1) a crafted table name that is mishandled during privilege checking in table_row.phtml, (2) a crafted mysqld log_bin directive that is mishandled in log_selector.phtml, (3) the Transformation implementation, (4) AJAX error handling in js/ajax.js, (5) the Designer implementation, (6) the charts implementation in js/tbl_chart.js, or (7) the zoom-search implementation in rows_zoom.phtml.
SecRule REQUEST_COOKIES_NAMES "@contains phpmyadmin" \
	"id:66601006,chain,msg:'POL-2016-5733',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_BASENAME "@endsWith tbl_zoom_select.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:/^criteriaColumnTypes\[\d+\]$/ "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4718
# CVSS: 6.8
# Publish: 2014-07-03T14:55:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in Lunar CMS before 3.3-3 allow remote attackers to hijack the authentication of administrators for requests that (1) add Super users via a request to admin/user_create.php or conduct cross-site scripting (XSS) attacks via the (2) email or (3) subject parameter in contact_form.ext.php to admin/extensions.php.
SecRule REQUEST_FILENAME "@endsWith admin/extensions.php" \
	"id:66601007,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:ext "@streq contact_form" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.lunar_ex=1',expirevar:'SESSION.lunar_ex=300',t:none,t:lowercase"

SecRule SESSION:lunar_ex "@eq 1" \
	"id:66601008,phase:2,pass,nolog,t:none,skip:1,rev:2,severity:2,tag:'OtherApps'"

SecRule REQUEST_FILENAME "@endsWith admin/extensions.php" \
	"id:66601009,chain,msg:'POL-2014-4718',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:ext "@streq contact_form" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:lunar_ex "!@eq 1" \
	"t:none"

SecRule REQUEST_FILENAME "@endsWith admin/user_create.php" \
	"id:66601010,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.lunar_user=1',expirevar:'SESSION.lunar_user=300',t:none,t:lowercase"

SecRule SESSION:lunar_user "@eq 1" \
	"id:66601011,phase:2,pass,nolog,t:none,skip:1,rev:2,severity:2,tag:'OtherApps'"

SecRule REQUEST_FILENAME "@endsWith admin/user_create.php" \
	"id:66601012,chain,msg:'POL-2014-4718',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:access "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:Submit "@streq submit" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:lunar_user "!@eq 1" \
	"t:none"

SecRule REQUEST_FILENAME "@endsWith admin/extensions.php" \
	"id:66601013,chain,msg:'POL-2014-4718',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:ext "@streq contact_form" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:email|ARGS_POST:subject "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-5692
# CVSS: 8.5
# Publish: 2013-09-30T22:55:00
# Directory traversal vulnerability in X2Engine X2CRM before 3.5 allows remote authenticated administrators to include and execute arbitrary local files via a .. (dot dot) in the file parameter to index.php/admin/translationManager.
SecRule REQUEST_URI "@contains /admin/translationManager" \
	"id:66601014,chain,msg:'POL-2013-5692',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "@rx x2engine(\/index.php)?" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:file "@contains .." \
	"t:none,t:normalizePath,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-5100
# CVSS: 6.8
# Publish: 2014-07-25T19:55:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in Omeka before 2.2.1 allow remote attackers to hijack the authentication of administrators for requests that (1) add a new super user account via a request to admin/users/add, (2) insert cross-site scripting (XSS) sequences via the api_key_label parameter to admin/users/api-keys/1, or (3) disable file validation via a request to admin/settings/edit-security.
SecRule REQUEST_FILENAME "@pm admin/users/api-keys admin/users/add admin/settings/edit-security" \
	"id:66601015,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:5,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES "@rx ^[a-f0-9]{32}$" \
	"capture,setsid:'%{TX.1}',t:none,t:lowercase"

SecRule REQUEST_FILENAME "@contains admin/users/api-keys" \
	"id:66601016,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:5,severity:2,tag:'OtherApps'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.omeka_api=1',expirevar:'SESSION.omeka_api=300',t:none,t:lowercase"

SecRule &SESSION:omeka_api "!@eq 1" \
	"id:66601017,chain,msg:'POL-2014-5100',phase:2,deny,status:403,log,t:none,rev:5,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:update_api_keys "@streq updateapikeys" \
	"chain,t:none,t:urlDecodeUni,t:removeWhitespace,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@contains admin/users/api-keys" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"

SecRule REQUEST_FILENAME "@endsWith admin/users/add" \
	"id:66601018,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:5,severity:2,tag:'OtherApps'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.omeka_add=1',expirevar:'SESSION.omeka_add=300',t:none,t:lowercase"

SecRule &SESSION:omeka_add "!@eq 1" \
	"id:66601019,chain,msg:'POL-2014-5100',phase:2,deny,status:403,log,t:none,rev:5,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:role "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:submit "@streq adduser" \
	"chain,t:none,t:urlDecodeUni,t:removeWhitespace,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith admin/users/add" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"

SecRule REQUEST_FILENAME "@endsWith admin/settings/edit-security" \
	"id:66601020,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:5,severity:2,tag:'OtherApps'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.omeka_sec=1',expirevar:'SESSION.omeka_sec=300',t:none,t:lowercase"

SecRule &SESSION:omeka_sec "!@eq 1" \
	"id:66601021,chain,msg:'POL-2014-5100',phase:2,deny,status:403,log,t:none,rev:5,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:disable_default_file_validation "@ge 1" \
	"chain,t:none"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith admin/settings/edit-security" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"

SecRule REQUEST_FILENAME "@contains admin/users/api-keys" \
	"id:66601022,chain,msg:'POL-2014-5100',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:update_api_keys "@streq updateapikeys" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:api_key_label "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-5316
# CVSS: 4.3
# Publish: 2014-09-22T01:55:00
# Cross-site scripting (XSS) vulnerability in Dotclear before 2.6.4 allows remote attackers to inject arbitrary web script or HTML via a crafted page.
SecRule REQUEST_FILENAME "@endsWith /admin/plugin.php" \
	"id:66601023,chain,msg:'POL-2014-5316',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:dcxd "@ge 1" \
	"chain,t:none"
SecRule ARGS:post_title "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2013-0805
# CVSS: 4.3
# Publish: 2014-03-20T16:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in the search feature in iTop (aka IT Operations Portal) 2.0, 1.2.1, 1.2, and earlier allow remote attackers to inject arbitrary web script or HTML via the (1) text parameter to pages/UI.php or (2) expression parameter to pages/run_query.php.  NOTE: some of these details are obtained from third party information.
SecRule REQUEST_FILENAME "@pm pages/ui.php pages/run_query.php" \
	"id:66601024,chain,msg:'POL-2013-0805',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:3,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:/^itop-[a-z0-9]{32}$/ "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:expression "@contains </textarea" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"


# CVE: CVE-2016-6523
# CVSS: 4.3
# Publish: 2016-12-09T20:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the media manager in Dotclear before 2.10 allow remote attackers to inject arbitrary web script or HTML via the (1) q or (2) link_type parameter to admin/media.php.
SecRule REQUEST_FILENAME "@endsWith /admin/media.php" \
	"id:66601025,chain,msg:'POL-2016-6523',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:dcxd "@ge 1" \
	"chain,t:none"
SecRule ARGS:q "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2014-2091
# CVSS: 3.5
# Publish: 2014-03-02T17:55:00
# Cross-site scripting (XSS) vulnerability in mods/_standard/forums/admin/forum_add.php in ATutor 2.1.1 allows remote authenticated administrators to inject arbitrary web script or HTML via the title parameter in an add_forum action.  NOTE: the original disclosure also reported issues that may not cross privilege boundaries.
SecRule REQUEST_FILENAME "mods/_standard/forums/admin/forum_add\.php" \
	"id:66601026,chain,msg:'POL-2014-2091',deny,status:403,log,t:none,t:urlDecodeUni,multiMatch,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:title "@rx \"" "

SecRule REQUEST_FILENAME "mods/_standard/forums/admin/forum_add\.php" \
	"id:66601027,chain,msg:'POL-2014-2091',deny,status:403,log,t:none,t:urlDecodeUni,multiMatch,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:description "<" "


# CVE: CVE-2013-3961
# CVSS: 6.5
# Publish: 2014-03-11T19:37:00
# SQL injection vulnerability in edit_event.php in Simple PHP Agenda before 2.2.9 allows remote authenticated users to execute arbitrary SQL commands via the eventid parameter.
SecRule ARGS_GET:eventid "@rx \D" \
	"id:66601028,chain,msg:'POL-2013-3961',deny,status:403,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "edit_event\.php" "


# CVE: CVE-2014-5343
# CVSS: 4.3
# Publish: 2014-08-19T18:55:00
# Cross-site scripting (XSS) vulnerability in Feng Office allows remote attackers to inject arbitrary web script or HTML via a client Name field.
SecRule REQUEST_COOKIES:/^http(?:.*)token$/ "@rx ([\w]{40})" \
	"id:66601029,chain,msg:'POL-2014-5343',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:c "@streq customer" \
	"chain,t:none,t:urlDecodeUni,t:removeWhitespace,t:lowercase,multiMatch"
SecRule ARGS_GET:a "@streq add" \
	"chain,t:none,t:urlDecodeUni,t:removeWhitespace,t:lowercase,multiMatch"
SecRule ARGS_POST:customer[name] "@rx [\<\"]" \
	"t:none,t:urlDecodeUni,t:removeWhitespace,multiMatch"


# CVE: CVE-2014-5192
# CVSS: 7.5
# Publish: 2014-08-07T11:13:00
# SQL injection vulnerability in admin/admin.php in Sphider 1.3.6 allows remote attackers to execute arbitrary SQL commands via the filter parameter.
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"id:66601030,chain,msg:'POL-2014-5192',phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:removeWhitespace,t:lowercase,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS:site_id "@gt 0" \
	"chain"
SecRule &ARGS:f "@gt 0" \
	"chain"
SecRule &ARGS:filter "@gt 0" \
	"chain"
SecRule &REQUEST_COOKIES:PHPSESSID "@gt 0" \
	"setsid:'%{TIME_EPOCH}',setvar:'SESSION.sphider=1'"

SecRule SESSION:sphider "@eq 1" \
	"id:66601031,chain,msg:'POL-2014-5192',phase:2,deny,status:403,log,skip:1,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:filter "@detectSQLi" \
	"t:none,t:urlDecodeUni,t:sqlHexDecode,t:removeWhitespace,t:lowercase,multiMatch"

SecRule SESSION:sphider "@eq 1" \
	"id:66601032,chain,msg:'POL-2014-5192',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:filter "@contains '" \
	"t:none,t:urlDecodeUni,t:sqlHexDecode,t:removeWhitespace,t:lowercase,multiMatch"


# CVE: CVE-2014-1222
# CVSS: 4
# Publish: 2014-08-12T23:55:00
# Directory traversal vulnerability in kcfinder/browse.php in Vtiger CRM before 6.0.0 Security patch 1 allows remote authenticated users to read arbitrary files via a .. (dot dot) in the file parameter in a download action.  NOTE: it is likely that this issue is actually in the KCFinder third-party component, and it affects additional products besides Vtiger CRM.
SecRule REQUEST_FILENAME "@endsWith browse.php" \
	"id:66601033,chain,msg:'POL-2014-1222',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:removeWhitespace,t:lowercase,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES "@contains vtiger" \
	"chain,t:none,t:urlDecodeUni,t:removeWhitespace,t:lowercase,multiMatch"
SecRule ARGS_GET:act "@streq download" \
	"chain,t:none,t:urlDecodeUni,t:lowercase,multiMatch"
SecRule &ARGS_POST:dir "@ge 1" \
	"chain,t:none,t:urlDecodeUni,t:lowercase,multiMatch"
SecRule ARGS_POST:file "@contains .." \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:removeWhitespace,multiMatch"


# CVE: CVE-2014-4002
# CVSS: 4.3
# Publish: 2014-07-03T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in Cacti 0.8.8b allow remote attackers to inject arbitrary web script or HTML via the (1) drp_action parameter to cdef.php, (2) data_input.php, (3) data_queries.php, (4) data_sources.php, (5) data_templates.php, (6) graph_templates.php, (7) graphs.php, (8) host.php, or (9) host_templates.php or the (10) graph_template_input_id or (11) graph_template_id parameter to graph_templates_inputs.php.
SecRule ARGS_POST:drp_action "@rx \D" \
	"id:66601034,chain,msg:'POL-2014-4002',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@pm cdef.php data_input.php data_queries.php data_sources.php data_templates.php graph_templates.php graphs.php host.php host_templates.php" \
	"t:none,t:urlDecodeUni,t:lowercase"

SecRule ARGS_POST:graph_template_id|ARGS_POST:graph_template_input_id "@rx \D" \
	"id:66601035,chain,msg:'POL-2014-4002',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith graph_templates_inputs.php" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2012-5700
# CVSS: 4.3
# Publish: 2014-09-22T15:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in Baby Gekko before 1.2.2f allow remote attackers to inject arbitrary web script or HTML via the (1) id parameter to admin/index.php or the (2) username or (3) password parameter in blocks/loginbox/loginbox.template.php to index.php.  NOTE: some of these details are obtained from third party information.
SecRule ARGS_GET:app "@pm blog html menus" \
	"id:66601036,chain,msg:'POL-2012-5700',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,multiMatch,rev:3,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@streq edititem" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule REQUEST_FILENAME "@contains admin/index.php" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_GET:id "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-1442
# CVSS: 7.5
# Publish: 2015-02-06T15:59:00
# SQL injection vulnerability in views/zero_transact_user.php in the administrative backend in ZeroCMS 1.3.3, 1.3.2, and earlier allows remote authenticated users to execute arbitrary SQL commands via the user_id parameter in a Modify Account action.  NOTE: The article_id parameter to zero_view_article.php vector is already covered by CVE-2014-4034.
SecRule REQUEST_FILENAME "@endsWith views/zero_transact_user.php" \
	"id:66601037,chain,msg:'POL-2015-1442',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:user_id "@rx \D" \
	"t:none"


# CVE: CVE-2015-8759
# CVSS: 3.5
# Publish: 2016-01-08T19:59:00
# Cross-site scripting (XSS) vulnerability in the typoLink function in TYPO3 6.2.x before 6.2.16 and 7.x before 7.6.1 allows remote authenticated editors to inject arbitrary web script or HTML via a link field.
SecRule REQUEST_FILENAME "@contains alt_doc.php" \
	"id:66601038,chain,msg:'POL-2015-8759',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:/data\[tt_content\]\[\d+]\[header_link\](_hr)?/ "@pm javascript:" \
	"t:none,t:lowercase,t:urlDecodeUni"


# CVE: CVE-2015-1471
# CVSS: 7.5
# Publish: 2015-02-12T16:59:00
# SQL injection vulnerability in userprofile.lib.php in Pragyan CMS 3.0 allows remote attackers to execute arbitrary SQL commands via the user parameter to the default URI.
SecRule REQUEST_URI "@rx user:(.*)$" \
	"id:66601039,chain,msg:'POL-2015-1471',phase:1,capture,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule TX:1 "@rx \D" \
	"t:none"


# CVE: CVE-2015-6010
# CVSS: 4.3
# Publish: 2015-09-28T02:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in Web Reference Database (aka refbase) through 0.9.6 and bleeding-edge before 2015-01-08 allow remote attackers to inject arbitrary web script or HTML via the (1) errorNo or (2) errorMsg parameter to error.php; the (3) viewType parameter to duplicate_manager.php; the (4) queryAction, (5) displayType, (6) citeOrder, (7) sqlQuery, (8) showQuery, (9) showLinks, (10) showRows, or (11) queryID parameter to query_manager.php; the (12) sourceText or (13) sourceIDs parameter to import.php; or the (14) typeName or (15) fileName parameter to modify.php.
SecRule REQUEST_FILENAME "@endsWith error.php" \
	"id:66601040,chain,msg:'POL-2015-6010',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:errorNo|ARGS_GET:errorMsg "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith import_modify.php" \
	"id:66601041,chain,msg:'POL-2015-6010',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:sourceText "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@pm import_modify.php" \
	"id:66601042,chain,msg:'POL-2015-6010',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:sourceIDs|ARGS_POST:importRecords "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith duplicate_manager.php" \
	"id:66601043,chain,msg:'POL-2015-6010',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:viewType "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith query_manager.php" \
	"id:66601044,chain,msg:'POL-2015-6010',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:queryAction|ARGS_GET:displayType|ARGS_GET:citeOrder|ARGS_GET:sqlQuery|ARGS_GET:showQuery|ARGS_GET:showLinks|ARGS_GET:showRows|ARGS_GET:queryID "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith query_modify.php" \
	"id:66601045,chain,msg:'POL-2015-6010',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:queryAction|ARGS_POST:displayType|ARGS_POST:showLinks|ARGS_POST:showRows|ARGS_POST:citeOrder|ARGS_POST:queryID "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith modify.php" \
	"id:66601046,chain,msg:'POL-2015-6010',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:typeName|ARGS_POST:fileName "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith query_modify.php" \
	"id:66601047,chain,msg:'POL-2015-6010',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:sqlQuery "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-5956
# CVSS: 3.5
# Publish: 2015-09-16T14:59:00
# The sanitizeLocalUrl function in TYPO3 6.x before 6.2.15, 7.x before 7.4.0, 4.5.40, and earlier allows remote authenticated users to bypass the XSS filter and conduct cross-site scripting (XSS) attacks via a base64 encoded data URI, as demonstrated by the (1) returnUrl parameter to show_rechis.php and the (2) redirect_url parameter to index.php.
SecRule REQUEST_URI "@pm /typo3/index.php" \
	"id:66601048,chain,msg:'POL-2015-5956',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:redirect_url "@rx data\:[\w\/]+\;base64" \
	"t:none,t:lowercase,t:removeWhitespace"

SecRule REQUEST_FILENAME "@pm show_rechis.php" \
	"id:66601049,chain,msg:'POL-2015-5956',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:returnUrl "@rx data\:[\w\/]+\;base64" \
	"t:none,t:lowercase,t:removeWhitespace"


# CVE: CVE-2017-5367
# CVSS: 4.3
# Publish: 2017-02-06T17:59:00
# Multiple reflected XSS vulnerabilities exist within form and link input parameters of ZoneMinder v1.30 and v1.29, an open-source CCTV server web application, which allows a remote attacker to execute malicious scripts within an authenticated client's browser. The URL is /zm/index.php and sample parameters could include action=login&view=postlogin[XSS] view=console[XSS] view=groups[XSS] view=events&filter[terms][1][cnj]=and[XSS] view=events&filter%5Bterms%5D%5B1%5D%5Bcnj%5D=and[XSS] view=events&filter%5Bterms%5D%5B1%5D%5Bcnj%5D=[XSS]and view=events&limit=1%22%3E%3C/a%3E[XSS] (among others).
SecRule ARGS:view "@streq events" \
	"id:66601050,chain,msg:'POL-2017-5367',phase:3,deny,status:403,log,t:none,t:lowercase,rev:4,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES|RESPONSE_HEADERS:/Set-Cookie/ "@contains zmsessid" \
	"chain,t:none,t:lowercase"
SecRule ARGS:limit "@rx \D" \
	"t:none"

SecRule ARGS:view "@streq events" \
	"id:66601051,chain,msg:'POL-2017-5367',phase:3,deny,status:403,log,t:none,t:lowercase,rev:4,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES|RESPONSE_HEADERS:/Set-Cookie/ "@contains zmsessid" \
	"chain,t:none,t:lowercase"
SecRule ARGS:/[cnj]/ "@rx \D" \
	"t:none,t:urlDecodeUni"

SecRule ARGS:view "@contains <" \
	"id:66601052,chain,msg:'POL-2017-5367',phase:3,deny,status:403,log,t:none,t:urlDecodeUni,rev:4,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES_NAMES|RESPONSE_HEADERS:/Set-Cookie/ "@contains zmsessid" \
	"t:none,t:lowercase"


# CVE: CVE-2015-2250
# CVSS: 4.3
# Publish: 2015-05-15T18:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in concrete5 before 5.7.4 allow remote attackers to inject arbitrary web script or HTML via the (1) banned_word[] parameter to index.php/dashboard/system/conversations/bannedwords/success, (2) channel parameter to index.php/dashboard/reports/logs/view, (3) accessType parameter to index.php/tools/required/permissions/access_entity, (4) msCountry parameter to index.php/dashboard/system/multilingual/setup/load_icon, arHandle parameter to (5) design/submit or (6) design in index.php/ccm/system/dialogs/area/design/submit, (7) pageURL to index.php/dashboard/pages/single, (8) SEARCH_INDEX_AREA_METHOD parameter to index.php/dashboard/system/seo/searchindex/updated, (9) unit parameter to index.php/dashboard/system/optimization/jobs/job_scheduled, (10) register_notification_email parameter to index.php/dashboard/system/registration/open/1, or (11) PATH_INFO to index.php/dashboard/extend/connect/.
SecRule REQUEST_FILENAME "@contains index.php/dashboard/reports/logs/view" \
	"id:66601053,chain,msg:'POL-2015-2250',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:channel "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@contains index.php/tools/required/permissions/access_entity" \
	"id:66601054,chain,msg:'POL-2015-2250',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:accessType "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@contains index.php/ccm/system/dialogs/area/design" \
	"id:66601055,chain,msg:'POL-2015-2250',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:arHandle "@rx  \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@contains index.php/dashboard/extend/connect" \
	"id:66601056,chain,msg:'POL-2015-2250',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "@rx  \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@contains index.php/dashboard/system/conversations/bannedwords" \
	"id:66601057,chain,msg:'POL-2015-2250',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:banned_word[] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@contains index.php/dashboard/system/multilingual/setup/load_icon" \
	"id:66601058,chain,msg:'POL-2015-2250',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:msCountry "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@contains index.php/dashboard/pages/single" \
	"id:66601059,chain,msg:'POL-2015-2250',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:pageURL "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@contains index.php/dashboard/system/seo/searchindex" \
	"id:66601060,chain,msg:'POL-2015-2250',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:SEARCH_INDEX_AREA_METHOD "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@contains index.php/dashboard/system/optimization/jobs" \
	"id:66601061,chain,msg:'POL-2015-2250',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:unit "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@contains index.php/dashboard/system/registration/open" \
	"id:66601062,chain,msg:'POL-2015-2250',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:register_notification_email "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-8603
# CVSS: 3.5
# Publish: 2016-01-12T19:59:00
# Cross-site scripting (XSS) vulnerability in Serendipity before 2.0.3 allows remote attackers to inject arbitrary web script or HTML via the serendipity[entry_id] parameter in an "edit" admin action to serendipity_admin.php. Per http://blog.s9y.org/archives/266-Serendipity-2.0.3-released.html:
# "The issue only affects logged-in authors, where HTML can be inserted into the comment editing form when they click specially crafted links.Due to the required authentication we consider the issue of medium impact, but suggest everyone to perform the update."
SecRule REQUEST_FILENAME "@endsWith serendipity_admin.php" \
	"id:66601063,chain,msg:'POL-2015-8603',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:serendipity[adminAction] "@streq edit" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:serendipity[entry_id] "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-8376
# CVSS: 4.3
# Publish: 2016-01-08T21:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in Symphony CMS 2.6.3 allow remote attackers to inject arbitrary web script or HTML via the (1) Name, (2) Navigation Group, or (3) Label parameter to blueprints/sections/edit/1.
SecRule REQUEST_FILENAME "@endsWith symphony/blueprints/sections/edit/1/saved/" \
	"id:66601064,chain,msg:'POL-2015-8376',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:meta[name]|ARGS_POST:meta[navigation_group] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-9288
# CVSS: 7.5
# Publish: 2016-11-11T23:59:00
# In framework/modules/navigation/controllers/navigationController.php in Exponent CMS v2.4.0 or older, the parameter "target" of function "DragnDropReRank" is directly used without any filtration which caused SQL injection. The payload can be used like this: /navigation/DragnDropReRank/target/1.
SecRule ARGS_GET:module "@streq navigation" \
	"id:66601065,chain,msg:'POL-2016-9288',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@streq dragndroprerank" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:target "@rx \D" \
	"t:none"


# CVE: CVE-2015-2080
# CVSS: 5
# Publish: 2016-10-07T14:59:00
# The exception handling code in Eclipse Jetty before 9.2.9.v20150224 allows remote attackers to obtain sensitive information from process memory via illegal characters in an HTTP header, aka JetLeak.
SecRule RESPONSE_STATUS "@streq 400" \
	"id:66601066,chain,msg:'POL-2015-2080',phase:3,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI|REQUEST_HEADERS|REQUEST_HEADERS_NAMES|ARGS|ARGS_NAMES|REQUEST_BODY "!@validateByteRange 0-31" \
	"t:none"


# CVE: CVE-2016-7790
# CVSS: 7.5
# Publish: 2017-01-12T22:59:00
# Exponent CMS 2.3.9 suffers from a remote code execution vulnerability in /install/index.php. An attacker can upload 'php' file to the website through uploader_paste.php, then overwrite /framework/conf/config.php, which leads to arbitrary code execution.
SecRule ARGS:profile "@contains .." \
	"id:66601067,chain,msg:'POL-2016-7790',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@rx \/install\/(?:index\.php)?$" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2016-1000127
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin ajax-random-post v2.00
SecRule &ARGS_GET:interval "@ge 1" \
	"id:66601068,chain,msg:'POL-2016-1000127',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:count "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:count|ARGS_GET:interval "@contains <" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_BASENAME "@streq js.php" \
	"t:none,t:lowercase"


# CVE: CVE-2016-6913
# CVSS: 3.5
# Publish: 2016-09-26T16:59:00
# Cross-site scripting (XSS) vulnerability in AlienVault OSSIM before 5.3 and USM before 5.3 allows remote attackers to inject arbitrary web script or HTML via the back parameter to ossim/conf/reload.php.
SecRule ARGS_GET:back "@contains '" \
	"id:66601069,chain,msg:'POL-2016-6913',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith /conf/reload.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2016-7565
# CVSS: 7.5
# Publish: 2017-02-13T18:59:00
# install/index.php in Exponent CMS 2.3.9 allows remote attackers to execute arbitrary commands via shell metacharacters in the sc array parameter.
SecRule ARGS:/^sc/ "@contains '" \
	"id:66601070,chain,msg:'POL-2016-7565',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule MATCHED_VAR "@contains ;" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@rx \/install\/(?:index\.php)?$" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2015-4380
# CVSS: 3.5
# Publish: 2015-06-15T14:59:00
# Cross-site scripting (XSS) vulnerability in the Linear Case module 6.x-1.x before 6.x-1.3 for Drupal allows remote authenticated users with certain permissions to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:drupal "@eq 1" \
	"id:66601071,chain,msg:'POL-2015-4380',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:title "@contains <" \
	"chain,t:none,t:htmlEntityDecode,t:urlDecodeUni"
SecRule ARGS:form_id "@contains book_node_form" \
	"t:none,t:lowercase"


# CVE: CVE-2014-0334
# CVSS: 3.5
# Publish: 2014-03-02T17:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in CMS Made Simple allow remote authenticated users to inject arbitrary web script or HTML via (1) the group parameter to admin/addgroup.php, (2) the htmlblob parameter to admin/addhtmlblob.php, the (3) title or (4) url parameter to admin/addbookmark.php, (5) the stylesheet_name parameter to admin/copystylesheet.php, (6) the template_name parameter to admin/copytemplate.php, the (7) title or (8) url parameter to admin/editbookmark.php, (9) the template parameter to admin/listtemplates.php, or (10) the css_name parameter to admin/listcss.php, a different issue than CVE-2014-2092.
#5000280
SecRule REQUEST_URI "!@rx /admin/addgroup\.php" \
        "id:66601072,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000273"

SecMarker BEGIN-RULE5000273
SecRule REQUEST_METHOD "@streq POST" \
        "id:66601073,chain,msg:'POL-2014-0334',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:group "@rx <" "

SecMarker END-RULE5000273

SecRule REQUEST_URI "!@rx /admin/addhtmlblob\.php" \
        "id:66601074,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000274"

SecMarker BEGIN-RULE5000274
SecRule REQUEST_METHOD "@streq POST" \
        "id:66601075,chain,msg:'POL-2014-0334',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:htmlblob "@rx <" "

SecMarker END-RULE5000274

SecRule REQUEST_URI "!@rx /admin/addbookmark\.php" \
        "id:66601076,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000275"

SecMarker BEGIN-RULE5000275
SecRule REQUEST_METHOD "@streq POST" \
        "id:66601077,chain,msg:'POL-2014-0334',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:title|ARGS_POST:url "@rx <" "

SecMarker END-RULE5000275

SecRule REQUEST_URI "!@rx /admin/copystylesheet\.php" \
        "id:66601078,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000276"

SecMarker BEGIN-RULE5000276
SecRule REQUEST_METHOD "@streq POST" \
        "id:66601079,chain,msg:'POL-2014-0334',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:stylesheet_name "@rx <" "

SecMarker END-RULE5000276

SecRule REQUEST_URI "!@rx /admin/copytemplate\.php" \
        "id:66601080,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000277"

SecMarker BEGIN-RULE5000277
SecRule REQUEST_METHOD "@streq POST" \
        "id:66601081,chain,msg:'POL-2014-0334',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:template_name "@rx <" "

SecMarker END-RULE5000277

SecRule REQUEST_URI "!@rx /admin/editbookmark\.php" \
        "id:66601082,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000278"

SecMarker BEGIN-RULE5000278
SecRule REQUEST_METHOD "@streq POST" \
        "id:66601083,chain,msg:'POL-2014-0334',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:title|ARGS_POST:url "@rx <" "

SecMarker END-RULE5000278

SecRule REQUEST_URI "!@rx /admin/listtemplates\.php" \
        "id:66601084,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000279"

SecMarker BEGIN-RULE5000279
SecRule REQUEST_METHOD "@streq POST" \
        "id:66601085,chain,msg:'POL-2014-0334',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:template "@rx <" "

SecMarker END-RULE5000279

SecRule REQUEST_URI "!@rx /admin/listcss\.php" \
        "id:66601086,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000280"

SecMarker BEGIN-RULE5000280
SecRule REQUEST_METHOD "@streq POST" \
        "id:66601087,chain,msg:'POL-2014-0334',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:css_name "@rx <" "

SecMarker END-RULE5000280

# CVE: CVE-2014-4033
# CVSS: 4.3
# Publish: 2014-06-11T14:55:00
# Cross-site scripting (XSS) vulnerability in libraries/includes/personal/profile.php in Epignosis eFront 3.6.14.4 allows remote attackers to inject arbitrary web script or HTML via the surname parameter to student.php.
SecRule ARGS_GET:ctg "@streq personal" \
	"id:66601088,chain,msg:'POL-2014-4033',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:op "@streq profile" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@pm administrator.php student.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:name|ARGS_POST:surname "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-5749
# CVSS: 4.3
# Publish: 2014-05-12T14:55:00
# Cross-site scripting (XSS) vulnerability in management/prioritize_planning.php in SimpleRisk before 20130916-001 allows remote attackers to inject arbitrary web script or HTML via the new_project parameter.
SecRule REQUEST_FILENAME "@endsWith management/prioritize_planning.php" \
	"id:66601089,chain,msg:'POL-2013-5749',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:new_project "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2016-2153
# CVSS: 4.3
# Publish: 2016-05-22T20:59:00
# Cross-site scripting (XSS) vulnerability in the advanced-search feature in mod_data in Moodle through 2.6.11, 2.7.x before 2.7.13, 2.8.x before 2.8.11, 2.9.x before 2.9.5, and 3.0.x before 3.0.3 allows remote attackers to inject arbitrary web script or HTML via a crafted field in a URL, as demonstrated by a search form field.
SecRule REQUEST_FILENAME "@endsWith mod/data/field.php" \
	"id:66601090,chain,msg:'POL-2016-2153',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:type "@ge 1" \
	"chain,t:none"
SecRule &REQUEST_COOKIES:MoodleSession "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:name|ARGS_POST:description "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-0916
# CVSS: 6.5
# Publish: 2015-05-22T00:59:00
# SQL injection vulnerability in graph.php in Cacti before 0.8.6f allows remote authenticated users to execute arbitrary SQL commands via the local_graph_id parameter, a different vulnerability than CVE-2007-6035.
SecRule REQUEST_FILENAME "@endsWith graph.php" \
	"id:66601091,chain,msg:'POL-2015-0916',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:rra_id "@eq 1" \
	"chain,t:none"
SecRule ARGS_GET:local_graph_id "@rx \D" \
	"t:none"


# CVE: CVE-2015-4676
# CVSS: 6.5
# Publish: 2015-06-19T14:59:00
# SQL injection vulnerability in ticket.php in TickFa 1.x allows remote authenticated users to execute arbitrary SQL commands via the tid parameter in a read action.
SecRule REQUEST_FILENAME "@endsWith ticket.php" \
	"id:66601092,chain,msg:'POL-2015-4676',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:action "@streq read" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:tid "@rx \D" \
	"t:none"


# CVE: CVE-2014-100006
# CVSS: 4.3
# Publish: 2015-01-13T11:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in modules_v3/googlemap/wt_v3_street_view.php in webtrees before 1.5.2 allow remote attackers to inject arbitrary web script or HTML via the (1) map, (2) streetview, or (3) reset parameter.
SecRule REQUEST_FILENAME "@endsWith modules_v3/googlemap/wt_v3_street_view.php" \
	"id:66601093,chain,msg:'POL-2014-100006',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:map|ARGS_GET:streetview "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-4460
# CVSS: 3.5
# Publish: 2014-01-10T15:55:00
# Cross-site scripting (XSS) vulnerability in account_sponsor_page.php in MantisBT 1.0.0 through 1.2.15 allows remote authenticated users to inject arbitrary web script or HTML via a project name.
SecRule &REQUEST_COOKIES:MANTIS_STRING_COOKIE "@ge 1" \
	"id:66601094,chain,msg:'POL-2013-4460',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@rx [manage_proj_create\.php|manage_proj_update\.php]" \
	"chain,t:none,t:lowercase"
SecRule &ARGS:manage_proj_create_token|&ARGS:manage_proj_update_token "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:name "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2013-1749
# CVSS: 4.3
# Publish: 2013-04-18T11:33:00
# Cross-site scripting (XSS) vulnerability in edit.php in PHP Address Book 8.2.5 allows user-assisted remote attackers to inject arbitrary web script or HTML via the Address field.
SecRule &REQUEST_COOKIES:uin "@ge 1" \
	"id:66601095,chain,msg:'POL-2013-1749',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@contains addressbook/edit.php" \
	"chain,t:none,t:lowercase,t:normalizePath"
SecRule ARGS_POST:address "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-2803
# CVSS: 6
# Publish: 2015-06-17T18:59:00
# SQL injection vulnerability in mod1/index.php in the Akronymmanager (sb_akronymmanager) extension before 7.0.0 for TYPO3 allows remote authenticated users with permission to maintain acronyms to execute arbitrary SQL commands via the id parameter.
SecRule REQUEST_FILENAME "@endsWith mod1/index.php" \
	"id:66601096,chain,msg:'POL-2015-2803',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:id "@rx \'" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4348
# CVSS: 3.5
# Publish: 2014-06-25T11:19:00
# Multiple cross-site scripting (XSS) vulnerabilities in phpMyAdmin 4.2.x before 4.2.4 allow remote authenticated users to inject arbitrary web script or HTML via a crafted (1) database name or (2) table name that is improperly handled after presence in (a) the favorite list or (b) recent tables.
SecRule REQUEST_FILENAME "@pm tbl_create.php db_create.php" \
	"id:66601097,chain,msg:'POL-2014-4348',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:phpMyAdmin "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:new_db|ARGS_POST:table "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2014-100021
# CVSS: 4.3
# Publish: 2015-01-13T15:59:00
# Cross-site scripting (XSS) vulnerability in symfony/web/index.php/pim/viewEmployeeList in OrangeHRM before 3.1.2 allows remote attackers to inject arbitrary web script or HTML via the empsearch[employee_name][empId] parameter.
SecRule REQUEST_URI "@contains symfony/web/index.php/pim/viewEmployeeList" \
	"id:66601098,chain,msg:'POL-2014-100021',phase:2,deny,status:403,log,t:none,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:PHPSESSID "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:empsearch[employee_name][empId] "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2012-6621
# CVSS: 4.3
# Publish: 2014-01-16T21:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in GetSimple CMS 3.1, 3.1.2, 3.2.3, and earlier allow remote attackers to inject arbitrary web script or HTML via the (1) Email Address or (2) Custom Permalink Structure fields in admin/settings.php; (3) path parameter to admin/upload.php; (4) err parameter to admin/theme.php; (5) error parameter to admin/pages.php; or (6) success or (7) err parameter to admin/index.php.
#5000235
SecRule REQUEST_URI "!@rx /admin/settings\.php" \
        "id:66601099,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000235"

SecMarker BEGIN-RULE5000235
SecRule REQUEST_METHOD "@streq POST" \
        "id:66601100,chain,msg:'POL-2012-6621',phase:2,deny,status:403,log,rev:2,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:sitename "@gt 0" \
        "chain"
SecRule ARGS_POST:email|ARGS_POST:permalink "@rx \<" \
        "t:none,t:urlDecodeUni"

SecMarker END-RULE5000235


# CVE: CVE-2013-7002
# CVSS: 4.3
# Publish: 2013-12-21T00:55:00
# Cross-site scripting (XSS) vulnerability in mobile/php/translation/index.php in LiveZilla before 5.1.1.0 allows remote attackers to inject arbitrary web script or HTML via the g_language parameter.
SecRule REQUEST_FILENAME "/mobile/php/translation/index.php" \
	"id:66601101,chain,msg:'POL-2013-7002',phase:1,block,deny,status:403,t:none,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:g_language "!@rx ^[a-z]{2}$" "


# CVE: CVE-2014-1683
# CVSS: 6.8
# Publish: 2014-01-29T18:55:00
# The bashMail function in cms/data/skins/techjunkie/fragments/contacts/functions.php in SkyBlueCanvas CMS before 1.1 r248-04, when the pid parameter is 4, allows remote attackers to execute arbitrary commands via shell metacharacters in the (1) name, (2) email, (3) subject, or (4) message parameter to index.php.
#5000237
SecRule REQUEST_URI "!@rx /index\.php" \
        "id:66601102,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000237"

SecMarker BEGIN-RULE5000237
SecRule REQUEST_METHOD "@streq POST" \
        "id:66601103,chain,msg:'POL-2014-1683',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:pid "@streq 4" \
        "chain,t:none,t:urlDecodeUni"
SecRule ARGS_POST:email|ARGS_POST:message|ARGS_POST:name|ARGS_POST:subject "@rx \";" \
        "t:none,t:htmlEntityDecode"

SecMarker END-RULE5000237

# CVE: CVE-2014-1206
# CVSS: 7.5
# Publish: 2014-01-15T16:08:00
# SQL injection vulnerability in the password reset page in Open Web Analytics (OWA) before 1.5.5 allows remote attackers to execute arbitrary SQL commands via the owa_email_address parameter in a base.passwordResetRequest action to index.php.
#5000236
SecRule REQUEST_URI "!@rx /index\.php" \
        "id:66601104,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000236"

SecMarker BEGIN-RULE5000236
SecRule REQUEST_METHOD "@streq POST" \
        "id:66601105,chain,msg:'POL-2014-1206',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:owa_action "@streq base.passwordResetRequest" \
        "chain"
SecRule ARGS_POST:owa_email_address "@rx \s" \
        "t:none,t:urlDecodeUni"

SecMarker END-RULE5000236


# CVE: CVE-2013-3531
# CVSS: 7.5
# Publish: 2013-05-10T21:55:00
# SQL injection vulnerability in meneger.php in RadioCMS 2.2 allows remote attackers to execute arbitrary SQL commands via the playlist_id parameter.
#5000231
SecRule REQUEST_URI "!@rx /radio/meneger\.php$" \
        "id:66601106,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000231"

SecMarker BEGIN-RULE5000231
SecRule REQUEST_METHOD "@streq GET" \
        "id:66601107,chain,msg:'POL-2013-3531',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:playlist_id "!@rx ^\d*$" "

SecMarker END-RULE5000231


# CVE: CVE-2013-6164
# CVSS: 7.5
# Publish: 2013-11-14T20:55:00
# SQL injection vulnerability in view/objectDetail.php in Project'Or RIA 3.4.0 allows remote attackers to execute arbitrary SQL commands via the objectId parameter.
#5000230
SecRule REQUEST_URI "!@rx /view/objectDetail\.php" \
        "id:66601108,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000230"

SecMarker BEGIN-RULE5000230
SecRule REQUEST_METHOD "@streq POST" \
        "id:66601109,chain,msg:'POL-2013-6164',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:objectClass "@streq Affectation" \
        "chain"
SecRule ARGS_POST:objectId "!@rx ^\d+$" "

SecMarker END-RULE5000230

# CVE: CVE-2013-6267
# CVSS: 4.3
# Publish: 2013-12-05T18:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in Claroline before 1.11.9 allow remote attackers to inject arbitrary web script or HTML via the (1) box parameter to messaging/messagebox.php, cidToEdit parameter to (2) adminregisteruser.php or (3) admin_user_course_settings.php in admin/, (4) module_id parameter to admin/module/module.php, or (5) offset parameter to admin/right/profile_list.php.
#5000233
SecRule REQUEST_URI "!@rx /claroline/(admin(registeruser|_user_course_settings)|module|profile_list)\.php" \
        "id:66601110,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000233"

SecMarker BEGIN-RULE5000233
SecRule REQUEST_METHOD "@streq GET" \
        "id:66601111,chain,msg:'POL-2013-6267',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:cidToEdit|ARGS_GET:module_id|ARGS_GET:offset "!@rx ^\d+$" "

SecMarker END-RULE5000233


# CVE: CVE-2013-6873
# CVSS: 7.5
# Publish: 2013-11-26T16:55:00
# SQL injection vulnerability in Testa Online Test Management System (OTMS) 2.0.0.2 allows remote attackers to execute arbitrary SQL commands via the test_id parameter.
SecRule ARGS_GET:test_id "!@rx ^\d+$" \
	"id:66601112,msg:'POL-2013-6873',phase:2,deny,status:403,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"


# CVE: CVE-2014-1619
# CVSS: 7.5
# Publish: 2014-01-21T15:17:00
# Multiple SQL injection vulnerabilities in Cubic CMS 5.1.1, 5.1.2, and 5.2 allow remote attackers to execute arbitrary SQL commands via the (1) resource_id or (2) version_id parameter to recursos/agent.php or (3) login or (4) pass parameter to login.usuario.
#5000239
SecRule REQUEST_URI "!@rx /recursos/agent\.php" \
        "id:66601113,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000239"

SecMarker BEGIN-RULE5000239
SecRule REQUEST_METHOD "@rx GET$" \
        "id:66601114,chain,msg:'POL-2014-1619',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:resource_id|ARGS_GET:version_id "!@rx ^-?\d+$" \
        "t:none,t:urlDecodeUni"

SecMarker END-RULE5000239


# CVE: CVE-2014-1610
# CVSS: 6
# Publish: 2014-01-30T23:55:00
# MediaWiki 1.22.x before 1.22.2, 1.21.x before 1.21.5, and 1.19.x before 1.19.11, when DjVu or PDF file upload support is enabled, allows remote attackers to execute arbitrary commands via shell metacharacters in (1) the page parameter to includes/media/DjVu.php; (2) the w parameter (aka width field) to thumb.php, which is not properly handled by includes/media/PdfHandler_body.php; and possibly unspecified vectors in (3) includes/media/Bitmap.php and (4) includes/media/ImageHandler.php.
#5000238
SecRule REQUEST_URI "!@rx /thumb\.php" \
        "id:66601115,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5000238"

SecMarker BEGIN-RULE5000238
SecRule REQUEST_METHOD "@rx GET$" \
        "id:66601116,chain,msg:'POL-2014-1610',phase:2,deny,status:403,log,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:f "@rx .+" \
        "chain,t:none,t:urlDecodeUni"
SecRule ARGS_GET:w "!@rx ^\d+$" \
        "t:none,t:urlDecodeUni"

SecMarker END-RULE5000238


# CVE: CVE-2016-2040
# CVSS: 3.5
# Publish: 2016-02-20T01:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in phpMyAdmin 4.0.x before 4.0.10.13, 4.4.x before 4.4.15.3, and 4.5.x before 4.5.4 allow remote authenticated users to inject arbitrary web script or HTML via a (1) table name, (2) SET value, (3) search query, or (4) hostname in a Location header.
SecRule REQUEST_FILENAME "@endsWith db_search.php" \
	"id:66601117,chain,msg:'POL-2016-2040',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS:criteriaTables[] "@rx \"" \
	"chain,t:none,t:urlDecodeUni"
SecRule &REQUEST_COOKIES:phpmyadmin "@ge 1" \
	"t:none"

SecRule REQUEST_FILENAME "@endsWith tbl_zoom_select.php" \
	"id:66601118,chain,msg:'POL-2016-2040',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS:/criteriaValues\[\d+\]/|ARGS:/criteriaColumnTypes\[\d+\]/ "@rx \"" \
	"chain,t:none,t:urlDecodeUni"
SecRule &REQUEST_COOKIES:phpmyadmin "@ge 1" \
	"t:none"

SecRule REQUEST_URI "@ge 600" \
	"id:66601119,chain,msg:'POL-2016-2040',phase:3,deny,status:403,log,t:none,t:length,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_HEADERS:Host "@contains '" \
	"chain,t:none,t:urlDecodeUni"
SecRule RESPONSE_HEADERS:Set-Cookie "@contains pmaPass" \
	"t:none"


# CVE: CVE-2014-8577
# CVSS: 4.3
# Publish: 2014-10-31T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in Croogo before 2.1.0 allow remote attackers to inject arbitrary web script or HTML via the (1) data[Contact][title] parameter to admin/contacts/contacts/add page; (2) data[Block][title] or (3) data[Block][alias] parameter to admin/blocks/blocks/edit page; (4) data[Region][title] parameter to admin/blocks/regions/add page; (5) data[Menu][title] or (6) data[Menu][alias] parameter to admin/menus/menus/add page; or (7) data[Link][title] parameter to admin/menus/links/add/menu page.
SecRule REQUEST_FILENAME "@pm admin/contacts/contacts/add admin/contacts/contacts/edit" \
	"id:66601120,chain,msg:'POL-2014-8577',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:data[Contact][title] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@pm admin/blocks/blocks/add admin/blocks/blocks/edit" \
	"id:66601121,chain,msg:'POL-2014-8577',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:data[Block][title]|ARGS_POST:data[Block][alias] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@pm admin/blocks/regions/add admin/blocks/regions/edit" \
	"id:66601122,chain,msg:'POL-2014-8577',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:data[Region][title] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@pm admin/menus/menus/add admin/menus/menus/edit" \
	"id:66601123,chain,msg:'POL-2014-8577',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:data[Menu][title]|ARGS_POST:data[Menu][alias] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@pm admin/menus/links/add admin/menus/links/edit" \
	"id:66601124,chain,msg:'POL-2014-8577',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:data[Link][title] "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-1041
# CVSS: 4.3
# Publish: 2015-01-15T15:59:00
# Cross-site scripting (XSS) vulnerability in e107_admin/filemanager.php in e107 1.0.4 allows remote attackers to inject arbitrary web script or HTML via the e107_files/ file path in the QUERY_STRING.
SecRule REQUEST_FILENAME "@contains e107_admin/filemanager.php" \
	"id:66601125,chain,msg:'POL-2015-1041',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-1053
# CVSS: 4.3
# Publish: 2015-01-16T15:59:00
# Cross-site scripting (XSS) vulnerability in the administrative backend in Croogo before 2.2.1 allows remote attackers to inject arbitrary web script or HTML via the path parameter to admin/file_manager/file_manager/editfile.
SecRule REQUEST_FILENAME "@contains admin/file_manager/file_manager/editfile" \
	"id:66601126,chain,msg:'POL-2015-1053',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:path "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-6529
# CVSS: 4.3
# Publish: 2015-08-20T20:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in phpipam 1.1.010 allow remote attackers to inject arbitrary web script or HTML via the (1) section parameter to site/error.php or (2) ip parameter to site/tools/searchResults.php.
SecRule REQUEST_FILENAME "@endsWith /site/tools/searchResults.php" \
	"id:66601127,chain,msg:'POL-2015-6529',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:addresses "@streq on" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:ip "@rx \"" \
	"t:none"

SecRule REQUEST_FILENAME "@endsWith site/error.php" \
	"id:66601128,chain,msg:'POL-2015-6529',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:section "@rx \D" \
	"t:none"


# CVE: CVE-2015-4342
# CVSS: 7.5
# Publish: 2015-06-17T18:59:00
# SQL injection vulnerability in Cacti before 0.8.8d allows remote attackers to execute arbitrary SQL commands via unspecified vectors involving a cdef id.
SecRule REQUEST_COOKIES_NAMES "@contains cacti" \
	"id:66601129,chain,msg:'POL-2015-4342',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith /cdef.php" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:cdef_id|ARGS_POST:id "@rx \D" \
	"t:none"


# CVE: CVE-2015-5338
# CVSS: 6.8
# Publish: 2016-02-22T05:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the lesson module in Moodle through 2.6.11, 2.7.x before 2.7.11, 2.8.x before 2.8.9, and 2.9.x before 2.9.3 allow remote attackers to hijack the authentication of arbitrary users for requests to (1) mod/lesson/mediafile.php or (2) mod/lesson/view.php.
SecRule REQUEST_FILENAME "@pm mod/lesson/view.php mod/lesson/mediafile.php" \
	"id:66601130,chain,phase:2,pass,nolog,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.moodle_ls=1',setvar:'SESSION.TIMEOUT=300',expirevar:'SESSION.moodle_ls=300',t:none,t:lowercase"

SecRule SESSION:moodle_ls "@eq 1" \
	"id:66601131,phase:2,pass,nolog,skip:1,rev:2,severity:2,tag:'OtherApps'"

SecRule REQUEST_FILENAME "@pm mod/lesson/view.php mod/lesson/mediafile.php" \
	"id:66601132,chain,msg:'POL-2015-5338',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule &ARGS_GET:id "@ge 1" \
	"chain,t:none"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:moodle_ls "!@eq 1" \
	"t:none"


# CVE: CVE-2013-7243
# CVSS: 4.3
# Publish: 2014-01-17T15:18:00
# Multiple cross-site scripting (XSS) vulnerabilities in GetSimple CMS 3.1.2 and 3.2.3 allow remote attackers to inject arbitrary web script or HTML via the (1) post-menu field to edit.php or (2) Display name field to settings.php.  NOTE: The Custom Permalink Structure and Email Address fields are already covered by CVE-2012-6621.
SecRule REQUEST_FILENAME "@endsWith admin/changedata.php" \
	"id:66601133,chain,msg:'POL-2013-7243',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:nonce "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:post-menu "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith admin/settings.php" \
	"id:66601134,chain,msg:'POL-2013-7243',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:nonce "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:name "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-1467
# CVSS: 7.5
# Publish: 2015-02-06T15:59:00
# Multiple SQL injection vulnerabilities in Translations in Fork CMS before 3.8.6 allow remote authenticated users to execute arbitrary SQL commands via the (1) language[] or (2) type[] parameter to private/en/locale/index.
SecRule REQUEST_URI "@pm locale/index" \
	"id:66601135,chain,msg:'POL-2015-1467',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:type[] "@rx \'" \
	"t:none,t:urlDecodeUni,t:lowercase"

SecRule REQUEST_URI "@pm locale/index" \
	"id:66601136,chain,msg:'POL-2015-1467',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:language[] "@rx \'" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2015-6518
# CVSS: 4.3
# Publish: 2015-08-18T18:00:00
# Multiple cross-site scripting (XSS) vulnerabilities in phpLiteAdmin 1.1 allow remote attackers to inject arbitrary web script or HTML via the (1) PATH_INFO, (2) droptable parameter, or (3) table parameter to phpliteadmin.php.
SecRule REQUEST_FILENAME "@contains phpliteadmin.php" \
	"id:66601137,chain,msg:'POL-2015-6518',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_URI "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith phpliteadmin.php" \
	"id:66601138,chain,msg:'POL-2015-6518',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:droptable|ARGS_GET:table "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-4454
# CVSS: 7.5
# Publish: 2015-06-17T18:59:00
# SQL injection vulnerability in the get_hash_graph_template function in lib/functions.php in Cacti before 0.8.8d allows remote attackers to execute arbitrary SQL commands via the graph_template_id parameter to graph_templates.php.
SecRule REQUEST_COOKIES_NAMES "@contains cacti" \
	"id:66601139,chain,msg:'POL-2015-4454',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith /graph_templates.php" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:graph_template_id "@rx \D" \
	"t:none"

SecRule REQUEST_COOKIES_NAMES "@contains cacti" \
	"id:66601140,chain,msg:'POL-2015-4454',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith /settings.php" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS:tab "@rx \W" \
	"t:none"


# CVE: CVE-2016-0725
# CVSS: 4.3
# Publish: 2016-02-22T05:59:00
# Cross-site scripting (XSS) vulnerability in the search_pagination function in course/classes/management_renderer.php in Moodle 2.8.x before 2.8.10, 2.9.x before 2.9.4, and 3.0.x before 3.0.2 allows remote attackers to inject arbitrary web script or HTML via a crafted search string.
SecRule REQUEST_FILENAME "@endsWith course/management.php" \
	"id:66601141,chain,msg:'POL-2016-0725',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:search "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-1052
# CVSS: 4.3
# Publish: 2015-01-15T15:59:00
# Cross-site scripting (XSS) vulnerability in the poll archive in PHPKIT 1.6.6 (Build 160014) allows remote attackers to inject arbitrary web script or HTML via the result parameter to upload_files/pk/include.php.
SecRule REQUEST_URI "@contains upload_files/pk/include.php" \
	"id:66601142,chain,msg:'POL-2015-1052',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:path "@contains pollarchive" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:result "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-3921
# CVSS: 3.5
# Publish: 2015-05-27T18:59:00
# Cross-site scripting (XSS) vulnerability in contact.php in Coppermine Photo Gallery before 1.5.36 allows remote authenticated users to inject arbitrary web script or HTML via the referer parameter.
SecRule &REQUEST_COOKIES:/cpg\d+x_data/ "@ge 1" \
	"id:66601143,chain,msg:'POL-2015-3921',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:referer "@rx \"" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode"
SecRule REQUEST_FILENAME "@endsWith contact.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-3922
# CVSS: 5.8
# Publish: 2015-05-27T18:59:00
# Open redirect vulnerability in mode.php in Coppermine Photo Gallery before 1.5.36 allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via a URL in the referer parameter. <a href="http://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a>
SecRule &REQUEST_COOKIES:/cpg\d+x_data/ "@ge 1" \
	"id:66601144,chain,msg:'POL-2015-3922',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:referer "!@beginsWith index.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith mode.php" \
	"t:none,t:lowercase"


# CVE: CVE-2013-7368
# CVSS: 4.3
# Publish: 2014-04-15T23:13:00
# Multiple cross-site scripting (XSS) vulnerabilities in Gnew 2013.1 allow remote attackers to inject arbitrary web script or HTML via the gnew_template parameter to (1) users/profile.php, (2) articles/index.php, or (3) admin/polls.php; (4) category_id parameter to news/submit.php; news_id parameter to (5) news/send.php or (6) comments/add.php; or (7) post_subject or (8) thread_id parameter to posts/edit.php.
SecRule REQUEST_COOKIES:gnew_template "@contains <" \
	"id:66601145,chain,msg:'POL-2013-7368',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@pm users/profile.php articles/index.php admin/polls" \
	"t:none,t:normalizePath,t:lowercase"

SecRule REQUEST_FILENAME "@endsWith news/submit.php" \
	"id:66601146,chain,msg:'POL-2013-7368',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:submit "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:category_id "@rx \D" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@pm news/send.php comments/add.php" \
	"id:66601147,chain,msg:'POL-2013-7368',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:send|&ARGS_POST:add "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:news_id "@rx \D" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@endsWith posts/edit.php" \
	"id:66601148,chain,msg:'POL-2013-7368',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule &ARGS_POST:post_text "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:thread_id|ARGS_POST:post_subject "@contains <" \
	"t:none,t:urlDecodeuni,t:htmlEntityDecode"


# CVE: CVE-2015-3923
# CVSS: 5
# Publish: 2015-06-10T18:59:00
# Coppermine Photo Gallery before 1.5.36 allows remote attackers to enumerate directories via a full path in the folder parameter to minibrowser.php.
SecRule ARGS_GET:folder "@contains .." \
	"id:66601149,chain,msg:'POL-2015-3923',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith minibrowser.php" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule &REQUEST_COOKIES_NAMES:/^cpg(\d+)x_data$/ "@ge 1" \
	"t:none"


# CVE: CVE-2017-7391
# CVSS: 4.3
# Publish: 2017-04-01T02:59:00
# A Cross-Site Scripting (XSS) was discovered in 'Magmi 0.7.22'. The vulnerability exists due to insufficient filtration of user-supplied data (prefix) passed to the 'magmi-git-master/magmi/web/ajax_gettime.php' URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule ARGS:prefix "@contains <" \
	"id:66601150,chain,msg:'POL-2017-7391',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_BASENAME "@endsWith ajax_gettime.php" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2017-5964
# CVSS: 4.3
# Publish: 2017-02-12T04:59:00
# An issue was discovered in Emoncms through 9.8.0. The vulnerability exists due to insufficient filtration of user-supplied data in multiple HTTP GET parameters passed to the "emoncms-master/Modules/vis/visualisations/compare.php" URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule REQUEST_FILENAME "@contains /modules/vis/visualisations/compare.php" \
	"id:66601151,chain,msg:'POL-2017-5964',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:feedA|ARGS_GET:feedB "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2017-5960
# CVSS: 4.3
# Publish: 2017-02-12T04:59:00
# An issue was discovered in Phalcon Eye through 0.4.1. The vulnerability exists due to insufficient filtration of user-supplied data in multiple HTTP GET parameters passed to the "phalconeye-master/public/external/pydio/plugins/editor.webodf/frame.php" URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule REQUEST_FILENAME "@contains /public/external/pydio/plugins/editor.webodf/frame.php" \
	"id:66601152,chain,msg:'POL-2017-5960',phase:2,deny,status:403,log,t:none,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:token "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-10085
# CVSS: 6.5
# Publish: 2016-12-30T07:59:00
# admin/languages.php in Piwigo through 2.8.3 allows remote authenticated administrators to conduct File Inclusion attacks via the tab parameter.
SecRule ARGS_GET:tab "@contains .." \
	"id:66601153,chain,msg:'POL-2016-10085',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:2,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:pwg_id "@ge 1" \
	"t:none"


# CVE: CVE-2016-6285
# CVSS: 4.3
# Publish: 2017-01-31T22:59:00
# Cross-site scripting (XSS) vulnerability in includes/decorators/global-translations.jsp in Atlassian JIRA before 7.2.2 allows remote attackers to inject arbitrary web script or HTML via the HTTP Host header.
SecRule &REQUEST_COOKIES_NAMES:atlassian.xsrf.token "@ge 1" \
	"id:66601154,chain,msg:'POL-2016-6285',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@contains /includes/decorators/global-translations.jsp" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule REQUEST_HEADERS:Host "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2017-6973
# CVSS: 3.5
# Publish: 2017-03-31T04:59:00
# A cross-site scripting (XSS) vulnerability in the MantisBT Configuration Report page (adm_config_report.php) allows remote attackers to inject arbitrary code through a crafted 'action' parameter. This is fixed in 1.3.8, 2.1.2, and 2.2.2.
SecRule ARGS:action "@contains \"" \
	"id:66601155,chain,msg:'POL-2017-6973',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule &REQUEST_COOKIES:MANTIS_STRING_COOKIE "@ge 1" \
	"chain,t:none"
SecRule REQUEST_BASENAME "@streq adm_config_report.php" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2016-9835
# CVSS: 7.5
# Publish: 2016-12-05T08:59:00
# Directory traversal vulnerability in file "jcss.php" in Zikula 1.3.x before 1.3.11 and 1.4.x before 1.4.4 on Windows allows a remote attacker to launch a PHP object injection by uploading a serialized file.
SecRule ARGS_GET:f "@contains ..\\" \
	"id:66601156,chain,msg:'POL-2016-9835',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:2,severity:2,tag:'OtherApps'"
SecRule REQUEST_BASENAME "@streq jcss.php" \
	"t:none,t:lowercase"


# CVE: CVE-2017-6909
# CVSS: 4.3
# Publish: 2017-03-15T00:59:00
# An issue was discovered in Shimmie <= 2.5.1. The vulnerability exists due to insufficient filtration of user-supplied data (log) passed to the "shimmie2-master/ext/chatbox/history/index.php" URL. An attacker could execute arbitrary HTML and script code in a browser in the context of the vulnerable website.
SecRule &REQUEST_COOKIES:shm_session "@ge 1" \
	"id:66601157,chain,msg:'POL-2017-6909',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_FILENAME "@endsWith /ext/chatbox/history/index.php" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_GET:log "@rx \D" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-7222
# CVSS: 4.3
# Publish: 2017-03-22T05:59:00
# A cross-site scripting (XSS) vulnerability in MantisBT before 2.1.1 allows remote attackers to inject arbitrary HTML or JavaScript (if MantisBT's CSP settings permit it) by modifying 'window_title' in the application configuration. This requires privileged access to MantisBT configuration management pages (i.e., administrator access rights) or altering the system configuration file (config_inc.php).
SecRule ARGS:config_option "@streq window_title" \
	"id:66601158,chain,msg:'POL-2017-7222',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS:value "@contains <" \
	"chain,t:none,t:urlDecodeUni"
SecRule &REQUEST_COOKIES:MANTIS_STRING_COOKIE "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@rx adm_config_(?:report|set)\.php$" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2014-2024
# CVSS: 4.3
# Publish: 2014-03-14T14:55:00
# Cross-site scripting (XSS) vulnerability in classes/controller/error.php in Open Classifieds 2 before 2.1.3 allows remote attackers to inject arbitrary web script or HTML via the PATH_INFO to shared-apartments-rooms/.
SecRule Request_URI "@rx \/shared-apartments-rooms\/.*<" \
	"id:66601159,msg:'POL-2014-2024',phase:2,deny,status:403,log,t:none,t:htmlEntityDecode,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"


# CVE: CVE-2014-2211
# CVSS: 7.5
# Publish: 2014-03-03T16:55:00
# SQL injection vulnerability in portal/addtoapplication.php in POSH (aka Posh portal or Portaneo) 3.0 before 3.3.0 allows remote attackers to execute arbitrary SQL commands via the rssurl parameter.
SecRule REQUEST_FILENAME "/portal/addtoapplication\.php" \
	"id:66601160,chain,msg:'POL-2014-2211',phase:2,deny,status:403,log,t:none,t:htmlEntityDecode,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:rssurl "!@rx ^(?:(?:http|ftp)[s]?:\/\/)?[a-zA-Z0-9\-\.]+\.([a-zA-Z]{2,3}|[0-9]{1,3})(:[0-9]+)?[a-zA-Z0-9\-\._\?\'/\\\+&%#\=~]*$" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2014-2245
# CVSS: 6
# Publish: 2014-03-05T16:37:00
# SQL injection vulnerability in the News module in CMS Made Simple (CMSMS) before 1.11.10 allows remote authenticated users with the "Modify News" permission to execute arbitrary SQL commands via the sortby parameter to admin/moduleinterface.php.  NOTE: some of these details are obtained from third party information.
SecRule ARGS:m1_sortby "!@rx ^\w+\W(ASC|DESC)$" \
	"id:66601161,chain,msg:'POL-2014-2245',phase:2,deny,status:403,log,t:none,t:htmlEntityDecode,t:urlDecodeUni,rev:1,severity:2,tag:'OtherApps'"
SecRule Request_FILENAME "moduleinterface\.php" "


# CVE: CVE-2014-1877
# CVSS: 4.3
# Publish: 2014-03-13T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in Dokeos 2.1.1 allow remote attackers to inject arbitrary web script or HTML via the (1) Phone, (2) Street, (3) Address line, (4) Zip code, or (5) City field to main/auth/profile.php; (6) Subject field to main/social/groups.php; or (7) Message body field to main/messages/view_message.php.
SecRule ARGS_POST:/^extra_/ "@rx \"" \
	"id:66601162,chain,msg:'POL-2014-1877',phase:2,deny,status:403,log,rev:5,severity:2,tag:'OtherApps'"
SecRule Request_FILENAME "(profile|user_edit|user_add)\.php" "

SecRule ARGS_POST:title "@rx \">" \
	"id:66601163,chain,msg:'POL-2014-1877',phase:2,deny,status:403,log,rev:5,severity:2,tag:'OtherApps'"
SecRule Request_FILENAME "groups\.php" "

SecRule Request_FILENAME "new_message\.php" \
	"id:66601164,chain,msg:'POL-2014-1877',phase:2,deny,status:403,log,t:none,t:htmlEntityDecode,t:lowercase,t:urlDecodeUni,rev:5,severity:2,tag:'OtherApps'"
SecRule ARGS:content "@rx \">" "


# CVE: CVE-2013-5640
# CVSS: 7.5
# Publish: 2014-04-01T03:24:00
# Multiple SQL injection vulnerabilities in Gnew 2013.1 allow remote attackers to execute arbitrary SQL commands via the (1) answer_id or (2) question_id parameter to polls/vote.php, (3) story_id parameter to comments/add.php or (4) comments/edit.php, or (5) thread_id parameter to posts/add.php.  NOTE: this issue was SPLIT due to differences in researchers and disclosure dates. CVE-2013-7349 already covers the news_id parameter to news/send.php, user_email parameter to users/register.php, and thread_id to posts/edit.php vectors.
SecRule REQUEST_URI "polls/vote\.php" \
	"id:66601165,chain,msg:'POL-2013-5640',deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:answer_id|ARGS_POST:question_id "@rx \D" "

SecRule REQUEST_URI "comments/(add|edit)\.php|posts/add\.php" \
	"id:66601166,chain,msg:'POL-2013-5640',deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule ARGS_POST:story_id|ARGS_POST:thread_id "@rx \D" "


# CVE: CVE-2013-2559
# CVSS: 6.5
# Publish: 2014-03-27T16:55:00
# SQL injection vulnerability in Symphony CMS before 2.3.2 allows remote authenticated users to execute arbitrary SQL commands via the sort parameter to system/authors/.  NOTE: this can be leveraged using CSRF to allow remote unauthenticated attackers to execute arbitrary SQL commands.
SecRule REQUEST_FILENAME "@contains symphony/system/authors" \
	"id:66601167,chain,msg:'POL-2013-2559',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'OtherApps'"
SecRule ARGS_GET:sort "@rx \W" \
	"t:none"


# CVE: CVE-2013-5639
# CVSS: 7.5
# Publish: 2014-03-11T19:37:00
# Directory traversal vulnerability in users/login.php in Gnew 2013.1 and earlier allows remote attackers to read arbitrary files via a .. (dot dot) in the gnew_language cookie. CVE-2013-5639 CVSS assessment per LFI:
# 
# https://www.htbridge.com/advisory/HTB23171
# 
# 
# "1) PHP File Inclusion in Gnew: CVE-2013-5639
# 
# Vulnerability exists due to insufficient validation of user-supplied input passed via the "gnew_language" cookie to "/users/login.php" script before using it in "include()" function. A remote attacker can include and execute arbitrary local files on a vulnerable system via directory traversal sequence and URL-encoded NULL byte.
# 
# The following exploitation example below displays content of the "/etc/passwd" file:
# 
# GET /users/login.php HTTP/1.1
# Cookie: gnew_language=../../../etc/passwd%00;"
SecRule REQUEST_URI "users/login\.php" \
	"id:66601168,chain,msg:'POL-2013-5639',deny,status:403,t:none,t:urlDecodeUni,t:cmdline,multiMatch,rev:1,severity:2,tag:'OtherApps'"
SecRule REQUEST_COOKIES:gnew_language "\.\./" "


# CVE: CVE-2013-0734
# CVSS: 4.3
# Publish: 2014-03-28T15:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Mingle Forum plugin before 1.0.34 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) search_words parameter in a search action to wpf.class.php or (2) togroupusers parameter in an add_user_togroup action to fs-admin/fs-admin.php.
SecRule REQUEST_FILENAME "/wp-admin/admin\.php" \
	"id:66601169,chain,msg:'POL-2013-0734',phase:2,deny,status:403,t:none,t:htmlEntityDecode,t:lowercase,t:urlDecodeUni,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:group_name|ARGS_POST:togroupusers "<" "

SecRule REQUEST_URI "@rx mingleforumaction=search" \
	"id:66601170,chain,msg:'POL-2013-0734',phase:2,deny,status:403,t:none,t:htmlEntityDecode,t:lowercase,t:urlDecodeUni,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:search_words "<" "


# CVE: CVE-2014-2315
# CVSS: 4.3
# Publish: 2014-03-09T13:16:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Thank You Counter Button plugin 1.8.7 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) thanks_caption, (2) thanks_caption_style, or (3) thanks_style parameter to wp-admin/options.php.
SecRule ARGS_POST:/^thanks_/ "@rx \"" \
	"id:66601171,chain,msg:'POL-2014-2315',deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "/wp-admin/options\.php" "


# CVE: CVE-2013-1758
# CVSS: 4.3
# Publish: 2014-03-14T14:55:00
# Cross-site scripting (XSS) vulnerability in the Marekkis Watermark plugin 0.9.2 for WordPress allows remote attackers to inject arbitrary web script or HTML via the pfad parameter to wp-admin/options-general.php.  NOTE: some of these details are obtained from third party information.
SecRule ARGS_GET:pfad "@rx \"" \
	"id:66601172,chain,msg:'POL-2013-1758',deny,status:403,log,t:lowercase,t:none,t:urlDecodeUni,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "/wp-admin/options-general\.php" \
	"chain"
SecRule ARGS:page "marekkis-watermark" "


# CVE: CVE-2014-1906
# CVSS: 4.3
# Publish: 2014-03-06T15:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in the VideoWhisper Live Streaming Integration plugin before 4.29.5 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) m parameter to lb_status.php; (2) msg parameter to vc_chatlog.php; n parameter to (3) channel.php, (4) htmlchat.php, (5) video.php, or (6) videotext.php; (7) message parameter to lb_logout.php; or ct parameter to (8) lb_status.php or (9) v_status.php in ls/.
SecRule REQUEST_FILENAME "@contains videowhisper-live-streaming-integration" \
	"id:66601173,chain,msg:'POL-2014-1906',deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule MATCHED_VAR "@rx integration\/ls\/(?:channel|htmlchat|lb_logout|lb_status|video|videotext|vc_chatlog|v_status)\.php" \
	"chain,t:none,t:lowercase,t:urlDecodeUni,t:normalizePath"
SecRule ARGS_GET:message|ARGS_GET:n|ARGS_POST:ct|ARGS_POST:m|ARGS_POST:msg "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-1409
# CVSS: 4.3
# Publish: 2014-03-03T16:55:00
# Cross-site scripting (XSS) vulnerability in the CommentLuv plugin before 2.92.4 for WordPress allows remote attackers to inject arbitrary web script or HTML via the _ajax_nonce parameter to wp-admin/admin-ajax.php.
SecRule ARGS_POST:_ajax_nonce "@rx \"" \
	"id:66601174,chain,msg:'POL-2013-1409',deny,status:403,log,t:none,t:urlDecodeUni,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "/wp-admin/admin-ajax\.php" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2013-3478
# CVSS: 7.5
# Publish: 2014-03-05T16:37:00
# SQL injection vulnerability in Apptha WordPress Video Gallery 2.0, 1.6, and earlier for WordPress allows remote attackers to execute arbitrary SQL commands via the playid parameter to index.php. Based on information provided in the reference CVE-2013-3478 is being processed as a SQL injection vulnerability.
SecRule ARGS:playid "@rx \D" \
	"id:66601175,chain,msg:'POL-2013-3478',deny,status:403,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_URI "index\.php" \
	"chain"
SecRule ARGS_NAMES "page_i" "


# CVE: CVE-2013-1759
# CVSS: 4.3
# Publish: 2014-03-14T14:55:00
# Cross-site scripting (XSS) vulnerability in the Responsive Logo Slideshow plugin for WordPress allows remote attackers to inject arbitrary web script or HTML via the "URL and Image" field.
SecRule REQUEST_METHOD "@streq POST" \
	"id:66601176,chain,msg:'POL-2013-1759',deny,status:403,log,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "/wp-admin/options\.php" \
	"chain"
SecRule ARGS:/^logo-img\d+$/|ARGS:/^logo-url\d+$/ "@rx \"" "


# CVE: CVE-2015-3647
# CVSS: 4.3
# Publish: 2015-05-21T20:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in wppa-ajax-front.php in the WP Photo Album Plus (aka WPPA) plugin before 6.1.3 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) comemail or (2) comname parameter in a wppa do-comment action.
SecRule REQUEST_FILENAME "@endsWith wp-photo-album-plus/wppa-ajax-front.php" \
	"id:66601177,chain,msg:'POL-2015-3647',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:wppa-action "@streq do-comment" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:comname|ARGS_POST:comemail|ARGS_POST:comment "@rx <" \
	"t:none,t:urlDecodeUni,t:htmlEntitydecode"


# CVE: CVE-2015-2321
# CVSS: 4.3
# Publish: 2015-08-13T14:59:00
# Cross-site scripting (XSS) vulnerability in the Job Manager plugin 0.7.22 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the email field.
SecRule ARGS_GET:j "@ge 1" \
	"id:66601178,chain,msg:'POL-2015-2321',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:jobman-apply "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:jobman-field-4 "@rx \'" \
	"chain,t:none,t:urlDecodeUni"
SecRule ARGS_GET:page_id "@ge 1" \
	"t:none"


# CVE: CVE-2015-4018
# CVSS: 6.5
# Publish: 2015-05-21T20:59:00
# SQL injection vulnerability in feedwordpresssyndicationpage.class.php in the FeedWordPress plugin before 2015.0514 for WordPress allows remote authenticated users to execute arbitrary SQL commands via the link_ids[] parameter in an Update action in the syndication.php page to wp-admin/admin.php.
SecRule ARGS_GET:page "@streq feedwordpress/syndication.php" \
	"id:66601179,chain,msg:'POL-2015-4018',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:link_ids[] "@rx \D" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-3301
# CVSS: 4
# Publish: 2015-05-14T14:59:00
# Directory traversal vulnerability in the TheCartPress eCommerce Shopping Cart (aka The Professional WordPress eCommerce Plugin) plugin for WordPress before 1.3.9.3 allows remote administrators to read arbitrary files via a .. (dot dot) in the tcp_box_path parameter in the checkout_editor_settings page to wp-admin/admin.php.
SecRule ARGS_GET:page "@streq checkout_editor_settings" \
	"id:66601180,chain,msg:'POL-2015-3301',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:tcp_box_path "\.\./" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-5461
# CVSS: 6.4
# Publish: 2015-07-08T16:59:00
# Open redirect vulnerability in the Redirect function in stageshow_redirect.php in the StageShow plugin before 5.0.9 for WordPress allows remote attackers to redirect users to arbitrary web sites and conduct phishing attacks via a URL in the url parameter. <a href="http://cwe.mitre.org/data/definitions/601.html">CWE-601: URL Redirection to Untrusted Site ('Open Redirect')</a>
SecRule REQUEST_FILENAME "@endsWith stageshow_redirect.php" \
	"id:66601181,chain,msg:'POL-2015-5461',phase:1,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule &ARGS_GET:url "@ge 1" "


# CVE: CVE-2015-4066
# CVSS: 6.5
# Publish: 2015-05-27T18:59:00
# Multiple SQL injection vulnerabilities in admin/handlers.php in the GigPress plugin before 2.3.9 for WordPress allow remote authenticated users to execute arbitrary SQL commands via the (1) show_artist_id or (2) show_venue_id parameter in an add action in the gigpress.php page to wp-admin/admin.php.
SecRule ARGS_GET:page "@streq gigpress/gigpress.php" \
	"id:66601182,chain,msg:'POL-2015-4066',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:show_artist_id|ARGS_POST:show_venue_id "@rx \D" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"t:none,t:lowercase"


# CVE: CVE-2014-3123
# CVSS: 2.1
# Publish: 2014-05-08T14:29:00
# Cross-site scripting (XSS) vulnerability in admin/manage-images.php in the NextCellent Gallery plugin before 1.19.18 for WordPress allows remote authenticated users with the NextGEN Upload images, NextGEN Manage gallery, or NextGEN Manage others gallery permission to inject arbitrary web script or HTML via the "Alt & Title Text" field.
SecRule ARGS:/alttext/ "@rx \"" \
	"id:66601183,chain,msg:'POL-2014-3123',phase:2,deny,status:403,log,t:none,t:htmlEntityDecode,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:page "manage-images" \
	"chain"
SecRule REQUEST_FILENAME "/wp-admin/admin\.php" "


# CVE: CVE-2013-2695
# CVSS: 4.3
# Publish: 2014-03-28T15:55:00
# Cross-site scripting (XSS) vulnerability in invite.php in the WP Symposium plugin before 13.04 for WordPress allows remote attackers to inject arbitrary web script or HTML via the u parameter.
SecRule REQUEST_URI "@contains wp-content/plugins/wp-symposium/invite.php" \
	"id:66601184,chain,msg:'POL-2013-2695',deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule &ARGS:u "@gt 0" "


# CVE: CVE-2015-3325
# CVSS: 7.5
# Publish: 2015-05-15T18:59:00
# SQL injection vulnerability in forum.php in the WP Symposium plugin before 15.4 for WordPress allows remote attackers to execute arbitrary SQL commands via the show parameter in the QUERY_STRING to the default URI.
SecRule ARGS_GET:cid "@ge 1" \
	"id:66601185,chain,msg:'POL-2015-3325',phase:1,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:show "@rx \D" \
	"chain,t:none"
SecRule ARGS_GET:page_id "@ge 1" \
	"t:none"


# CVE: CVE-2015-4616
# CVSS: 5
# Publish: 2015-07-08T16:59:00
# Directory traversal vulnerability in includes/MapPinImageSave.php in the Easy2Map plugin before 1.2.5 for WordPress allows remote attackers to create arbitrary files via a .. (dot dot) in the map_id parameter.
SecRule ARGS_GET:page "@streq easy2map" \
	"id:66601186,chain,msg:'POL-2015-4616',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:map_id "@rx \.\./" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-1055
# CVSS: 7.5
# Publish: 2015-01-16T15:59:00
# SQL injection vulnerability in the Photo Gallery plugin 1.2.7 for WordPress allows remote attackers to execute arbitrary SQL commands via the order_by parameter in a GalleryBox action to wp-admin/admin-ajax.php.
SecRule ARGS_GET:order_by "!@within asc desc" \
	"id:66601187,chain,msg:'POL-2015-1055',phase:2,deny,status:403,log,t:none,t:removeWhitespace,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:action "@streq gallerybox" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith admin-ajax.php" \
	"t:none,t:lowercase"


# CVE: CVE-2016-1000126
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin admin-font-editor v1.8
SecRule ARGS_GET:size "@contains <" \
	"id:66601188,chain,msg:'POL-2016-1000126',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith admin-font-editor/css.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2016-1000155
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin wpsolr-search-engine v7.6
SecRule REQUEST_FILENAME "@endsWith classes/extensions/managed-solr-servers/templates/template-my-accounts.php" \
	"id:66601189,chain,msg:'POL-2016-1000155',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page|ARGS_GET:tab "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4542
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in redirect.php in the Ooorl plugin for WordPress allows remote attackers to inject arbitrary web script or HTML via the url parameter.
SecRule ARGS_GET:url "@contains >" \
	"id:66601190,chain,msg:'POL-2014-4542',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_COOKIES_NAMES "@contains wordpress" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith redirect.php" \
	"t:none,t:lowercase"


# CVE: CVE-2016-1000130
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin e-search v1.0
SecRule TX:WordPress "@eq 1" \
	"id:66601191,chain,msg:'POL-2016-1000130',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith /tmpl/title_az.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule ARGS_GET:title_az "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-1000001
# CVSS: 5
# Publish: 2016-10-06T14:59:00
# Remote file upload vulnerability in fast-image-adder v1.1 Wordpress plugin
SecRule REQUEST_BASENAME "@streq fast-image-adder-uploader.php" \
	"id:66601192,chain,msg:'POL-2015-1000001',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:url "!@rx .(?:p(?:c[123ftx]|[abp]m|n[gms]|s[bdp]|x[mr]?|d[dn]|g[fm]|ict)|c(?:[ip]t|d[5r]|u[rt]|gm|mx|r2)|j(?:p(?:[2s]|e?g)|fif|ng|xr)|e(?:(?:xi|m)f|2d|cw|gt|ps)|s(?:[ix]d|ct|gi|tl|un|vg)|i(?:c(?:ns|o)|nta?|ff)|x(?:[bp]m|3d|ar|cf)|a(?:mf|rt|se|wg|i)|r(?:a[sw]|gba?|le)|d(?:jvu|ds|ib|xf)|m(?:iff|ax|ng|sp)|v(?:[2n]d|rml|tf)|w(?:(?:eb|d)p|mf)|g(?:[ir]f|br|pl)|b(?:[lm]p|w)|n(?:itf|rrd)|t(?:if?f|ga)|l(?:iff|bm)|o(?:dg|ta)|PI[123]|3dv|hdp|qfx|fs)$" \
	"t:none,t:lowercase"


# CVE: CVE-2016-1000129
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin defa-online-image-protector v3.3
SecRule ARGS_GET:r "@contains \"" \
	"id:66601193,chain,msg:'POL-2016-1000129',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith defa-online-image-protector/redirect.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"

SecRule ARGS_GET:page "@contains \"" \
	"id:66601194,chain,msg:'POL-2016-1000129',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith admin-recipes.php" \
	"t:none,t:lowercase"


# CVE: CVE-2016-1000005
# CVSS: undefined
# Publish: 
# 
SecRule ARGS_GET:fileName "@contains .." \
	"id:66601195,chain,msg:'POL-2016-1000005',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith downloadpdffile.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-7377
# CVSS: 4.3
# Publish: 2015-10-16T20:59:00
# Cross-site scripting (XSS) vulnerability in pie-register/pie-register.php in the Pie Register plugin before 2.0.19 for WordPress allows remote attackers to inject arbitrary web script or HTML via the invitaion_code parameter in a pie-register page to the default URI.
SecRule ARGS_GET:page "@streq pie-register" \
	"id:66601196,chain,msg:'POL-2015-7377',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule &ARGS_GET:show_dash_widget "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:invitaion_code "@rx <" \
	"t:none,t:base64Decode"


# CVE: CVE-2015-5468
# CVSS: 5
# Publish: 2017-05-23T04:29:00
# Directory traversal vulnerability in the WP e-Commerce Shop Styling plugin before 2.6 for WordPress allows remote attackers to read arbitrary files via a .. (dot dot) in the filename parameter to includes/download.php.
SecRule REQUEST_FILENAME "@endsWith /includes/download.php" \
	"id:66601197,chain,msg:'POL-2015-5468',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:filename "@contains /" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:filename "!@endsWith .pdf" \
	"t:none,t:lowercase,t:urlDecodeUni"


# CVE: CVE-2015-7682
# CVSS: 6.5
# Publish: 2015-10-16T20:59:00
# Multiple SQL injection vulnerabilities in pie-register/pie-register.php in the Pie Register plugin before 2.0.19 for WordPress allow remote administrators to execute arbitrary SQL commands via the (1) select_invitaion_code_bulk_option or (2) invi_del_id parameter in the pie-invitation-codes page to wp-admin/admin.php.
SecRule ARGS_GET:page "@streq pie-invitation-codes" \
	"id:66601198,chain,msg:'POL-2015-7682',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:select_invitaion_code_bulk_option|ARGS_POST:invi_del_id "@rx \D" \
	"t:none"


# CVE: CVE-2015-7683
# CVSS: 4
# Publish: 2015-10-16T20:59:00
# Absolute path traversal vulnerability in Font.php in the Font plugin before 7.5.1 for WordPress allows remote administrators to read arbitrary files via a full pathname in the url parameter to AjaxProxy.php.
SecRule REQUEST_FILENAME "@endsWith ajaxproxy.php" \
	"id:66601199,chain,msg:'POL-2015-7683',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@streq cross_domain_request" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:url "@beginsWith /" \
	"t:none,t:urlDecodeUni,t:removeWhitespace"


# CVE: CVE-2015-7235
# CVSS: 7.5
# Publish: 2015-09-17T16:59:00
# Multiple SQL injection vulnerabilities in dex_reservations.php in the CP Reservation Calendar plugin before 1.1.7 for WordPress allow remote attackers to execute arbitrary SQL commands via the (1) id parameter in a dex_reservations_calendar_load2 action or (2) dex_item parameter in a dex_reservations_check_posted_data action in a request to the default URI.
SecRule ARGS_GET:dex_reservations_calendar_load2 "@eq 1" \
	"id:66601200,chain,msg:'POL-2015-7235',phase:2,deny,status:403,log,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:id "!@streq Rcalender1" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_BASENAME "@streq admin.php" \
	"id:66601201,chain,msg:'POL-2015-7235',deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:dex_item "@rx \D" \
	"t:none"


# CVE: CVE-2015-4617
# CVSS: 5
# Publish: 2019-02-15T21:29:00
# Vulnerability in Easy2map-photos WordPress Plugin v1.09 MapPinImageUpload.php and MapPinIconSave.php allows path traversal when specifying file names creating files outside of the upload directory.
SecRule REQUEST_FILENAME "@endsWith wp-admin/admin-ajax.php" \
	"id:66601202,chain,msg:'POL-2015-4617',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains .." \
	"t:none"


# CVE: CVE-2015-4615
# CVSS: 7.5
# Publish: 2019-02-15T21:29:00
# Vulnerability in Easy2map-photos WordPress Plugin v1.09 allows SQL Injection via unsanitized mapTemplateName, mapName, mapSettingsXML, parentCSSXML, photoCSSXML, mapCSSXML, mapHTML,mapID variables
SecRule REQUEST_FILENAME "@endsWith admin-ajax.php" \
	"id:66601203,chain,msg:'POL-2015-4615',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:mapName "@rx \'" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-0894
# CVSS: 6
# Publish: 2015-03-07T02:59:00
# SQL injection vulnerability in the All In One WP Security & Firewall plugin before 3.8.8 for WordPress allows remote attackers to execute arbitrary SQL commands via unspecified vectors.
SecRule ARGS_GET:page "@pm aiowpsec aiowpsec_userlogin aiowpsec_firewall aiowpsec_spam" \
	"id:66601204,chain,msg:'POL-2015-0894',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:orderby "@rx \W" \
	"t:none"


# CVE: CVE-2014-6312
# CVSS: 4.3
# Publish: 2014-10-15T14:55:00
# Cross-site request forgery (CSRF) vulnerability in the Login Widget With Shortcode (login-sidebar-widget) plugin before 3.2.1 for WordPress allows remote attackers to hijack the authentication of administrators for requests that conduct cross-site scripting (XSS) attacks via the custom_style_afo parameter on the login_widget_afo page to wp-admin/options-general.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601205,chain,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@streq login_widget_afo" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_GET "@eq 1" \
	"setvar:'SESSION.login_widget=1',expirevar:'SESSION.login_widget=300'"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601206,chain,msg:'POL-2014-6312',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@streq login_widget_afo" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:custom_style_afo "@rx \"" \
	"chain,t:none,t:urlDecodeUni"
SecRule &SESSION:login_widget "!@eq 1" \
	"t:none"

SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"id:66601207,chain,msg:'POL-2014-6312',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq login_widget_afo" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:custom_style_afo "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-4064
# CVSS: 6.5
# Publish: 2015-05-27T18:59:00
# SQL injection vulnerability in modules/module.ab-testing.php in the Landing Pages plugin before 1.8.5 for WordPress allows remote authenticated users to execute arbitrary SQL commands via the post parameter in an edit delete-variation action to wp-admin/post.php.
SecRule ARGS_GET:action "@streq edit" \
	"id:66601208,chain,msg:'POL-2015-4064',phase:1,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:lp-variation-id "@ge 0" \
	"chain,t:none,t:urlDecodeUni"
SecRule ARGS_GET:ab-action "@streq delete-variation" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:post "@rx \D" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith post.php" \
	"t:none,t:lowercase"


# CVE: CVE-2014-100003
# CVSS: 7.5
# Publish: 2015-01-13T11:59:00
# SQL injection vulnerability in includes/ym-download_functions.include.php in the Code Futures YourMembers plugin for WordPress allows remote attackers to execute arbitrary SQL commands via the ym_download_id parameter to the default URI.
SecRule ARGS_GET:ym_download_id "\D" \
	"id:66601209,msg:'POL-2014-100003',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"


# CVE: CVE-2014-100022
# CVSS: 7.5
# Publish: 2015-01-13T15:59:00
# SQL injection vulnerability in question.php in the mTouch Quiz before 3.0.7 for WordPress allows remote attackers to execute arbitrary SQL commands via the quiz parameter to wp-admin/edit.php.
SecRule REQUEST_URI "@contains /edit.php" \
	"id:66601210,chain,msg:'POL-2014-100022',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@endsWith question.php" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_GET:quiz "@rx \D" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-10017
# CVSS: 7.5
# Publish: 2015-01-13T11:59:00
# Multiple SQL injection vulnerabilities in the Welcart e-Commerce plugin 1.3.12 for WordPress allow remote attackers to execute arbitrary SQL commands via the (1) changeSort or (2) switch parameter in the usces_itemedit page to wp-admin/admin.php.
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"id:66601211,chain,msg:'POL-2014-10017',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_COOKIES_NAMES "@contains wordpress" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@streq usces_itemedit" \
	"chain,t:none,t:lowercase"
SecRule ARGS:changeSort "!@pm item_name item_code" \
	"t:none"

SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"id:66601212,chain,msg:'POL-2014-10017',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_COOKIES_NAMES "@contains wordpress" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@streq usces_itemedit" \
	"chain,t:none,t:lowercase"
SecRule ARGS:switch "!@pm asc desc" \
	"t:none"


# CVE: CVE-2014-100023
# CVSS: 4.3
# Publish: 2015-01-13T15:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in question.php in the mTouch Quiz before 3.0.7 for WordPress allow remote attackers to inject arbitrary web script or HTML via the quiz parameter to wp-admin/edit.php.
SecRule REQUEST_FILENAME "@contains /edit.php" \
	"id:66601213,chain,msg:'POL-2014-100023',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains mtouch-quiz/question.php" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_GET:quiz "@rx \D" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-100001
# CVSS: 6.8
# Publish: 2015-01-13T11:59:00
# Cross-site request forgery (CSRF) vulnerability in the SEO Plugin LiveOptim plugin before 1.1.4-free for WordPress allows remote attackers to hijack the authentication of administrators for requests that change plugin settings via unspecified vectors.  NOTE: some of these details are obtained from third party information.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601214,chain,phase:2,pass,nolog,skip:1,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"chain,t:none"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@streq liveoptim" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:action "!@within modif-config mot-cle-enlever mot-cle-deplacer" \
	"setvar:'SESSION.liveoptim=1',expirevar:'SESSION.liveoptim=300',t:none,t:lowercase"

SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"id:66601215,chain,msg:'POL-2014-100001',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq liveoptim" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_session "@ge 1" \
	"chain,t:none"
SecRule &SESSION:liveoptim "!@ge 1" \
	"t:none"


# CVE: CVE-2014-7956
# CVSS: 4.3
# Publish: 2015-01-15T15:59:00
# Cross-site scripting (XSS) vulnerability in the Pods plugin before 2.5 for WordPress allows remote attackers to inject arbitrary web script or HTML via the id parameter in an edit action in the pods page to wp-admin/admin.php.
SecRule REQUEST_FILENAME "@contains admin.php" \
	"id:66601216,chain,msg:'POL-2014-7956',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq pods" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:action "@streq edit" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:id "@rx \D" \
	"t:none"


# CVE: CVE-2014-9443
# CVSS: 4.3
# Publish: 2015-01-02T19:59:00
# Cross-site scripting (XSS) vulnerability in the Relevanssi plugin before 3.3.8 for WordPress allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.
SecRule ARGS_GET:page "@contains relevanssi/relevanssi.php" \
	"id:66601217,chain,msg:'POL-2014-9443',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:addstopword "@rx <|\'|\"" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntitydecode"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"t:none,t:lowercase"


# CVE: CVE-2014-4580
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in blipbot.ajax.php in the WP BlipBot plugin 3.0.9 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the BlipBotID parameter.
SecRule REQUEST_FILENAME "@endsWith blipbot.ajax.php" \
	"id:66601218,chain,msg:'POL-2014-4580',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:BlipBotID "@rx [^\w\-\.:]" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,multiMatch"


# CVE: CVE-2014-7152
# CVSS: 4.3
# Publish: 2014-09-26T21:55:00
# Cross-site scripting (XSS) vulnerability in the Easy MailChimp Forms plugin 3.0 through 5.0.6 for WordPress allows remote attackers to inject arbitrary web script or HTML via the update_options action to wp-admin/admin-ajax.php.
SecRule REQUEST_FILENAME "@endsWith wp-admin/admin-ajax.php" \
	"id:66601219,chain,msg:'POL-2014-7152',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@streq yks_mailchimp_form" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:form_action "@streq update_options" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:form_data "@contains '" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-2807
# CVSS: 4.3
# Publish: 2015-09-01T14:59:00
# Cross-site scripting (XSS) vulnerability in js/window.php in the Navis DocumentCloud plugin before 0.1.1 for WordPress allows remote attackers to inject arbitrary web script or HTML via the wpbase parameter.
SecRule REQUEST_FILENAME "@endsWith /js/window.php" \
	"id:66601220,chain,msg:'POL-2015-2807',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:wpbase "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-5485
# CVSS: 4.3
# Publish: 2015-08-18T15:59:00
# Cross-site scripting (XSS) vulnerability in the Event Import page (import-eventbrite-events.php) in the Modern Tribe Eventbrite Tickets plugin before 3.10.2 for WordPress allows remote attackers to inject arbitrary web script or HTML via the "error" parameter to wp-admin/edit.php.
SecRule ARGS_GET:post_type "@streq tribe_events" \
	"id:66601221,chain,msg:'POL-2015-5485',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains eventbrite" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:error "@contains <" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith edit.php" \
	"t:none,t:lowercase"


# CVE: CVE-2017-10991
# CVSS: 4.3
# Publish: 2017-07-07T14:29:00
# The WP Statistics plugin through 12.0.9 for WordPress has XSS in the rangestart and rangeend parameters on the wps_referrers_page page.
SecRule TX:WordPress "@eq 1" \
	"id:66601222,chain,msg:'POL-2017-10991',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@contains /wp-admin/admin.php" \
	"chain,t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"
SecRule ARGS_GET:page "@streq wps_referrers_page" \
	"chain,t:none"
SecRule ARGS_GET:rangestart|ARGS_GET:rangeend "@contains \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-2222
# CVSS: 4.3
# Publish: 2017-07-07T13:29:00
# Cross-site scripting vulnerability in WP-Members prior to version 3.1.8 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:WordPress "@eq 1" \
	"id:66601223,chain,msg:'POL-2017-2222',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:activated "@contains <" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith /wp-admin/users.php" \
	"t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"


# CVE: CVE-2017-9419
# CVSS: 4.3
# Publish: 2017-06-15T19:29:00
# Cross-site scripting (XSS) vulnerability in the Webhammer WP Custom Fields Search plugin 0.3.28 for WordPress allows remote attackers to inject arbitrary JavaScript via the cs-all-0 parameter.
SecRule ARGS_GET:cs-all-0 "@contains '" \
	"id:66601224,chain,msg:'POL-2017-9419',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:search-class "@streq db_customsearch_widget-db_customsearch_widget" \
	"t:none,t:lowercase"


# CVE: CVE-2017-8100
# CVSS: 4.3
# Publish: 2017-04-24T18:59:00
# There is CSRF in the CopySafe Web Protection plugin before 2.6 for WordPress, allowing attackers to change plugin settings.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601225,chain,phase:2,pass,nolog,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq wpcsw_settings" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.wp_wpcsw=1',expirevar:'SESSION.wp_wpcsw=300',t:none,t:lowercase"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601226,chain,msg:'POL-2017-8100',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq wpcsw_settings" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_wpcsw "!@eq 1" \
	"t:none"


# CVE: CVE-2013-7187
# CVSS: 7.5
# Publish: 2013-12-20T23:55:00
# SQL injection vulnerability in form.php in the FormCraft plugin 1.3.7 and earlier for WordPress allows remote attackers to execute arbitrary SQL commands via the id parameter.
SecRule REQUEST_FILENAME "@endsWith /wp-content/plugins/formcraft/form.php" \
	"id:66601227,chain,msg:'POL-2013-7187',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:id "@rx \D" \
	"t:none"


# CVE: CVE-2015-4337
# CVSS: 3.5
# Publish: 2015-06-17T18:59:00
# Cross-site scripting (XSS) vulnerability in the XCloner plugin 3.1.2 for WordPress allows remote authenticated users to inject arbitrary web script or HTML via the excl_manual parameter in the xcloner_show page to wpadmin/plugins.php.
SecRule ARGS_GET:option "@streq com_cloner" \
	"id:66601228,chain,msg:'POL-2015-4337',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:action "@streq json_return" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:excl_manual "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:page "@streq xcloner_show" \
	"id:66601229,chain,msg:'POL-2015-4337',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:excl_manual "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-1852
# CVSS: 7.5
# Publish: 2014-02-05T15:10:00
# SQL injection vulnerability in leaguemanager.php in the LeagueManager plugin before 3.8.1 for WordPress allows remote attackers to execute arbitrary SQL commands via the league_id parameter in the leaguemanager-export page to wp-admin/admin.php.
SecRule TX:WordPress "@eq 1" \
	"id:66601230,chain,msg:'POL-2013-1852',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq leaguemanager-export" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith /wp-admin/admin.php" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:league_id "@rx \D" \
	"t:none"


# CVE: CVE-2015-3440
# CVSS: 4.3
# Publish: 2015-08-03T14:59:00
# Cross-site scripting (XSS) vulnerability in wp-includes/wp-db.php in WordPress before 4.2.1 allows remote attackers to inject arbitrary web script or HTML via a long comment that is improperly stored because of limitations on the MySQL TEXT data type.
SecRule ARGS:comment "@ge 65536" \
	"id:66601231,chain,msg:'POL-2015-3440',phase:2,deny,status:403,log,t:length,rev:4,severity:2,tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith wp-comments-post.php" \
	"t:none,t:lowercase"


# CVE: CVE-2014-4602
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in xencarousel-admin.js.php in the XEN Carousel plugin 0.12.2 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) path or (2) ajaxpath parameter.
SecRule REQUEST_FILENAME "@endsWith xencarousel-admin.js.php" \
	"id:66601232,chain,msg:'POL-2014-4602',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:removeWhitespace,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:ajaxpath|ARGS_GET:path "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,multiMatch"


# CVE: CVE-2014-4601
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in wu-ratepost.php in the Wu-Rating plugin 1.0 12319 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the v parameter.
SecRule REQUEST_FILENAME "@endsWith wu-ratepost.php" \
	"id:66601233,chain,msg:'POL-2014-4601',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:v "@rx \D" "


# CVE: CVE-2014-4944
# CVSS: 6.5
# Publish: 2014-07-14T14:55:00
# Multiple SQL injection vulnerabilities in inc/bsk-pdf-dashboard.php in the BSK PDF Manager plugin 1.3.2 for WordPress allow remote authenticated users to execute arbitrary SQL commands via the (1) categoryid or (2) pdfid parameter to wp-admin/admin.php.
SecRule TX:WordPress "@eq 1" \
	"id:66601234,chain,msg:'POL-2014-4944',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq bsk-pdf-manager" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:view "@streq edit" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:categoryid|ARGS_GET:pdfid "@rx \D" \
	"t:none"


# CVE: CVE-2015-3440
# CVSS: 4.3
# Publish: 2015-08-03T14:59:00
# Cross-site scripting (XSS) vulnerability in wp-includes/wp-db.php in WordPress before 4.2.1 allows remote attackers to inject arbitrary web script or HTML via a long comment that is improperly stored because of limitations on the MySQL TEXT data type.
SecRule ARGS:content "@ge 65536" \
	"id:66601235,chain,msg:'POL-2015-3440',phase:2,deny,status:403,log,t:length,rev:4,severity:2,tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith comment.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_COOKIES_NAMES "@contains wordpress_" \
	"t:none"


# CVE: CVE-2014-4593
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in wp-plugins-net/index.php in the WP Plugin Manager (wppm) plugin 1.6.4.b and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the filter parameter.
SecRule REQUEST_FILENAME "@endsWith wp-plugins-net/index.php" \
	"id:66601236,chain,msg:'POL-2014-4593',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:filter "@contains <" \
	"t:none,t:urlDecodeUni,multiMatch"


# CVE: CVE-2014-4591
# CVSS: 4.3
# Publish: 2014-07-02T20:55:00
# Cross-site scripting (XSS) vulnerability in picasa_upload.php in the WP-Picasa-Image plugin 1.0 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the post_id parameter.
SecRule REQUEST_FILENAME "@endsWith picasa_upload.php" \
	"id:66601237,chain,msg:'POL-2014-4591',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:post_id "@rx \D" "


# CVE: CVE-2014-4586
# CVSS: 4.3
# Publish: 2014-10-27T22:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in the wp-football plugin 1.1 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the league parameter to (1) football_classification.php, (2) football_criteria.php, (3) templates/template_default_preview.php, or (4) templates/template_worldCup_preview.php; the (5) f parameter to football-functions.php; the id parameter in an "action" action to (6) football_groups_list.php, (7) football_matches_list.php, (8) football_matches_phase.php, or (9) football_phases_list.php; or the (10) id_league parameter in a delete action to football_matches_load.php.
# SecRule REQUEST_FILENAME "@pm football_criteria.php template_worldCup_preview.php template_default_preview.php football_classification.php" \
# 	"id:66601238,chain,msg:'POL-2014-4586',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
# SecRule ARGS_GET:league "@pm \" <" \
# 	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

# SecRule REQUEST_FILENAME "@pm football_matches_list.php football_groups_list.php football_matches_phase.php football_phases_list.php football_matches_load.php" \
# 	"id:66601239,chain,msg:'POL-2014-4586',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
# SecRule ARGS_GET:id|ARGS_GET:id_league "@rx \D" \
# 	"t:none"

# SecRule REQUEST_FILENAME "@contains football-functions.php" \
# 	"id:66601240,chain,msg:'POL-2014-4586',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
# SecRule ARGS_GET:f "@contains <" \
# 	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4543
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in payper/payper.php in the Pay Per Media Player plugin 1.24 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) fcolor, (2) links, (3) stitle, (4) height, (5) width, (6) host, (7) bcolor, (8) msg, (9) id, or (10) size parameter.
SecRule REQUEST_FILENAME "@endsWith payper.php" \
	"id:66601241,chain,msg:'POL-2014-4543',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:fcolor|ARGS_GET:links|ARGS_GET:stitle|ARGS_GET:height|ARGS_GET:width|ARGS_GET:host|ARGS_GET:bcolor|ARGS_GET:msg|ARGS_GET:id|ARGS_GET:size "@contains '" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4538
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Cross-site scripting (XSS) vulnerability in process.php in the Malware Finder plugin 1.1 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the query parameter.
SecRule REQUEST_FILENAME "@contains process.php" \
	"id:66601242,chain,msg:'POL-2014-4538',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:query "@contains >" \
	"chain,t:none,t:htmlEntityDecode,t:urlDecodeUni"
SecRule &SESSION:wp_session "@ge 1" \
	"t:none"


# CVE: CVE-2014-4537
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in inpage.tpl.php in the Keyword Strategy Internal Links plugin 2.0 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the (1) sort, (2) search, or (3) dir parameter.
SecRule REQUEST_FILENAME "@contains inpage.tpl.php" \
	"id:66601243,chain,msg:'POL-2014-4537',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,multiMatch,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:dir|ARGS_GET:search|ARGS_GET:sort "@contains >" \
	"chain,t:none,t:htmlEntityDecode,t:urlDecodeUni"
SecRule &SESSION:wp_session "@ge 1" \
	"t:none"


# CVE: CVE-2014-5344
# CVSS: 4.3
# Publish: 2014-08-19T18:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Mobiloud (mobiloud-mobile-app-plugin) plugin before 2.3.8 for WordPress allow remote attackers to inject arbitrary web script or HTML via unspecified vectors.  NOTE: some of these details are obtained from third party information.
SecRule REQUEST_FILENAME "@contains mobiloud-mobile-app-plugin/post/post.php" \
	"id:66601244,chain,msg:'POL-2014-5344',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:post_id "@rx \D" "


# CVE: CVE-2014-5368
# CVSS: 5
# Publish: 2014-08-22T14:55:00
# Directory traversal vulnerability in the file_get_contents function in downloadfiles/download.php in the WP Content Source Control (wp-source-control) plugin 3.0.0 and earlier for WordPress allows remote attackers to read arbitrary files via a .. (dot dot) in the path parameter.
SecRule REQUEST_FILENAME "@endswith wp-content/plugins/wp-source-control/downloadfiles/download.php" \
	"id:66601245,chain,msg:'POL-2014-5368',phase:1,deny,status:403,t:none,t:urlDecodeUni,t:lowercase,t:normalizePath,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:path "@contains ../" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:normalizePath"


# CVE: CVE-2014-4546
# CVSS: 4.3
# Publish: 2014-07-02T20:55:00
# Cross-site scripting (XSS) vulnerability in book_ajax.php in the Rezgo plugin 1.4.2 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the response parameter.
SecRule REQUEST_FILENAME "@endsWith book_ajax.php" \
	"id:66601246,chain,msg:'POL-2014-4546',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:response "@contains '" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4588
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in tpls/editmedia.php in the Hot Files: File Sharing and Download Manager (wphotfiles) plugin 1.0.0 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the mediaid parameter.
SecRule REQUEST_FILENAME "@endsWith editmedia.php" \
	"id:66601247,chain,msg:'POL-2014-4588',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:mediaid "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-1000010
# CVSS: 5
# Publish: 2016-10-06T14:59:00
# Remote file download in simple-image-manipulator v1.0 wordpress plugin
SecRule ARGS_GET:filepath "@beginsWith /" \
	"id:66601248,chain,msg:'POL-2015-1000010',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith simple-image-manipulator/controller/download.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2015-0920
# CVSS: 6.8
# Publish: 2015-01-08T15:59:00
# Cross-site request forgery (CSRF) vulnerability in the Banner Effect Header plugin 1.2.6 for WordPress allows remote attackers to hijack the authentication of administrators for requests that conduct cross-site scripting (XSS) attacks via the banner_effect_email parameter in the BannerEffectOptions page to wp-admin/options-general.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601249,chain,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq bannereffectoptions" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.wp_banner_effect=1',expirevar:'SESSION.wp_banner_effect=300',t:none,t:lowercase"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601250,chain,msg:'POL-2015-0920',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq bannereffectoptions" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_banner_effect "!@eq 1" \
	"t:none"


# CVE: CVE-2014-9453
# CVSS: 4.3
# Publish: 2015-01-02T20:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in simple-visitor-stat.php in the Simple visitor stat plugin for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) HTTP User-Agent or (2) HTTP Referer header.
SecRule REQUEST_FILENAME "@endsWith admin-ajax.php" \
	"id:66601251,chain,msg:'POL-2014-9453',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_COOKIES_NAMES "@rx ^wordpress_[a-z0-9]{32}" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:action "@contains smpvstat" \
	"chain,t:none"
SecRule REQUEST_HEADERS:User-Agent|REQUEST_HEADERS:Referer "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-2755
# CVSS: 6.8
# Publish: 2015-04-01T14:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the AB Google Map Travel (AB-MAP) plugin before 4.0 for WordPress allow remote attackers to hijack the authentication of administrators for requests that conduct cross-site scripting (XSS) attacks via the (1) lat (Latitude), (2) long (Longitude), (3) map_width, (4) map_height, or (5) zoom (Map Zoom) parameter in the ab_map_options page to wp-admin/admin.php.
SecRule ARGS_GET:page "@streq ab_map_options" \
	"id:66601252,chain,msg:'POL-2015-2755',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:lat|ARGS:long|ARGS:map_width|ARGS:map_height|ARGS:zoom "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-2089
# CVSS: 6.8
# Publish: 2015-02-26T15:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the CrossSlide jQuery (crossslide-jquery-plugin-for-wordpress) plugin 2.0.5 for WordPress allow remote attackers to hijack the authentication of administrators for requests that (1) change plugin settings or conduct cross-site scripting (XSS) attacks via the (2) csj_width, (3) csj_height, (4) csj_sleep, (5) csj_fade, or (6) upload_image parameter in the thisismyurl_csj.php page to wp-admin/options-general.php.
SecRule ARGS_GET:page "@streq thisismyurl_csj.php" \
	"id:66601253,chain,msg:'POL-2015-2089',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:csj_width|ARGS_POST:csj_height|ARGS_POST:csj_sleep|ARGS_POST:csj_fade|ARGS_POST:upload_image "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-1000128
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin anti-plagiarism v3.60
SecRule REQUEST_FILENAME "@endsWith anti-plagiarism/js.php" \
	"id:66601254,chain,msg:'POL-2016-1000128',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:m "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4557
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in test-plugin.php in the Swipe Checkout for Jigoshop (swipe-hq-checkout-for-jigoshop) plugin 3.1.0 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the api_url parameter.
SecRule REQUEST_FILENAME "@endsWith test-plugin.php" \
	"id:66601255,chain,msg:'POL-2014-4557',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:removeWhitespace,t:htmlEntityDecode,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:api_url "@contains >" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"


# CVE: CVE-2014-4556
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Cross-site scripting (XSS) vulnerability in test-plugin.php in the Swipe Checkout for eShop plugin 3.7.0 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the api_url parameter.
SecRule REQUEST_FILENAME "@endsWith test-plugin.php" \
	"id:66601256,chain,msg:'POL-2014-4556',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:removeWhitespace,t:htmlEntityDecode,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:api_url "@contains >" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"


# CVE: CVE-2014-9460
# CVSS: 6.8
# Publish: 2015-01-02T20:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the WP-ViperGB plugin before 1.3.11 for WordPress allow remote attackers to hijack the authentication of administrators for requests that (1) change plugin settings via unspecified vectors or conduct cross-site scripting (XSS) attacks via the (2) vgb_page or (3) vgb_items_per_pg parameter in the wp-vipergb page to wp-admin/options-general.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601257,chain,phase:2,pass,nolog,skip:1,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq wp-vipergb" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.wp_vipergb=1',expirevar:'SESSION.wp_vipergb=300',t:none,t:lowercase"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601258,chain,msg:'POL-2014-9460',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq wp-vipergb" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_vipergb "!@eq 1" \
	"t:none"

SecRule ARGS_GET:page "@streq wp-vipergb" \
	"id:66601259,chain,msg:'POL-2014-9460',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:vgb_page|ARGS_POST:vgb_items_per_pg "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4554
# CVSS: 4.3
# Publish: 2014-07-02T20:55:00
# Cross-site scripting (XSS) vulnerability in templates/download.php in the SS Downloads plugin before 1.5 for WordPress allows remote attackers to inject arbitrary web script or HTML via the title parameter.
SecRule REQUEST_FILENAME "@endsWith templates/download.php" \
	"id:66601260,chain,msg:'POL-2014-4554',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:removeWhitespace,t:htmlEntityDecode,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:title "@contains >" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"


# CVE: CVE-2014-4552
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in library/includes/payment/paypalexpress/DoDirectPayment.php in the Spotlight (spotlightyour) plugin 4.7 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the paymentType parameter.
SecRule ARGS_GET:paymentType "@rx \">" \
	"id:66601261,chain,msg:'POL-2014-4552',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@contains library/includes/payment/paypalexpress/dodirectpayment.php" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:normalizePath,t:lowercase"


# CVE: CVE-2014-9396
# CVSS: 6.8
# Publish: 2014-12-31T21:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the SimpleFlickr plugin 3.0.3 and earlier for WordPress allow remote attackers to hijack the authentication of administrators for requests that conduct cross-site scripting (XSS) attacks via the (1) simpleflickr_width, (2) simpleflickr_bgcolor, or (3) simpleflickr_xmldatapath parameter in the simpleFlickr.php page to wp-admin/options-general.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601262,chain,phase:2,pass,nolog,skip:1,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains simpleflickr" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_GET "@eq 1" \
	"setvar:'SESSION.wp_simpleflickr=1',expirevar:'SESSION.wp_simpleflickr=300',t:none"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601263,chain,msg:'POL-2014-9396',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains simpleflickr" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_simpleflickr "!@eq 1" \
	"t:none"

SecRule ARGS_GET:page "@contains simpleflickr" \
	"id:66601264,chain,msg:'POL-2014-9396',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:simpleflickr_width|ARGS_POST:simpleflickr_height|ARGS_POST:simpleflickr_bgcolor|ARGS_POST:simpleflickr_xmldatapath "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4589
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in uploader.php in the WP Silverlight Media Player (wp-media-player) plugin 0.8 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the post_id parameter.
SecRule REQUEST_FILENAME "@endsWith uploader.php" \
	"id:66601265,chain,msg:'POL-2014-4589',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,t:normalizePath,t:removeWhitespace,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:post_id "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-9339
# CVSS: 6.8
# Publish: 2014-12-19T15:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the SPNbabble plugin 1.4.1 and earlier for WordPress allow remote attackers to hijack the authentication of administrators for requests that conduct cross-site scripting (XSS) attacks via the (1) username or (2) password parameter in the spnbabble.php page to wp-admin/options-general.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601266,chain,phase:2,pass,nolog,skip:1,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains spnbabble" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.wp_spnbabble=1',expirevar:'SESSION.wp_spnbabble=300',t:none,t:lowercase"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601267,chain,msg:'POL-2014-9339',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains spnbabble" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_spnbabble "!@eq 1" \
	"t:none"

SecRule ARGS_GET:page "@contains spnbabble" \
	"id:66601268,chain,msg:'POL-2014-9339',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:username|ARGS_POST:password|ARGS_POST:blogname|ARGS_POST:postprefix "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-6965
# CVSS: 6.8
# Publish: 2015-09-16T14:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Contact Form Generator plugin 2.0.1 and earlier for WordPress allow remote attackers to hijack the authentication of administrators for requests that (1) create a field, (2) update a field, (3) delete a field, (4) create a form, (5) update a form, (6) delete a form, (7) create a template, (8) update a template, (9) delete a template, or (10) conduct cross-site scripting (XSS) attacks via a crafted request to the cfg_forms page in wp-admin/admin.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601269,chain,phase:2,pass,nolog,t:none,skip:1,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@pm cfg_forms cfg_fields cfg_templates" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.wp_cfg=1',expirevar:'SESSION.wp_cfg=300',t:none,t:lowercase"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601270,chain,msg:'POL-2015-6965',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@pm cfg_forms cfg_fields cfg_templates" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_cfg "!@eq 1" \
	"t:none"

SecRule ARGS_GET:page "@streq cfg_forms" \
	"id:66601271,chain,msg:'POL-2015-6965',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:holder "@pm forms templates" \
	"chain,t:none"
SecRule ARGS_POST "@rx <|\"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4845
# CVSS: 4.3
# Publish: 2014-07-10T14:55:00
# Cross-site scripting (XSS) vulnerability in the BannerMan plugin 0.2.4 for WordPress allows remote attackers to inject arbitrary web script or HTML via the bannerman_background parameter to wp-admin/options-general.php.
SecRule REQUEST_FILENAME "@contains wp-admin/options-general.php" \
	"id:66601272,chain,msg:'POL-2014-4845',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:removeWhitespace,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:bannerman_background "!@rx ^#?[0-9a-f]{3,6}$" \
	"t:none,t:lowercase"


# CVE: CVE-2014-8955
# CVSS: 4.3
# Publish: 2014-11-17T16:59:00
# Cross-site scripting (XSS) vulnerability in the Contact Form Clean and Simple (clean-and-simple-contact-form-by-meg-nicholas) plugin 4.4.0 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the cscf[name] parameter to contact-us/.
# SecRule &ARGS_POST:post-id "@ge 1" \
# 	"id:66601273,chain,msg:'POL-2014-8955',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
# SecRule ARGS_POST:cscf[name] "@pm \" <" \
# 	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-5481
# CVSS: 4.3
# Publish: 2015-08-18T17:59:00
# Cross-site scripting (XSS) vulnerability in forms/panels.php in the GD bbPress Attachments plugin before 2.3 for WordPress allows remote attackers to inject arbitrary web script or HTML via the tab parameter in the gdbbpress_attachments page to wp-admin/edit.php.
SecRule ARGS_GET:page "@contains gdbbpress_attachments" \
	"id:66601274,chain,msg:'POL-2015-5481',phase:1,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:tab "@rx \"" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith edit.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-5482
# CVSS: 4
# Publish: 2015-08-18T17:59:00
# Directory traversal vulnerability in the GD bbPress Attachments plugin before 2.3 for WordPress allows remote administrators to include and execute arbitrary local files via a .. (dot dot) in the tab parameter in the gdbbpress_attachments page to wp-admin/edit.php.
SecRule ARGS_GET:page "@contains gdbbpress_attachments" \
	"id:66601275,chain,msg:'POL-2015-5482',phase:1,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:tab "@contains .." \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith edit.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-5681
# CVSS: 7.5
# Publish: 2015-08-18T15:59:00
# Unrestricted file upload vulnerability in upload.php in the Powerplay Gallery plugin 3.3 for WordPress allows remote attackers to execute arbitrary code by uploading a file with an executable extension, then accessing it via a direct request to the file in *_uploadfolder/big/. <a href="http://cwe.mitre.org/data/definitions/434.html">CWE-434: Unrestricted Upload of File with Dangerous Type</a>
SecRule ARGS_GET:page "@contains power_play_manage" \
	"id:66601276,chain,msg:'POL-2015-5681',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@contains admin.php" \
	"chain,t:none,t:lowercase"
SecRule FILES_NAMES "album_img" \
	"chain,t:none,t:lowercase"
SecRule FILES "!@rx \.(?:jpe?g|gif|bmp|png)$" \
	"t:none,t:lowercase"


# CVE: CVE-2014-9098
# CVSS: 3.5
# Publish: 2014-11-26T15:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Apptha WordPress Video Gallery (contus-video-gallery) plugin 2.5, possibly before 2014-07-23, for WordPress allow remote authenticated users to inject arbitrary web script or HTML via the videoadssearchQuery parameter to (1) videoads/videoads.php, (2) video/video.php, or (3) playlist/playlist.php.
SecRule ARGS_GET:page "@pm video playlist videoads" \
	"id:66601277,chain,msg:'POL-2014-9098',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:page "@pm videos Playlists videoads" \
	"chain,t:none"
SecRule ARGS_POST:videosearchQuery|ARGS_POST:PlaylistssearchQuery|ARGS_POST:videoadssearchQuery "@rx <" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntitydecode"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"t:none,t:lowercase"


# CVE: CVE-2014-9119
# CVSS: 5
# Publish: 2014-12-31T22:59:00
# Directory traversal vulnerability in download.php in the DB Backup plugin 4.5 and earlier for Wordpress allows remote attackers to read arbitrary files via a .. (dot dot) in the file parameter.
SecRule REQUEST_FILENAME "@endsWith db-backup/download.php" \
	"id:66601278,chain,msg:'POL-2014-9119',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:file "@rx ^\/|\.\." \
	"t:none,t:urlDecodeUni,t:normalizePath"


# CVE: CVE-2015-1375
# CVSS: 7.5
# Publish: 2015-01-28T11:59:00
# pixabay-images.php in the Pixabay Images plugin before 2.4 for WordPress does not properly restrict access to the upload functionality, which allows remote attackers to write to arbitrary files.
SecRule &ARGS_POST:pixabay_upload "@ge 1" \
	"id:66601279,chain,msg:'POL-2015-1375',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:image_url "!@rx ^https?\:\/\/(www\.)?pixabay\.com\/.+\.(jpe?g|gif|png|bmp)" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2015-2292
# CVSS: 6.5
# Publish: 2015-03-17T15:59:00
# Multiple SQL injection vulnerabilities in admin/class-bulk-editor-list-table.php in the WordPress SEO by Yoast plugin before 1.5.7, 1.6.x before 1.6.4, and 1.7.x before 1.7.4 for WordPress allow remote authenticated users to execute arbitrary SQL commands via the (1) order_by or (2) order parameter in the wpseo_bulk-editor page to wp-admin/admin.php.  NOTE: this can be leveraged using CSRF to allow remote attackers to execute arbitrary SQL commands.
SecRule ARGS_GET:page "@streq wpseo_bulk-editor" \
	"id:66601280,chain,msg:'POL-2015-2292',phase:1,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:orderby "!@within post_title post_type post_date" \
	"t:none,t:removeWhitespace,t:lowercase"

SecRule ARGS_GET:page "@streq wpseo_bulk-editor" \
	"id:66601281,chain,msg:'POL-2015-2292',phase:1,deny,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:order "!@within desc asc" \
	"t:none,t:removeWhitespace,t:lowercase"


# CVE: CVE-2015-2293
# CVSS: 6.8
# Publish: 2015-03-17T15:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in admin/class-bulk-editor-list-table.php in the WordPress SEO by Yoast plugin before 1.5.7, 1.6.x before 1.6.4, and 1.7.x before 1.7.4 for WordPress allow remote attackers to hijack the authentication of certain users for requests that conduct SQL injection attacks via the (1) order_by or (2) order parameter in the wpseo_bulk-editor page.
SecRule REQUEST_FILENAME "@endsWith /admin.php" \
	"id:66601282,chain,msg:'POL-2015-2293',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq wpseo_bulk-editor" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule &SESSION:wp_session "!@eq 1" "


# CVE: CVE-2016-5609
# CVSS: 4
# Publish: 2016-10-25T14:31:00
# Unspecified vulnerability in Oracle MySQL 5.6.31 and earlier and 5.7.13 and earlier allows remote authenticated users to affect availability via vectors related to DML.
SecRule REQUEST_FILENAME "@contains /image-export/download.php" \
	"id:66601283,chain,msg:'POL-2016-5609',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:file "@contains /" \
	"t:none,t:lowercase,t:urlDecodeUni"


# CVE: CVE-2015-3998
# CVSS: 4.3
# Publish: 2017-05-17T14:29:00
# Cross-site scripting (XSS) vulnerability in phpwhois 4.2.5, as used in the adsense-click-fraud-monitoring plugin 1.7.5 for WordPress, allows remote attackers to inject arbitrary web script or HTML via the query parameter to whois.php.
SecRule REQUEST_FILENAME "@contains /phpwhois/whois.php" \
	"id:66601284,chain,msg:'POL-2015-3998',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:query "@contains <" \
	"t:none,t:lowercase"


# CVE: CVE-2013-4117
# CVSS: 4.3
# Publish: 2013-07-16T14:08:00
# Cross-site scripting (XSS) vulnerability in includes/CatGridPost.php in the Category Grid View Gallery plugin 2.3.1 for WordPress allows remote attackers to inject arbitrary web script or HTML via the ID parameter.
SecRule REQUEST_FILENAME "@endsWith catgridpost.php" \
	"id:66601285,chain,msg:'POL-2013-4117',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_COOKIES_NAMES "@contains wordpress" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:ID "@contains <" \
	"t:none,t:lowercase"


# CVE: CVE-2015-1000012
# CVSS: 5
# Publish: 2016-10-06T14:59:00
# Local File Inclusion Vulnerability in mypixs v0.3 wordpress plugin
SecRule ARGS_GET:url "@beginsWith /" \
	"id:66601286,chain,msg:'POL-2015-1000012',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith mypixs/downloadpage.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2014-9311
# CVSS: 3.5
# Publish: 2015-04-14T14:59:00
# Cross-site scripting (XSS) vulnerability in admin.php in the Shareaholic plugin before 7.6.1.0 for WordPress allows remote authenticated users to inject arbitrary web script or HTML via the location[id] parameter in a shareaholic_add_location action to wp-admin/admin-ajax.php.
SecRule REQUEST_FILENAME "@contains admin-ajax.php" \
	"id:66601287,chain,msg:'POL-2014-9311',deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:location[id] "@rx \D" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-8810
# CVSS: 6.5
# Publish: 2014-12-24T18:59:00
# SQL injection vulnerability in ajax/mail_functions.php in the WP Symposium plugin before 14.11 for WordPress allows remote authenticated users to execute arbitrary SQL commands via the tray parameter in a getMailMessage action.
SecRule REQUEST_FILENAME "@endsWith ajax/mail_functions.php" \
	"id:66601288,chain,msg:'POL-2014-8810',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@streq getMailMessage" \
	"chain,t:none"
SecRule ARGS_POST:tray "!@streq in" \
	"t:none,t:lowercase"


# CVE: CVE-2014-8809
# CVSS: 4.3
# Publish: 2014-12-24T18:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the WP Symposium plugin before 14.11 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) text parameter in an addComment action to ajax/profile_functions.php, (2) compose_text parameter in a sendMail action to ajax/mail_functions.php, (3) comment parameter in an add_comment action to ajax/lounge_functions.php, or (4) name parameter in a create_album action to ajax/gallery_functions.php.
SecRule REQUEST_FILENAME "@endsWith ajax/profile_functions.php" \
	"id:66601289,chain,msg:'POL-2014-8809',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@streq addComment" \
	"chain,t:none"
SecRule ARGS_POST:uid|ARGS_POST:parent "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:text "@rx <" \
	"t:none,t:urlDecodeUni,t:htmlEntitydecode"

SecRule REQUEST_FILENAME "@endsWith ajax/mail_functions.php" \
	"id:66601290,chain,msg:'POL-2014-8809',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@streq sendMail" \
	"chain,t:none"
SecRule ARGS_POST:compose_recipient_id "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:compose_text|ARGS_POST:compose_previous "@rx <" \
	"t:none,t:urlDecodeUni,t:htmlEntitydecode"

SecRule REQUEST_FILENAME "@endsWith ajax/lounge_functions.php" \
	"id:66601291,chain,msg:'POL-2014-8809',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@streq add_comment" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:comment "@rx <|\'|\"" \
	"t:none,t:urlDecodeUni,t:htmlEntitydecode"

SecRule REQUEST_FILENAME "@endsWith ajax/gallery_functions.php" \
	"id:66601292,chain,msg:'POL-2014-8809',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@streq create_album" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:name "@rx <|\'|\"" \
	"t:none,t:urlDecodeUni,t:htmlEntitydecode"


# CVE: CVE-2015-7527
# CVSS: 7.5
# Publish: 2015-12-17T19:59:00
# lib/core.php in the Cool Video Gallery plugin 1.9 for WordPress allows remote attackers to execute arbitrary code via shell metacharacters in the "Width of preview image" and possibly other input fields in the "Video Gallery Settings" page.
SecRule &SESSION:wp_session "@eq 1" \
	"id:66601293,chain,msg:'POL-2015-7527',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:cvg_preview_width|ARGS_POST:cvg_preview_height "@rx \D" \
	"chain,t:none"
SecRule ARGS_GET:page "@streq cvg-gallery-settings" \
	"t:none"


# CVE: CVE-2015-3300
# CVSS: 4.3
# Publish: 2015-05-14T14:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the TheCartPress eCommerce Shopping Cart (aka The Professional WordPress eCommerce Plugin) plugin for WordPress before 1.3.9.3 allow remote attackers to inject arbitrary web script or HTML via the (1) billing_firstname, (2) billing_lastname, (3) billing_company, (4) billing_tax_id_number, (5) billing_city, (6) billing_street, (7) billing_street_2, (8) billing_postcode, (9) billing_telephone_1, (10) billing_telephone_2, (11) billing_fax, (12) shipping_firstname, (13) shipping_lastname, (14) shipping_company, (15) shipping_tax_id_number, (16) shipping_city, (17) shipping_street, (18) shipping_street_2, (19) shipping_postcode, (20) shipping_telephone_1, (21) shipping_telephone_2, or (22) shipping_fax parameter to shopping-cart/checkout/; the (23) search_by parameter in the admin/AddressesList.php page to wp-admin/admin.php; the (24) address_id, (25) address_name, (26) firstname, (27) lastname, (28) street, (29) city, (30) postcode, or (31) email parameter in the admin/AddressEdit.php page to wp-admin/admin.php; the (32) post_id or (33) rel_type parameter in the admin/AssignedCategoriesList.php page to wp-admin/admin.php; or the (34) post_type parameter in the admin/CustomFieldsList.php page to wp-admin/admin.php.
SecRule ARGS_GET:page "@rx admin\/(?:addressedit|addresslist|assignedcategorieslist|customfieldslist)\.php" \
	"id:66601294,chain,msg:'POL-2015-3300',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS:address_id|ARGS:address_name|ARGS:firstname|ARGS:lastname|ARGS:street|ARGS:city|ARGS:postcode|ARGS:email|ARGS:search_by|ARGS:post_id|ARGS:rel_type|ARGS:post_type "@rx \"" \
	"t:none,t:urlDecodeUni"

SecRule &ARGS:selected_billing_id|&ARGS:selected_shipping_address "@ge 1" \
	"id:66601295,chain,msg:'POL-2015-3300',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:billing_firstname|ARGS:billing_lastname|ARGS:billing_company|ARGS:billing_tax_id_number|ARGS:billing_city|ARGS:billing_street|ARGS:billing_street_2|ARGS:billing_postcode|ARGS:billing_telephone_1|ARGS:billing_telephone_2|ARGS:billing_fax|ARGS:shipping_firstname|ARGS:shipping_lastname|ARGS:shipping_company|ARGS:shipping_tax_id_number|ARGS:shipping_city|ARGS:shipping_street|ARGS:shipping_street_2|ARGS:shipping_postcode|ARGS:shipping_telephone_1|ARGS:shipping_telephone_2|ARGS:shipping_fax "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-4414
# CVSS: 5
# Publish: 2015-06-17T18:59:00
# Directory traversal vulnerability in download_audio.php in the SE HTML5 Album Audio Player (se-html5-album-audio-player) plugin 1.1.0 and earlier for WordPress allows remote attackers to read arbitrary files via a .. (dot dot) in the file parameter.
SecRule REQUEST_FILENAME "@endsWith download_audio.php" \
	"id:66601296,chain,msg:'POL-2015-4414',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:file "@contains .." \
	"t:none,t:urlDecodeUni,t:normalizePath"


# CVE: CVE-2014-1888
# CVSS: 4.3
# Publish: 2014-03-01T00:01:00
# Cross-site scripting (XSS) vulnerability in the BuddyPress plugin before 1.9.2 for WordPress allows remote authenticated users to inject arbitrary web script or HTML via the name field to groups/create/step/group-details.  NOTE: this can be exploited without authentication by leveraging CVE-2014-1889.
SecRule &REQUEST_COOKIES_NAMES:bp-activity-oldestpage "@eq 1" \
	"id:66601297,chain,msg:'POL-2014-1888',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:group-name "@pm \' \" \<" \
	"t:none"


# CVE: CVE-2015-2065
# CVSS: 7.5
# Publish: 2015-02-24T17:59:00
# SQL injection vulnerability in videogalleryrss.php in the Apptha WordPress Video Gallery (contus-video-gallery) plugin before 2.8 for WordPress allows remote attackers to execute arbitrary SQL commands via the vid parameter in a rss action to wp-admin/admin-ajax.php.
SecRule ARGS_GET:action "@streq rss" \
	"id:66601298,chain,msg:'POL-2015-2065',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:task "@streq video" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:vid "@rx \D" \
	"t:none"


# CVE: CVE-2015-5065
# CVSS: 5
# Publish: 2015-06-24T14:59:00
# Absolute path traversal vulnerability in proxy.php in the google currency lookup in the Paypal Currency Converter Basic For WooCommerce plugin before 1.4 for WordPress allows remote attackers to read arbitrary files via a full pathname in the requrl parameter.
SecRule REQUEST_FILENAME "@endsWith proxy.php" \
	"id:66601299,chain,msg:'POL-2015-5065',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:requrl "@rx ^(\.\.|\/)" \
	"t:none"


# CVE: CVE-2015-3429
# CVSS: 4.3
# Publish: 2015-06-17T18:59:00
# Cross-site scripting (XSS) vulnerability in example.html in Genericons before 3.3.1, as used in WordPress before 4.2.2, allows remote attackers to inject arbitrary web script or HTML via a fragment identifier.
SecRule REQUEST_FILENAME "@endsWith twentyfifteen/genericons/example.html" \
	"id:66601300,msg:'POL-2015-3429',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"


# CVE: CVE-2015-4127
# CVSS: 4.3
# Publish: 2015-05-28T14:59:00
# Cross-site scripting (XSS) vulnerability in the church_admin plugin before 0.810 for WordPress allows remote attackers to inject arbitrary web script or HTML via the address parameter, as demonstrated by a request to index.php/2015/05/21/church_admin-registration-form/.
SecRule ARGS_GET:page "@contains church_admin" \
	"id:66601301,chain,msg:'POL-2015-4127',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:action "@streq church_admin_edit_household" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:address "@rx <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-7668
# CVSS: 4.3
# Publish: 2017-12-27T19:29:00
# Cross-site scripting (XSS) vulnerability in includes/MapPinImageSave.php in the Easy2Map plugin before 1.3.0 for WordPress allows remote attackers to inject arbitrary web script or HTML via the map_id parameter.
SecRule TX:WordPress "@eq 1" \
	"id:66601302,chain,msg:'POL-2015-7668',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq easy2map" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:map_id "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-8354
# CVSS: 4.3
# Publish: 2017-09-11T20:29:00
# Cross-site scripting (XSS) vulnerability in the Ultimate Member WordPress plugin before 1.3.29 for WordPress allows remote attackers to inject arbitrary web script or HTML via the _refer parameter to wp-admin/users.php.
SecRule TX:WordPress "@eq 1" \
	"id:66601303,chain,msg:'POL-2015-8354',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith /wp-admin/users.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule ARGS_GET:update "@streq confirm_delete" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:_refer "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-6993
# CVSS: 4.3
# Publish: 2014-01-03T18:54:00
# Cross-site scripting (XSS) vulnerability in the Ad-minister plugin 0.6 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the key parameter in a delete action to wp-admin/tools.php.
SecRule REQUEST_FILENAME "@endsWith tools.php" \
	"id:66601304,chain,msg:'POL-2013-6993',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq ad-minister" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:action "@streq delete" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:key "@contains <" \
	"t:none,t:lowercase,t:urlDecodeUni"


# CVE: CVE-2014-5202
# CVSS: 3.5
# Publish: 2014-08-12T23:55:00
# Cross-site scripting (XSS) vulnerability in compfight-search.php in the Compfight plugin 1.4 for WordPress allows remote authenticated users to inject arbitrary web script or HTML via the search-value parameter.
SecRule REQUEST_FILENAME "@endsWith compfight-search.php" \
	"id:66601305,chain,msg:'POL-2014-5202',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:removeWhitespace,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:search-value "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:jsDecode,multiMatch"


# CVE: CVE-2014-5201
# CVSS: 7.5
# Publish: 2014-08-12T20:55:00
# SQL injection vulnerability in the Gallery Objects plugin 0.4 for WordPress allows remote attackers to execute arbitrary SQL commands via the viewid parameter in a go_view_object action to wp-admin/admin-ajax.php.
SecRule REQUEST_FILENAME "@endsWith wp-admin/admin-ajax.php" \
	"id:66601306,chain,msg:'POL-2014-5201',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:removeWhitespace,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:action "@streq go_view_object" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:removeWhitespace,t:lowercase,multiMatch"
SecRule ARGS:viewid "@rx \D" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:removeWhitespace,t:lowercase,multiMatch"


# CVE: CVE-2013-1407
# CVSS: 4.3
# Publish: 2014-05-13T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Events Manager plugin before 5.3.5 and Events Manager Pro plugin before 2.2.9 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) scope parameter to index.php; (2) user_name, (3) dbem_phone, (4) user_email, or (5) booking_comment parameter to an event with registration enabled; or the (6) _wpnonce parameter to wp-admin/edit.php.
SecRule &ARGS_GET:event "@gt 0" \
	"id:66601307,chain,msg:'POL-2013-1407',phase:2,deny,status:403,log,t:none,t:urlDecode,t:lowercase,t:htmlEntityDecode,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:dbem_phone|ARGS_GET:user_email|ARGS_GET:user_name "@contains >" \
	"t:none,t:htmlEntityDecode"

SecRule &ARGS_GET:event "@gt 0" \
	"id:66601308,chain,msg:'POL-2013-1407',phase:2,deny,status:403,log,t:none,t:urlDecode,t:lowercase,t:htmlEntityDecode,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:booking_comment "@contains >" \
	"t:none,t:htmlEntityDecode"

SecRule ARGS_GET:post_type "@streq event" \
	"id:66601309,chain,msg:'POL-2013-1407',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq events-manager-bookings" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:_wpnonce "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule &ARGS_GET:page_id "@ge 1" \
	"id:66601310,chain,msg:'POL-2013-1407',phase:2,deny,status:403,log,t:none,t:urlDecode,t:lowercase,t:htmlEntityDecode,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:scope "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-2558
# CVSS: 6.5
# Publish: 2014-05-06T14:55:00
# The File Gallery plugin before 1.7.9.2 for WordPress does not properly escape strings, which allows remote administrators to execute arbitrary PHP code via a \' (backslash quote) in the setting fields to /wp-admin/options-media.php, related to the create_function function.
SecRule REQUEST_FILENAME "@contains wp-admin/options.php" \
	"id:66601311,chain,msg:'POL-2014-2558',phase:2,deny,status:403,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:cmdline,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:/^file_gallery.*/ "@contains \'" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4526
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in callback.php in the efence plugin 1.3.2 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) message, (2) zoneid, (3) pubKey, or (4) privKey parameter.
SecRule REQUEST_FILENAME "@contains callback.php" \
	"id:66601312,chain,msg:'POL-2014-4526',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:message|ARGS_GET:privKey|ARGS_GET:pubKey|ARGS_GET:zoneid "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4524
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in classes/custom-image/media.php in the WP Easy Post Types plugin before 1.4.4 for WordPress allows remote attackers to inject arbitrary web script or HTML via the ref parameter.
SecRule REQUEST_FILENAME "@contains custom-image/media.php" \
	"id:66601313,chain,msg:'POL-2014-4524',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:ref "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-9735
# CVSS: 7.5
# Publish: 2015-06-30T14:59:00
# The ThemePunch Slider Revolution (revslider) plugin before 3.0.96 for WordPress and Showbiz Pro plugin 1.7.1 and earlier for Wordpress does not properly restrict access to administrator AJAX functionality, which allows remote attackers to (1) upload and execute arbitrary files via an update_plugin action; (2) delete arbitrary sliders via a delete_slider action; and (3) create, (4) update, (5) import, or (6) export arbitrary sliders via unspecified vectors.
SecRule REQUEST_FILENAME "@endsWith /admin-ajax.php" \
	"id:66601314,chain,msg:'POL-2014-9735',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:7,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@streq revslider_ajax_action" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:client_action "client_action" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule &ARGS_POST:data "@gt 0" \
	"chain"
SecRule &SESSION:wp_session "@eq 0" "


# CVE: CVE-2014-9734
# CVSS: 5
# Publish: 2015-06-30T14:59:00
# Directory traversal vulnerability in the Slider Revolution (revslider) plugin before 4.2 for WordPress allows remote attackers to read arbitrary files via a .. (dot dot) in the img parameter in a revslider_show_image action to wp-admin/admin-ajax.php.
SecRule REQUEST_FILENAME "@endsWith /wp-admin/admin-ajax.php" \
	"id:66601315,chain,msg:'POL-2014-9734',phase:2,deny,status:403,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:7,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:action "@streq revslider_show_image" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:img "@contains .." \
	"t:none"


# CVE: CVE-2014-4518
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Cross-site scripting (XSS) vulnerability in xd_resize.php in the Contact Form by ContactMe.com plugin 2.3 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the width parameter.
SecRule REQUEST_FILENAME "@contains contactme" \
	"id:66601316,chain,msg:'POL-2014-4518',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule MATCHED_VAR "@endswith wp-content/plugins/contactme/xd_resize.php" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_GET:height|ARGS_GET:width "@rx \D" \
	"t:none"


# CVE: CVE-2014-4520
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Cross-site scripting (XSS) vulnerability in phprack.php in the DMCA WaterMarker plugin before 1.1 for WordPress allows remote attackers to inject arbitrary web script or HTML via the plugin_dir parameter.
SecRule ARGS_GET:plugin_dir "@contains <" \
	"id:66601317,chain,msg:'POL-2014-4520',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@contains phprack.php" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2014-4513
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in server/offline.php in the ActiveHelper LiveHelp Live Chat plugin 3.1.0 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) MESSAGE, (2) EMAIL, or (3) NAME parameter.
SecRule ARGS:EMAIL|ARGS:MESSAGE|ARGS:NAME "@contains \"" \
	"id:66601318,chain,msg:'POL-2014-4513',deny,status:403,log,t:none,t:urlDecodeUni,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@contains /wp-content/plugins/activehelper-livehelp/server/offline.php" \
	"t:none,t:urlDecodeUni,t:lowercase,t:normalizePath"


# CVE: CVE-2014-4515
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Cross-site scripting (XSS) vulnerability in mce_anyfont/dialog.php in the AnyFont plugin 2.2.3 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the text parameter.
SecRule ARGS_GET:text "@contains \"" \
	"id:66601319,chain,msg:'POL-2014-4515',deny,status:403,log,t:none,t:urlDecodeUni,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@contains wp-content/plugins/anyfont/mce_anyfont/dialog.php" \
	"t:none,t:urlDecodeUni,t:lowercase,t:normalizePath"


# CVE: CVE-2014-4528
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in admin/swarm-settings.php in the Bugs Go Viral : Facebook Promotion Generator (fbpromotions) plugin 1.3.4 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) promo_type, (2) fb_edit_action, or (3) promo_id parameter.
SecRule REQUEST_FILENAME "@endsWith admin/swarm-settings.php" \
	"id:66601320,chain,msg:'POL-2014-4528',phase:2,deny,status:403,log,t:none,t:urlDecode,t:lowercase,t:htmlEntityDecode,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:fb_edit_action|ARGS_GET:promo_id|ARGS_GET:promo_type "@contains >" \
	"t:htmlEntityDecode"


# CVE: CVE-2014-3845
# CVSS: 6.8
# Publish: 2014-05-22T15:13:00
# Cross-site request forgery (CSRF) vulnerability in the TinyMCE Color Picker plugin before 1.2 for WordPress allows remote attackers to hijack the authentication of unspecified users for requests that change plugin settings via unknown vectors.  NOTE: some of these details are obtained from third party information.
#5001075
SecRule REQUEST_URI "!@rx wp-admin/post\.php" \
        "id:66601321,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5001073"

SecMarker BEGIN-RULE5001073
SecRule REQUEST_METHOD "@streq GET" \
        "id:66601322,phase:2,pass,setvar:'SESSION.TIMEOUT=3600',setvar:'SESSION.tiny=1',expirevar:'SESSION.tiny=3600',nolog,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecMarker END-RULE5001073

SecRule REQUEST_URI "!@rx wp-admin/admin-ajax\.php" \
        "id:66601323,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5001075"

SecMarker BEGIN-RULE5001075
SecRule SESSION:tiny "@eq 1" \
        "id:66601324,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule REQUEST_METHOD "@streq POST" \
        "id:66601325,chain,msg:'POL-2014-3845',phase:2,deny,status:403,log,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule &ARGS_POST:value[] "@ge 1" \
        "chain"
SecRule ARGS_POST:option "@streq tinymce_cp__colors" \
        "chain"
SecRule ARGS_POST:action "@streq tinymce_cp__update_option" "

SecMarker END-RULE5001075

# CVE: CVE-2015-4109
# CVSS: 7.5
# Publish: 2015-06-09T14:59:00
# Multiple SQL injection vulnerabilities in the ratings module in the Users Ultra plugin before 1.5.16 for WordPress allow remote attackers to execute arbitrary SQL commands via the (1) data_target or (2) data_vote parameter in a rating_vote (wp_ajax_nopriv_rating_vote) action to wp-admin/admin-ajax.php.
SecRule ARGS_POST:action "@streq rating_vote" \
	"id:66601326,chain,msg:'POL-2015-4109',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:data_target "!@rx ^\w+$" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith admin-ajax.php" \
	"t:none,t:lowercase"


# CVE: CVE-2014-9570
# CVSS: 4.3
# Publish: 2015-01-15T15:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the MyWebsiteAdvisor Simple Security plugin 1.1.5 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) datefilter parameter in the access_log page to wp-admin/users.php or (2) simple_security_ip_blacklist[] parameter in an add_blacklist_ip action in the ip_blacklist page to wp-admin/users.php.
SecRule ARGS_GET:page "@streq access_log" \
	"id:66601327,chain,msg:'POL-2014-9570',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:datefilter "@rx \"" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode"
SecRule REQUEST_FILENAME "@endsWith users.php" \
	"t:none,t:lowercase"

SecRule ARGS_GET:page "@streq ip_blacklist" \
	"id:66601328,chain,msg:'POL-2014-9570',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@streq add_blacklist_ip" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:/simple_security_ip_blacklist\[\d*]/ "@rx \'" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith users.php" \
	"t:none,t:lowercase"


# CVE: CVE-2014-2340
# CVSS: 6.8
# Publish: 2014-04-03T16:15:00
# Cross-site request forgery (CSRF) vulnerability in the XCloner plugin before 3.1.1 for WordPress allows remote attackers to hijack the authentication of administrators for requests that create website backups via a request to wp-admin/plugins.php.
#5001072
SecRule REQUEST_URI "!@rx wp-admin\/plugins\.php" \
        "id:66601329,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5001072"

SecMarker BEGIN-RULE5001072
SecRule REQUEST_METHOD "@streq GET" \
        "id:66601330,chain,phase:2,pass,setvar:'SESSION.TIMEOUT=3600',setvar:'SESSION.wp_xcloner=1',expirevar:'SESSION.wp_xcloner=3600',nolog,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq xcloner_show"

SecRule SESSION:wp_xcloner "@eq 1" \
        "id:66601331,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule REQUEST_METHOD "@streq POST" \
        "id:66601332,chain,msg:'POL-2014-2340',phase:2,deny,status:403,log,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq xcloner_show" \
        "chain"
SecRule ARGS_POST:task "@streq generate" \
        "chain"
SecRule ARGS_POST:option "@streq com_cloner" "

SecMarker END-RULE5001072

# CVE: CVE-2015-7319
# CVSS: 7.5
# Publish: 2015-09-29T19:59:00
# SQL injection vulnerability in cpabc_appointments_admin_int_calendar_list.inc.php in the Appointment Booking Calendar plugin before 1.1.8 for WordPress allows remote attackers to execute arbitrary SQL commands via unspecified vectors related to updating the username.
SecRule REQUEST_COOKIES_NAMES "@beginsWith wordpress" \
	"id:66601333,chain,msg:'POL-2015-7319',phase:1,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@streq cpabc_appointments" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:name "@rx \"" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2015-7386
# CVSS: 3.5
# Publish: 2015-09-28T15:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in includes/metaboxes.php in the Gallery - Photo Albums - Portfolio plugin 1.3.47 for WordPress allow remote authenticated users to inject arbitrary web script or HTML via the (1) Media Title or (2) Media Subtitle fields.
SecRule ARGS_POST:post_type "@streq easymediagallery" \
	"id:66601334,chain,msg:'POL-2015-7386',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:easmedia_meta[easmedia_metabox_title]|ARGS_POST:easmedia_meta[easmedia_metabox_sub_title] "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-8375
# CVSS: 6.5
# Publish: 2014-10-21T14:55:00
# SQL injection vulnerability in GBgallery.php in the GB Gallery Slideshow plugin 1.5 for WordPress allows remote administrators to execute arbitrary SQL commands via the selected_group parameter in a gb_ajax_get_group action to wp-admin/admin-ajax.php.
SecRule ARGS_POST:action "@streq gb_ajax_get_group" \
	"id:66601335,chain,msg:'POL-2014-8375',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:selected_group "@rx \D" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith admin-ajax.php" \
	"t:none,t:lowercase"


# CVE: CVE-2014-7959
# CVSS: 6.5
# Publish: 2014-11-06T15:55:00
# SQL injection vulnerability in admin/htaccess/bpsunlock.php in the BulletProof Security plugin before .51.1 for WordPress allows remote authenticated users to execute arbitrary SQL commands via the tableprefix parameter.
SecRule REQUEST_FILENAME "@endsWith htaccess/bpsunlock.php" \
	"id:66601336,chain,msg:'POL-2014-7959',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:tableprefix "!@rx ^\w+$" \
	"t:none"


# CVE: CVE-2013-2107
# CVSS: 6.8
# Publish: 2014-05-23T00:55:00
# Cross-site request forgery (CSRF) vulnerability in the Mail On Update plugin before 5.2.0 for WordPress allows remote attackers to hijack the authentication of administrators for requests that change the "List of alternative recipients" via the mailonupdate_mailto parameter in the mail-on-update page to wp-admin/options-general.php.  NOTE: a third party claims that 5.2.1 and 5.2.2 are also vulnerable, but the issue might require a separate CVE identifier since this might reflect an incomplete fix.
#5001078
SecRule REQUEST_URI "!@rx /wp-admin/options-general\.php" \
        "id:66601337,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5001078"

SecMarker BEGIN-RULE5001078
SecRule REQUEST_METHOD "@streq GET" \
        "id:66601338,chain,phase:2,pass,setvar:'SESSION.TIMEOUT=3600',setvar:'SESSION.mail=1',expirevar:'SESSION.mail=3600',nolog,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq mail-on-update"

SecRule SESSION:mail "@eq 1" \
        "id:66601339,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule REQUEST_METHOD "@streq POST" \
        "id:66601340,chain,msg:'POL-2013-2107',phase:2,deny,status:403,log,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq mail-on-update" \
        "chain"
SecRule &ARGS_POST:mailonupdate_mailto "@eq 1" "

SecMarker END-RULE5001078


# CVE: CVE-2014-1854
# CVSS: 7.5
# Publish: 2014-02-27T15:55:00
# SQL injection vulnerability in library/clicktracker.php in the AdRotate Pro plugin 3.9 through 3.9.5 and AdRotate Free plugin 3.9 through 3.9.4 for WordPress allows remote attackers to execute arbitrary SQL commands via the track parameter.
SecRule REQUEST_FILENAME "@endsWith library/clicktracker.php" \
	"id:66601341,chain,msg:'POL-2014-1854',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:track "!@rx ^\d*," \
	"t:none,t:base64Decode"


# CVE: CVE-2014-3841
# CVSS: 4.3
# Publish: 2014-05-22T15:13:00
# Cross-site scripting (XSS) vulnerability in the Contact Bank plugin before 2.0.20 for WordPress allows remote attackers to inject arbitrary web script or HTML via the Label field, related to form layout configuration.  NOTE: some of these details are obtained from third party information.
SecRule ARGS_GET:action "@streq add_contact_form_library" \
	"id:66601342,chain,msg:'POL-2014-3841',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:form_settings "@rx <" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode"
SecRule REQUEST_FILENAME "@endsWith admin-ajax.php" \
	"t:none,t:lowercase"


# CVE: CVE-2014-6313
# CVSS: 4.3
# Publish: 2014-10-14T14:55:00
# Cross-site scripting (XSS) vulnerability in the WooCommerce plugin before 2.2.3 for WordPress allows remote attackers to inject arbitrary web script or HTML via the range parameter on the wc-reports page to wp-admin/admin.php.
SecRule ARGS_GET:page "@streq wc-reports" \
	"id:66601343,chain,msg:'POL-2014-6313',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:range "@rx \"" \
	"chain,t:none,t:htmlEntityDecode"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"t:none,t:lowercase"


# CVE: CVE-2014-2333
# CVSS: 2.6
# Publish: 2014-04-11T14:55:00
# Cross-site scripting (XSS) vulnerability in the Lazyest Gallery plugin before 1.1.21 for WordPress allows remote attackers to inject arbitrary web script or HTML via an EXIF tag.  NOTE: some of these details are obtained from third party information.
SecRule ARGS_POST:option_page "@streq lazyest-gallery" \
	"id:66601344,chain,msg:'POL-2014-2333',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:lazyest-gallery[gallery_folder]|ARGS_POST:lazyest-gallery[thumb_folder]|ARGS_POST:lazyest-gallery[slide_folder]|ARGS_POST:lazyest-gallery[slide_show_duration]|ARGS_POST:lazyest-gallery[captions_length]|ARGS_POST:lazyest-gallery[fileupload_allowedtypes]|ARGS_POST:lazyest-gallery[excluded_folders_string]|ARGS_POST:lazyest-gallery[resample_quality]|ARGS_POST:lazyest-gallery[listed_as]|ARGS_POST:lazyest-gallery[captions_length] "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_POST:option_page "@streq lazyest-gallery" \
	"id:66601345,chain,msg:'POL-2014-2333',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:lazyest-gallery[thumbwidth]|ARGS_POST:lazyest-gallery[thumbheight]|ARGS_POST:lazyest-gallery[thumbs_page]|ARGS_POST:lazyest-gallery[folders_page]|ARGS_POST:lazyest-gallery[folders_columns]|ARGS_POST:lazyest-gallery[pictwidth]|ARGS_POST:lazyest-gallery[pictheight]|ARGS_POST:lazyest-gallery[thumbs_columns] "@rx \D" \
	"t:none"


# CVE: CVE-2015-3986
# CVSS: 4.3
# Publish: 2015-05-14T14:59:00
# Cross-site request forgery (CSRF) vulnerability in the TheCartPress eCommerce Shopping Cart (aka The Professional WordPress eCommerce Plugin) plugin for WordPress before 1.3.9.3 allows remote attackers to hijack the authentication of administrators for requests that conduct directory traversal attacks via the tcp_box_path parameter in the checkout_editor_settings page to wp-admin/admin.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601346,chain,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq checkout_editor_settings" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.wp_CartPress=1',expirevar:'SESSION.wp_CartPress=300',t:none,t:lowercase"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601347,chain,msg:'POL-2015-3986',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq checkout_editor_settings" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_CartPress "!@eq 1" \
	"t:none"

SecRule ARGS_GET:page "@streq checkout_editor_settings" \
	"id:66601348,chain,msg:'POL-2015-3986',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:tcp_box_path "@contains .." \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"t:none,t:lowercase"


# CVE: CVE-2013-4626
# CVSS: 4.3
# Publish: 2013-09-26T15:55:00
# Cross-site scripting (XSS) vulnerability in the BackWPup plugin before 3.0.13 for WordPress allows remote attackers to inject arbitrary web script or HTML via the tab parameter to wp-admin/admin.php.
SecRule REQUEST_FILENAME "@endsWith /wp-admin/admin.php" \
	"id:66601349,chain,msg:'POL-2013-4626',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq backwpupeditjob" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:tab "@contains \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-4338
# CVSS: 6.5
# Publish: 2015-06-17T18:59:00
# Static code injection vulnerability in the XCloner plugin 3.1.2 for WordPress allows remote authenticated users to inject arbitrary PHP code into the language files via a Translation LM_FRONT_* field for a language, as demonstrated by language/italian.php.
SecRule REQUEST_FILENAME "@contains wp-admin/plugins.php" \
	"id:66601350,chain,msg:'POL-2015-4338',phase:2,deny,status:403,log,t:none,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:lang[LM_FRONT_CHOOSE_PACKAGE] "@contains \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-6097
# CVSS: 6.5
# Publish: 2017-02-21T07:59:00
# A SQL injection issue was discovered in the Mail Masta (aka mail-masta) plugin 1.0 for WordPress. This affects /inc/campaign/count_of_send.php (Requires authentication to Wordpress admin) with the POST Parameter: camp_id.
SecRule TX:WordPress "@eq 1" \
	"id:66601351,chain,msg:'POL-2017-6097',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@contains inc/campaign/count_of_send.php" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:camp_id "@rx \D" \
	"t:none"


# CVE: CVE-2017-6098
# CVSS: 6.5
# Publish: 2017-02-21T07:59:00
# A SQL injection issue was discovered in the Mail Masta (aka mail-masta) plugin 1.0 for WordPress. This affects /inc/campaign_save.php (Requires authentication to Wordpress admin) with the POST Parameter: list_id.
SecRule TX:WordPress "@eq 1" \
	"id:66601352,chain,msg:'POL-2017-6098',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@streq my_action" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:url "@endsWith /inc/campaign_save.php" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:list_id "@rx \D" \
	"t:none"


# CVE: CVE-2017-6570
# CVSS: 6.5
# Publish: 2017-03-09T09:59:00
# A SQL injection issue is exploitable, with WordPress admin access, in the Mail Masta (aka mail-masta) plugin 1.0 for WordPress. This affects ./inc/campaign/view-campaign-list.php with the GET Parameter: id.
SecRule TX:WordPress "@eq 1" \
	"id:66601353,chain,msg:'POL-2017-6570',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule &ARGS_GET:action "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:page "@streq masta-campaign" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:id "@rx \D" \
	"t:none"


# CVE: CVE-2017-6102
# CVSS: 4.3
# Publish: 2017-03-02T22:59:00
# Persistent XSS in wordpress plugin rockhoist-badges v1.2.2.
SecRule TX:WordPress "@eq 1" \
	"id:66601354,chain,msg:'POL-2017-6102',phase:2,deny,status:403,log,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule &ARGS_POST:add-badge-posted "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:badge-name|ARGS_POST:badge-desc "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2017-6570
# CVSS: 6.5
# Publish: 2017-03-09T09:59:00
# A SQL injection issue is exploitable, with WordPress admin access, in the Mail Masta (aka mail-masta) plugin 1.0 for WordPress. This affects ./inc/campaign/view-campaign-list.php with the GET Parameter: id.
SecRule TX:WordPress "@eq 1" \
	"id:66601355,chain,msg:'POL-2017-6570',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:action "@streq edit_member" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@streq masta-lists" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:member_id "@rx \D" \
	"t:none"


# CVE: CVE-2017-6577
# CVSS: 6.5
# Publish: 2017-03-09T09:59:00
# A SQL injection issue is exploitable, with WordPress admin access, in the Mail Masta (aka mail-masta) plugin 1.0 for WordPress. This affects ./inc/subscriber_list.php with the POST Parameter: list_id.
SecRule TX:WordPress "@eq 1" \
	"id:66601356,chain,msg:'POL-2017-6577',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule &ARGS_POST:subscriber_email "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:url "@endsWith /inc/subscriber_list.php" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS_POST:list_id "@rx \D" \
	"t:none"


# CVE: CVE-2013-6010
# CVSS: 4.3
# Publish: 2013-10-03T20:55:00
# Cross-site scripting (XSS) vulnerability in the Comment Attachment plugin 1.0 for WordPress allows remote attackers to inject arbitrary web script or HTML via the "Attachment field title."
SecRule REQUEST_FILENAME "@endsWith options.php" \
	"id:66601357,chain,msg:'POL-2013-6010',deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule &SESSION:wp_session "@ge 1" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:commentAttachment[commentAttachmentTitle] "@contains <" \
	"t:none,t:lowercase"


# CVE: CVE-2013-2287
# CVSS: 4.3
# Publish: 2014-04-04T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in views/notify.php in the Uploader plugin 1.0.4 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) notify or (2) blog parameter.
SecRule REQUEST_FILENAME "@contains /views/notify.php" \
	"id:66601358,chain,msg:'POL-2013-2287',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:normalizePath,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@contains /wp-content/plugins/" \
	"chain,t:none,t:urlDecodeUni,t:lowercase,t:normalizePath"
SecRule ARGS_GET:notify "@within notif unnotif" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:blog "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-7276
# CVSS: 4.3
# Publish: 2014-01-08T15:30:00
# Cross-site scripting (XSS) vulnerability in inc/raf_form.php in the Recommend to a friend plugin 2.0.2 for WordPress allows remote attackers to inject arbitrary web script or HTML via the current_url parameter.
SecRule REQUEST_FILENAME "@endsWith raf_form.php" \
	"id:66601359,chain,msg:'POL-2013-7276',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:current_url "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-6342
# CVSS: 4.3
# Publish: 2013-11-22T20:55:00
# Cross-site scripting (XSS) vulnerability in the Tweet Blender plugin before 4.0.2 for WordPress allows remote attackers to inject arbitrary web script or HTML via the tb_tab_index parameter to wp-admin/options-general.php.
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"id:66601360,chain,msg:'POL-2013-6342',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:page "@contains tweet-blender/admin-page.php" \
	"chain,t:none,t:urlDecodeUni,t:lowercase,t:normalizePath"
SecRule ARGS_POST:tb_tab_index "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2013-6991
# CVSS: 4.3
# Publish: 2014-01-03T18:54:00
# Cross-site scripting (XSS) vulnerability in the WP-Cron Dashboard plugin 1.1.5 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the procname parameter to wp-admin/tools.php.
SecRule REQUEST_FILENAME "@endsWith tools.php" \
	"id:66601361,chain,msg:'POL-2013-6991',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains wp-cron-dashboard" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:procname "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2013-6281
# CVSS: 4.3
# Publish: 2013-10-25T14:55:00
# Cross-site scripting (XSS) vulnerability in codebase/spreadsheet.php in the Spreadsheet (dhtmlxSpreadsheet) plugin 2.0 for WordPress allows remote attackers to inject arbitrary web script or HTML via the "page" parameter.
SecRule REQUEST_FILENAME "@endsWith /codebase/spreadsheet.php" \
	"id:66601362,chain,msg:'POL-2013-6281',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,t:normalizePath,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-4625
# CVSS: 4.3
# Publish: 2013-08-09T21:55:00
# Cross-site scripting (XSS) vulnerability in files/installer.cleanup.php in the Duplicator plugin before 0.4.5 for WordPress allows remote attackers to inject arbitrary web script or HTML via the package parameter.
SecRule REQUEST_FILENAME "@endsWith installer.cleanup.php" \
	"id:66601363,chain,msg:'POL-2013-4625',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:package "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4516
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Cross-site scripting (XSS) vulnerability in bicm-carousel-preview.php in the BIC Media Widget plugin 1.0 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the param parameter.
SecRule REQUEST_FILENAME "@endsWith bicm-carousel-preview.php" \
	"id:66601364,chain,msg:'POL-2014-4516',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:param "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-100026
# CVSS: 4.3
# Publish: 2015-01-13T15:59:00
# Cross-site scripting (XSS) vulnerability in readme.php in the April's Super Functions Pack plugin before 1.4.8 for WordPress allows remote attackers to inject arbitrary web script or HTML via the page parameter.  NOTE: some of these details are obtained from third party information.
SecRule REQUEST_FILENAME "@endsWith aprils-super-functions-pack/readme.php" \
	"id:66601365,chain,msg:'POL-2014-100026',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4578
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in asset-studio/icons-launcher.php in the WP App Maker plugin 1.0.16.4 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the uid parameter.
SecRule REQUEST_FILENAME "@endsWith asset-studio/icons-launcher.php" \
	"id:66601366,chain,msg:'POL-2014-4578',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:uid "!@rx ^[\w\-]{36}$" "


# CVE: CVE-2014-4576
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in services/diagnostics.php in the WordPress Social Login plugin 2.0.3 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the xhrurl parameter.
SecRule REQUEST_FILENAME "@endsWith services/diagnostics.php" \
	"id:66601367,chain,msg:'POL-2014-4576',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:xhrurl "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4573
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in frame-maker.php in the Walk Score plugin 0.5.5 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) s or (2) o parameter.
SecRule REQUEST_FILENAME "@endsWith frame-maker.php" \
	"id:66601368,chain,msg:'POL-2014-4573',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:s|ARGS_GET:o "!@within small medium large vertical horizontal s m l v h" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2014-4579
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in js/test.php in the Appointments Scheduler plugin 1.5 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the lang parameter.
SecRule REQUEST_FILENAME "@endsWith js/test.php" \
	"id:66601369,chain,msg:'POL-2014-4579',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:lang "@pm < >" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4599
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in forms/search.php in the WP-Business Directory (wp-ttisbdir) plugin 1.0.2 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) edit, (2) search_term, (3) page_id, (4) page, or (5) page_links parameter.
SecRule REQUEST_FILENAME "@contains wp-content/plugins/wp-ttisbdir/forms/search.php" \
	"id:66601370,chain,msg:'POL-2014-4599',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:edit|ARGS:search_term|ARGS:page_id|ARGS:page|ARGS:page_links "@pm < >" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4540
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in oleggo-twitter/twitter_login_form.php in the Oleggo LiveStream plugin 0.2.6 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the msg parameter.
SecRule REQUEST_FILENAME "@contains oleggo-twitter/twitter_login_form.php" \
	"id:66601371,chain,msg:'POL-2014-4540',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:msg "@pm < >" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4571
# CVSS: 4.3
# Publish: 2014-07-02T20:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in vncal.js.php in the VN-Calendar plugin 1.0 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) fs or (2) w parameter.
SecRule REQUEST_FILENAME "@endsWith vncal.js.php" \
	"id:66601372,chain,msg:'POL-2014-4571',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:w|ARGS_GET:fs "!@rx ^[\d\.]{0,20}$" \
	"t:none"


# CVE: CVE-2014-4597
# CVSS: 4.3
# Publish: 2014-07-02T20:55:00
# Cross-site scripting (XSS) vulnerability in test.php in the WP Social Invitations plugin before 1.4.4.3 for WordPress allows remote attackers to inject arbitrary web script or HTML via the xhrurl parameter.
SecRule REQUEST_FILENAME "@contains wp-content/plugins/wp-social-invitations/test.php" \
	"id:66601373,chain,msg:'POL-2014-4597',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:xhrurl "!@streq http://www.example.com" \
	"t:none,t:urlDecodeUni,t:compressWhitespace"


# CVE: CVE-2014-10016
# CVSS: 4.3
# Publish: 2015-01-13T11:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Welcart e-Commerce plugin 1.3.12 for WordPress allow remote attackers to inject arbitrary web script or HTML via (1) unspecified vectors related to purchase_limit or the (2) name, (3) intl, (4) nocod, or (5) time parameter in an add_delivery_method action to wp-admin/admin-ajax.php.
SecRule TX:WordPress "@eq 1" \
	"id:66601374,chain,msg:'POL-2014-10016',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains usces_initial" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:purchase_limit "@rx \D" \
	"t:none"

# SecRule TX:WordPress "@eq 1" \
# 	"id:66601375,chain,msg:'POL-2014-10016',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
# SecRule ARGS_POST:action "@contains shop_options_ajax" \
# 	"chain,t:none,t:lowercase"
# SecRule ARGS_POST:mode "@contains update_delivery_method" \
# 	"chain,t:none,t:lowercase"
# SecRule ARGS_POST:name "@pm \" <" \
# 	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule TX:WordPress "@eq 1" \
	"id:66601376,chain,msg:'POL-2014-10016',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@contains shop_options_ajax" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:mode "@contains update_delivery_method" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:time|ARGS_POST:nocod|ARGS_POST:intl "@rx \D" \
	"t:none"


# CVE: CVE-2014-2839
# CVSS: 7.5
# Publish: 2015-01-12T15:59:00
# SQL injection vulnerability in the GD Star Rating plugin 19.22 for WordPress allows remote administrators to execute arbitrary SQL commands via the s parameter in the gd-star-rating-stats page to wp-admin/admin.php.
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"id:66601377,chain,msg:'POL-2014-2839',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_COOKIES_NAMES "@contains wordpress" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@streq gd-star-rating-stats" \
	"chain,t:none,t:lowercase"
SecRule &ARGS:gdsr_search "@ge 1" \
	"chain,t:none"
SecRule ARGS:s "@rx \'" \
	"t:none"


# CVE: CVE-2015-0895
# CVSS: 6.8
# Publish: 2015-03-07T02:59:00
# Cross-site request forgery (CSRF) vulnerability in the All In One WP Security & Firewall plugin before 3.9.0 for WordPress allows remote attackers to hijack the authentication of administrators for requests that delete logs of 404 (aka Not Found) HTTP status codes.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601378,chain,phase:2,pass,nolog,t:none,skip:1,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@contains aiowpsec_firewall" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:tab "@streq tab6" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_GET "@eq 2" \
	"setvar:'SESSION.wpsec=1',expirevar:'SESSION.wpsec=300',t:none"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601379,chain,msg:'POL-2015-0895',phase:2,deny,deny,status:403,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@contains aiowpsec" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:tab "@streq tab6" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:action|ARGS_GET:action2 "@contains delete" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wpsec "!@eq 1" \
	"t:none"


# CVE: CVE-2015-4065
# CVSS: 3.5
# Publish: 2015-05-27T18:59:00
# Cross-site scripting (XSS) vulnerability in shared/shortcodes/inbound-shortcodes.php in the Landing Pages plugin before 1.8.5 for WordPress allows remote authenticated users to inject arbitrary web script or HTML via the post parameter to wp-admin/post-new.php.
SecRule REQUEST_FILENAME "@endsWith /post-new.php" \
	"id:66601380,chain,msg:'POL-2015-4065',phase:1,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:post_type "@streq inbound-forms" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:post "@rx \'" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-1204
# CVSS: 4.3
# Publish: 2015-01-21T15:28:00
# Cross-site scripting (XSS) vulnerability in the Save Filters functionality in the WP Slimstat plugin before 3.9.2 for WordPress allows remote attackers to inject arbitrary web script or HTML via the fs[resource] parameter in the wp-slim-view-2 page to wp-admin/admin.php.
SecRule REQUEST_FILENAME "@contains /admin.php" \
	"id:66601381,chain,msg:'POL-2015-1204',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains wp-slim-view" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_GET:fs[resource] "@contains '" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2013-5962
# CVSS: 5.1
# Publish: 2013-09-30T22:55:00
# Unrestricted file upload vulnerability in frames/upload-images.php in the Complete Gallery Manager plugin before 3.3.4 rev40279 for WordPress allows remote attackers to execute arbitrary code by uploading a file with an executable extension, then accessing it via a direct request to the file in wp-content/[year]/[month]/. Per: http://cwe.mitre.org/data/definitions/434.html
# 
# 'CWE-434: Unrestricted Upload of File with Dangerous Type'
SecRule REQUEST_FILENAME "@rx /wp-content/plugins/complete-gallery-manager/frames/upload-images\.php" \
	"id:66601382,chain,msg:'POL-2013-5962',phase:1,deny,status:403,log,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule FILES_NAMES "@rx .+\.(?:php|js|p|pl|sh|py|java)$" \
	"t:lowercase"


# CVE: CVE-2013-3720
# CVSS: 3.5
# Publish: 2013-05-31T12:20:00
# Cross-site scripting (XSS) vulnerability in widget_remove.php in the Feedweb plugin before 1.9 for WordPress allows remote authenticated administrators to inject arbitrary web script or HTML via the wp_post_id parameter.
SecRule REQUEST_FILENAME "@endsWith /wp-content/plugins/feedweb/widget_remove.php" \
	"id:66601383,chain,msg:'POL-2013-3720',phase:2,deny,status:403,t:lowercase,t:urlDecodeUni,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:wp_post_id "@rx \D" \
	"t:none"


# CVE: CVE-2017-7723
# CVSS: 4.3
# Publish: 2017-04-24T18:59:00
# XSS exists in Easy WP SMTP (before 1.2.5), a WordPress Plugin, via the e-mail subject or body.
SecRule TX:WordPress "@eq 1" \
	"id:66601384,chain,msg:'POL-2017-7723',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq swpsmtp_settings" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_POST:swpsmtp_nonce_name "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:swpsmtp_subject "@contains <" \
	"t:none,t:urlDecodeUni"

SecRule TX:WordPress "@eq 1" \
	"id:66601385,chain,msg:'POL-2017-7723',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq swpsmtp_settings" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_POST:swpsmtp_nonce_name "@ge 1" \
	"chain,t:none"
SecRule ARGS_POST:swpsmtp_message "@contains </textarea" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2017-2150
# CVSS: 5
# Publish: 2017-04-28T16:59:00
# Directory traversal vulnerability in Booking Calendar version 7.0 and earlier allows remote attackers to read arbitrary files via specially crafted captcha_chalange parameter.
SecRule &ARGS:wpbc_nonce "@ge 1" \
	"id:66601386,chain,msg:'POL-2017-2150',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_BASENAME "@streq admin-ajax.php" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:captcha_chalange "@rx \D" \
	"t:none"


# CVE: CVE-2017-2127
# CVSS: 3.5
# Publish: 2017-04-28T16:59:00
# Cross-site scripting vulnerability in YOP Poll versions prior to 5.8.1 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:WordPress "@ge 1" \
	"id:66601387,chain,msg:'POL-2017-2127',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:action "@streq yop_poll_add_edit_poll" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule REQUEST_BASENAME "@streq admin-ajax.php" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:/yop_poll_question\[question_\d+\]\[question\]/ "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-5469
# CVSS: 7.5
# Publish: 2018-06-11T21:29:00
# Fixed potential buffer overflows in generated Firefox code due to CVE-2016-6354 issue in Flex. This vulnerability affects Thunderbird < 52.1, Firefox ESR < 45.9, Firefox ESR < 52.1, and Firefox < 53.
SecRule REQUEST_FILENAME "@endsWith mdc-youtube-downloader/includes/download.php" \
	"id:66601388,chain,msg:'POL-2017-5469',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalisePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:file "@beginsWith /" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-9288
# CVSS: 4.3
# Publish: 2017-05-29T16:29:00
# The Raygun4WP plugin 1.8.0 for WordPress is vulnerable to a reflected XSS in sendtesterror.php (backurl parameter).
SecRule TX:WordPress "@eq 1" \
	"id:66601389,chain,msg:'POL-2017-9288',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@contains sendtesterror.php" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_GET:rg4wp_status "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:backurl "@contains \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-9418
# CVSS: 6.5
# Publish: 2017-06-12T13:29:00
# SQL injection vulnerability in the WP-Testimonials plugin 3.4.1 for WordPress allows an authenticated user to execute arbitrary SQL commands via the testid parameter to wp-admin/admin.php.
SecRule TX:WordPress "@eq 1" \
	"id:66601390,chain,msg:'POL-2017-9418',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq sfstst_manage" \
	"chain,t:none,t:lowercase"
SecRule ARGS:mode "@streq sfststedit" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith wp-admin/admin.php" \
	"chain,t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"
SecRule ARGS:testid "@rx \D" \
	"t:none"


# CVE: CVE-2017-9603
# CVSS: 6.5
# Publish: 2017-06-13T18:29:00
# SQL injection vulnerability in the WP Jobs plugin before 1.5 for WordPress allows authenticated users to execute arbitrary SQL commands via the jobid parameter to wp-admin/edit.php.
SecRule TX:WordPress "@eq 1" \
	"id:66601391,chain,msg:'POL-2017-9603',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq wpjobsjobapps" \
	"chain,t:none,t:lowercase"
SecRule ARGS:post_type "@streq job" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith wp-admin/edit.php" \
	"chain,t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"
SecRule ARGS:jobid "@rx \D" \
	"t:none"


# CVE: CVE-2017-9429
# CVSS: 6.5
# Publish: 2017-06-13T18:29:00
# SQL injection vulnerability in the Event List plugin 0.7.8 for WordPress allows an authenticated user to execute arbitrary SQL commands via the id parameter to wp-admin/admin.php.
SecRule TX:WordPress "@eq 1" \
	"id:66601392,chain,msg:'POL-2017-9429',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq el_admin_main" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:action "@streq edit" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith wp-admin/admin.php" \
	"chain,t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"
SecRule ARGS_GET:id "@rx \D" \
	"t:none"


# CVE: CVE-2014-9310
# CVSS: 4.3
# Publish: 2017-06-07T21:29:00
# Cross-site scripting (XSS) vulnerability in the WordPress Backup to Dropbox plugin before 4.1 for WordPress.
SecRule TX:WordPress "@eq 1" \
	"id:66601393,chain,msg:'POL-2014-9310',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq backup-to-dropbox-premium" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:title "@contains <" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith wp-admin/admin.php" \
	"t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"


# CVE: CVE-2015-3438
# CVSS: 4.3
# Publish: 2015-08-05T01:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in WordPress before 4.1.2, when MySQL is used without strict mode, allow remote attackers to inject arbitrary web script or HTML via a (1) four-byte UTF-8 character or (2) invalid character that reaches the database layer, as demonstrated by a crafted character in a comment.
SecRule ARGS:comment "@contains %u" \
	"id:66601394,chain,msg:'POL-2015-3438',phase:2,deny,status:403,log,t:none,t:lowercase,rev:4,severity:2,tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith wp-comments-post.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS:comment "@rx (\%u[a-f0-9]{5,8})" \
	"chain,capture,t:none,t:utf8toUnicode"
SecRule TX:1 "@beginsWith 0" \
	"chain,t:none,t:urlDecodeUni,t:hexEncode"
SecRule TX:1 "@eq 4" \
	"t:none,t:urlDecodeUni,t:hexEncode,t:length"

SecRule &SESSION:wp_session "@eq 1" \
	"id:66601395,chain,msg:'POL-2015-3438',phase:2,deny,status:403,log,t:none,rev:4,severity:2,tag:'WordPress'"
SecRule ARGS:comment "@contains %u" \
	"chain,t:none,t:lowercase"
SecRule ARGS:content "@rx (\%u[a-f0-9]{5,8})" \
	"chain,capture,t:none,t:utf8toUnicode"
SecRule &ARGS:comment_ID "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@rx (?:admin\-ajax|comment).php$" \
	"chain,t:none,t:lowercase"
SecRule TX:1 "@eq 4" \
	"chain,t:none,t:urlDecodeUni,t:hexEncode,t:length"
SecRule TX:1 "@beginsWith 0" \
	"t:none,t:urlDecodeUni,t:hexEncode"


# CVE: CVE-2016-1564
# CVSS: 4.3
# Publish: 2016-05-22T01:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in wp-includes/class-wp-theme.php in WordPress before 4.4.1 allow remote attackers to inject arbitrary web script or HTML via a (1) stylesheet name or (2) template name to wp-admin/customize.php.
SecRule &SESSION:wp_session "@eq 1" \
	"id:66601396,chain,msg:'POL-2016-1564',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WordPress'"
SecRule ARGS:theme "@contains <" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith customize.php" \
	"t:none,t:lowercase"


# CVE: CVE-2016-4566
# CVSS: 4.3
# Publish: 2016-05-22T01:59:00
# Cross-site scripting (XSS) vulnerability in plupload.flash.swf in Plupload before 2.1.9, as used in WordPress before 4.5.2, allows remote attackers to inject arbitrary web script or HTML via a Same-Origin Method Execution (SOME) attack.
SecRule REQUEST_FILENAME "@contains /wp-includes/js/" \
	"id:66601397,chain,msg:'POL-2016-4566',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WordPress'"
SecRule REQUEST_BASENAME "@within flashmediaelement.swf plupload.flash.swf" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET "!@rx ^[\d\.ab]+$" \
	"t:none"


# CVE: CVE-2016-7168
# CVSS: 3.5
# Publish: 2017-01-05T02:59:00
# Cross-site scripting (XSS) vulnerability in the media_handle_upload function in wp-admin/includes/media.php in WordPress before 4.6.1 might allow remote attackers to inject arbitrary web script or HTML by tricking an administrator into uploading an image file that has a crafted filename.
SecRule TX:WordPress "@eq 1" \
	"id:66601398,chain,msg:'POL-2016-7168',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WordPress'"
SecRule REQUEST_BASENAME "@streq media-new.php" \
	"chain,t:none,t:urlDecodeUni"
SecRule FILES "@rx (?:\<(.+)\>)" \
	"chain,capture,t:none,t:urlDecodeUni"
SecRule TX:1 "@contains =" \
	"t:none"


# CVE: CVE-2016-6634
# CVSS: 4.3
# Publish: 2016-08-07T16:59:00
# Cross-site scripting (XSS) vulnerability in the network settings page in WordPress before 4.5 allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:WordPress "@eq 1" \
	"id:66601399,chain,msg:'POL-2016-6634',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WordPress'"
SecRule REQUEST_FILENAME "@contains wp-admin/network/settings.php" \
	"chain,t:none,t:normalizePath"
SecRule ARGS_POST:first_comment_author "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-5834
# CVSS: 4.3
# Publish: 2016-06-29T14:10:00
# Cross-site scripting (XSS) vulnerability in the wp_get_attachment_link function in wp-includes/post-template.php in WordPress before 4.5.3 allows remote attackers to inject arbitrary web script or HTML via a crafted attachment name, a different vulnerability than CVE-2016-5833.
SecRule ARGS_POST:action "@streq upload-attachment" \
	"id:66601400,chain,msg:'POL-2016-5834',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WordPress'"
SecRule FILES "@contains <" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode"
SecRule REQUEST_FILENAME "@endsWith wp-admin/async-upload.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"

SecRule ARGS_POST:html-upload "@streq upload" \
	"id:66601401,chain,msg:'POL-2016-5834',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WordPress'"
SecRule FILES "@contains <" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode"
SecRule REQUEST_FILENAME "@endsWith wp-admin/media-new.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2015-7989
# CVSS: 3.5
# Publish: 2016-05-22T01:59:00
# Cross-site scripting (XSS) vulnerability in the user list table in WordPress before 4.3.1 allows remote authenticated users to inject arbitrary web script or HTML via a crafted e-mail address, a different vulnerability than CVE-2015-5714.
SecRule TX:Wordpress "@eq 1" \
	"id:66601402,chain,msg:'POL-2015-7989',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WordPress'"
SecRule ARGS_POST:email "@contains '" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@rx \/wp-admin\/(?:user\-(?:new|edit)|profile)\.php$" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2017-1001000
# CVSS: 5
# Publish: 2017-04-03T01:59:00
# The register_routes function in wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php in the REST API in WordPress 4.7.x before 4.7.2 does not require an integer identifier, which allows remote attackers to modify arbitrary pages via a request for wp-json/wp/v2/posts followed by a numeric value and a non-numeric value, as demonstrated by the wp-json/wp/v2/posts/123?id=123helloworld URI.
SecRule REQUEST_FILENAME "@contains wp/v2/posts" \
	"id:66601403,chain,msg:'POL-2017-1001000',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePathWin,t:lowercase,rev:2,severity:2,tag:'WordPress'"
SecRule ARGS:id "@rx \D" \
	"t:none"

# CVE: CVE-2014-9308
# CVSS: 6.5
# Publish: 2015-01-15T15:59:00
# Unrestricted file upload vulnerability in inc/amfphp/administration/banneruploaderscript.php in the WP EasyCart (aka WordPress Shopping Cart) plugin before 3.0.9 allows remote authenticated users to execute arbitrary code by uploading a file with an executable extension, then accessing it via a direct request to the file in products/banners/. <a href="http://cwe.mitre.org/data/definitions/434.html">CWE-434: Unrestricted Upload of File with Dangerous Type</a>
SecRule REQUEST_FILENAME "@contains inc/amfphp/administration/banneruploaderscript" \
	"id:66601404,chain,msg:'POL-2014-9308',phase:2,deny,status:403,log,t:none,t:normalizePath,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule FILES "!@rx \.(?:jpe?g|gif|bmp|png)$" \
	"t:none,t:lowercase"


# CVE: CVE-2013-3530
# CVSS: 7.5
# Publish: 2013-05-10T21:55:00
# SQL injection vulnerability in playlist.php in the Spiffy XSPF Player plugin 0.1 for WordPress allows remote attackers to execute arbitrary SQL commands via the playlist_id parameter.
SecRule REQUEST_FILENAME "@endsWith /wp-content/plugins/spiffy/playlist.php" \
	"id:66601405,chain,msg:'POL-2013-3530',phase:2,deny,status:403,log,t:lowercase,t:normalizePath,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:playlist_id "@rx \D" \
	"t:none"


# CVE: CVE-2013-3479
# CVSS: 6.8
# Publish: 2013-09-05T03:27:00
# Cross-site request forgery (CSRF) vulnerability in the ShareThis plugin before 7.0.6 for WordPress allows remote attackers to hijack the authentication of administrators for requests that modify this plugin's settings.
#5001038
SecRule REQUEST_URI "!@rx wp-admin/.*$" \
        "id:66601406,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5001038"

SecMarker BEGIN-RULE5001038
SecRule REQUEST_METHOD "@streq GET" \
        "id:66601407,chain,phase:2,pass,nolog,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains sharethis.php" \
        "setvar:'SESSION.TIMEOUT=3600',setvar:'SESSION.sharethis=1',expirevar:'SESSION.sharethis=3600',t:none,t:lowercase"

SecRule SESSION:sharethis "@eq 1" \
        "id:66601408,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule REQUEST_METHOD "@streq POST" \
        "id:66601409,chain,msg:'POL-2013-3479',phase:2,deny,status:403,log,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@rx index.php" \
        "chain,t:none,t:lowercase"
SecRule ARGS_POST:st_widget "@rx ^.*$" "

SecMarker END-RULE5001038


# CVE: CVE-2013-5963
# CVSS: 6.8
# Publish: 2013-09-30T22:55:00
# Unrestricted file upload vulnerability in multi.php in Simple Dropbox Upload plugin before 1.8.8.1 for WordPress allows remote attackers to execute arbitrary code by uploading a file with an executable extension, then accessing it via a direct request to the file in wp-content/uploads/wpdb/. Per: http://cwe.mitre.org/data/definitions/434.html
# 
# 'CWE-434: Unrestricted Upload of File with Dangerous Type'
# 
# 
#5001039
SecRule REQUEST_URI "!@rx /wp-content/uploads/wpdb/" \
        "id:66601410,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5001039"

SecMarker BEGIN-RULE5001039
SecRule REQUEST_FILENAME "@rx \.(?:php|js|p|pl|sh|py)$" \
        "id:66601411,msg:'POL-2013-5963',phase:2,deny,status:403,log,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecMarker END-RULE5001039


# CVE: CVE-2014-4517
# CVSS: 4.3
# Publish: 2014-10-21T15:55:00
# Cross-site scripting (XSS) vulnerability in getNetworkSites.php in the CBI Referral Manager plugin 1.2.1 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the searchString parameter.
SecRule REQUEST_FILENAME "@endsWith getnetworksites.php" \
	"id:66601412,chain,msg:'POL-2014-4517',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:search "@streq filter" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:searchString "@rx \'" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2016-1000146
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin pondol-formmail v1.1
SecRule TX:WordPress "@eq 1" \
	"id:66601413,chain,msg:'POL-2016-1000146',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith /pages/admin-mail-info.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule ARGS_GET:itemid "@rx <|\"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-5917
# CVSS: 7.5
# Publish: 2013-09-23T10:18:00
# SQL injection vulnerability in wp-comments-post.php in the NOSpam PTI plugin 2.1 for WordPress allows remote attackers to execute arbitrary SQL commands via the comment_post_ID parameter.
SecRule REQUEST_FILENAME "@eq wp-comments-post.php" \
	"id:66601414,chain,msg:'POL-2013-5917',deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:comment_post_ID "@rx \D" \
	"t:none"


# CVE: CVE-2016-1000152
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin tidio-form v1.0
SecRule ARGS_GET:ajaxURL "@contains <" \
	"id:66601415,chain,msg:'POL-2016-1000152',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith ooawpframework/js/ajax/ooaajax.js.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"

SecRule ARGS_GET:formId "@contains \"" \
	"id:66601416,chain,msg:'POL-2016-1000152',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith tidio-form/popup-insert-help.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2016-1000148
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin s3-video v0.983
SecRule ARGS_GET:media "@contains \"" \
	"id:66601417,chain,msg:'POL-2016-1000148',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith views/video-management/preview_video.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2016-1000139
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin infusionsoft v1.5.11
SecRule TX:WordPress "@eq 1" \
	"id:66601418,chain,msg:'POL-2016-1000139',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith /examples/leadscoring.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule ARGS_GET:ContactId "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-1000151
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin tera-charts v1.0
SecRule TX:WordPress "@eq 1" \
	"id:66601419,chain,msg:'POL-2016-1000151',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@contains /charts/treemap.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule ARGS_GET:fn "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-1000145
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin pondol-carousel v1.0
SecRule ARGS_GET:itemid "@contains <" \
	"id:66601420,chain,msg:'POL-2016-1000145',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith pondol-carousel/pages/admin_create.php" \
	"t:none,t:urlDecodeUni,t:normalizePath"


# CVE: CVE-2016-1000143
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin photoxhibit v2.1.8
# SecRule TX:WordPress "@eq 1" \
# 	"id:66601421,chain,msg:'POL-2016-1000143',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
# SecRule ARGS_GET:page "@pm px_manage px_build" \
# 	"chain,t:none"
# SecRule ARGS_GET:gid "@pm \" <" \
# 	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-1000154
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin whizz v1.0.7
SecRule TX:WordPress "@eq 1" \
	"id:66601422,chain,msg:'POL-2016-1000154',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith /plugins/delete-plugin.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule ARGS_GET:plugin "@rx <|\"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-1000144
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin photoxhibit v2.1.8
SecRule TX:WordPress "@eq 1" \
	"id:66601423,chain,msg:'POL-2016-1000144',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith /common/inc/pages/edit_styles.php" \
	"chain,t:none,t:normalizePath,t:lowercase"
SecRule ARGS_GET "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-6523
# CVSS: 6.8
# Publish: 2015-08-19T15:59:00
# Cross-site request forgery (CSRF) vulnerability in the Portfolio plugin before 1.05 for WordPress allows remote attackers to hijack the authentication of administrators for requests that have unspecified impact via a request to the instagram-portfolio page in wp-admin/options-general.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601424,chain,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq instagram-portfolio" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_GET "@eq 1" \
	"setvar:'SESSION.instagram-portfolio=1',expirevar:'SESSION.instagram-portfolio=300'"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601425,chain,msg:'POL-2015-6523',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq instagram-portfolio" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:instagram-portfolio "!@eq 1" \
	"t:none"


# CVE: CVE-2014-4532
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in templates/printAdminUsersList_Footer.tpl.php in the GarageSale plugin before 1.2.3 for WordPress allows remote attackers to inject arbitrary web script or HTML via the page parameter.
SecRule REQUEST_FILENAME "@contains wp-content/plugins/garagesale/templates/printAdminUsersList_Footer.tpl.php" \
	"id:66601426,chain,msg:'POL-2014-4532',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@rx \"" "


# CVE: CVE-2014-4854
# CVSS: 4.3
# Publish: 2014-07-10T16:55:00
# Cross-site scripting (XSS) vulnerability in the WP Construction Mode plugin 1.8 for WordPress allows remote attackers to inject arbitrary web script or HTML via the wuc_logo parameter in a save action to wp-admin/admin.php.
SecRule REQUEST_FILENAME "@endsWith wp-admin/admin.php" \
	"id:66601427,chain,msg:'POL-2014-4854',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:wuc_logo "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4848
# CVSS: 4.3
# Publish: 2014-07-10T16:55:00
# Cross-site scripting (XSS) vulnerability in the Blogstand Banner (blogstand-smart-banner) plugin 1.0 for WordPress allows remote attackers to inject arbitrary web script or HTML via the bs_blog_id parameter to wp-admin/options-general.php.
SecRule REQUEST_FILENAME "@endsWith wp-admin/options-general.php" \
	"id:66601428,chain,msg:'POL-2014-4848',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:bs_blog_id "@rx \"" "


# CVE: CVE-2014-4938
# CVSS: 7.5
# Publish: 2014-07-11T20:55:00
# SQL injection vulnerability in the WP Rss Poster (wp-rss-poster) plugin 1.0.0 for WordPress allows remote attackers to execute arbitrary SQL commands via the id parameter in the wrp-add-new page to wp-admin/admin.php.
SecRule REQUEST_URI "@contains wp-admin/admin.php" \
	"id:66601429,chain,msg:'POL-2014-4938',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains wrp-add-new" \
	"chain"
SecRule ARGS_GET:id "@rx \D" "


# CVE: CVE-2014-4541
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in shortcode-generator/preview-shortcode-external.php in the OMFG Mobile Pro plugin 1.1.26 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the shortcode parameter.
SecRule REQUEST_FILENAME "@contains preview-shortcode-external.php" \
	"id:66601430,chain,msg:'POL-2014-4541',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:shortcode "@contains >" "


# CVE: CVE-2014-4531
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in main_page.php in the Game tabs plugin 0.4.0 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the n parameter.
SecRule REQUEST_FILENAME "@contains main_page.php" \
	"id:66601431,chain,msg:'POL-2014-4531',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:n "@contains >" "


# CVE: CVE-2012-4915
# CVSS: 5
# Publish: 2014-05-29T14:19:00
# Directory traversal vulnerability in the Google Doc Embedder plugin before 2.5.4 for WordPress allows remote attackers to read arbitrary files via a .. (dot dot) in the file parameter to libs/pdf.php.
SecRule REQUEST_FILENAME "@contains libs/pdf.php" \
	"id:66601432,chain,msg:'POL-2012-4915',phase:2,deny,status:403,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:file "@contains ../" \
	"t:none,t:normalizePath"


# CVE: CVE-2014-3921
# CVSS: 4.3
# Publish: 2014-05-30T14:55:00
# Cross-site scripting (XSS) vulnerability in popup.php in the Simple Popup Images plugin for WordPress allows remote attackers to inject arbitrary web script or HTML via the z parameter.
SecRule REQUEST_FILENAME "@endsWith popup.php" \
	"id:66601433,chain,msg:'POL-2014-3921',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:z "@rx \"" "


# CVE: CVE-2014-4846
# CVSS: 4.3
# Publish: 2014-07-10T14:55:00
# Cross-site scripting (XSS) vulnerability in the Meta Slider (ml-slider) plugin 2.5 for WordPress allows remote attackers to inject arbitrary web script or HTML via the id parameter to wp-admin/admin.php.
SecRule REQUEST_FILENAME "@endsWith wp-admin/admin.php" \
	"id:66601434,chain,msg:'POL-2014-4846',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq metaslider" \
	"chain,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode"
SecRule ARGS_GET:id "@rx \D" "


# CVE: CVE-2014-4847
# CVSS: 4.3
# Publish: 2014-07-10T16:55:00
# Cross-site scripting (XSS) vulnerability in the Random Banner plugin 1.1.2.1 for WordPress allows remote attackers to inject arbitrary web script or HTML via the buffercode_RBanner_url_banner1 parameter in an update action to wp-admin/options.php.
SecRule REQUEST_FILENAME "@endsWith wp-admin/options.php" \
	"id:66601435,chain,msg:'POL-2014-4847',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:buffercode_RBanner_url_banner1 "@contains '" "


# CVE: CVE-2014-9473
# CVSS: 7.5
# Publish: 2015-01-08T00:59:00
# Unrestricted file upload vulnerability in lib_nonajax.php in the CformsII plugin 14.7 and earlier for WordPress allows remote attackers to execute arbitrary code by uploading a file with an executable extension via the cf_uploadfile2[] parameter, then accessing the file via a direct request to the file in the default upload directory. <a href="http://cwe.mitre.org/data/definitions/434.html">CWE-434: Unrestricted Upload of File with Dangerous Type</a>
SecRule &ARGS_GET:page_id "@ge 1" \
	"id:66601436,chain,msg:'POL-2014-9473',phase:2,deny,status:403,log,t:none,rev:5,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule &ARGS_POST:/^sendbutton\d*$/ "@ge 1" \
	"chain,t:none"
SecRule FILES "!@rx \.(?:pdf|doc|docx|txt)$" \
	"t:none,t:lowercase"


# CVE: CVE-2014-9444
# CVSS: 4.3
# Publish: 2015-01-02T20:59:00
# Cross-site scripting (XSS) vulnerability in the Frontend Uploader plugin 0.9.2 for WordPress allows remote attackers to inject arbitrary web script or HTML via the errors[fu-disallowed-mime-type][0][name] parameter to the default URI.
SecRule ARGS_GET:response "@streq fu-error" \
	"id:66601437,chain,msg:'POL-2014-9444',phase:1,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:p "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:/errors\[fu-disallowed-mime-type]\[\w*]\[\w*]/ "@rx <" \
	"t:none,t:urlDecodeUni,t:htmlEntitydecode"


# CVE: CVE-2014-9178
# CVSS: 7.5
# Publish: 2014-12-02T16:59:00
# Multiple SQL injection vulnerabilities in classes/ajax.php in the Smarty Pants Plugins SP Project & Document Manager plugin (sp-client-document-manager) 2.4.1 and earlier for WordPress allow remote attackers to execute arbitrary SQL commands via the (1) vendor_email[] parameter in the email_vendor function or id parameter in the (2) download_project, (3) download_archive, or (4) remove_cat function.
SecRule REQUEST_FILENAME "@endsWith sp-client-document-manager/ajax.php" \
	"id:66601438,chain,msg:'POL-2014-9178',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:function "@pm download-project download-archive remove-category email-vendor" \
	"chain,t:none"
SecRule ARGS_POST:vendor_email[]|ARGS_GET:id "@rx \D" \
	"t:none"


# CVE: CVE-2014-9174
# CVSS: 4.3
# Publish: 2014-12-02T16:59:00
# Cross-site scripting (XSS) vulnerability in the Google Analytics by Yoast (google-analytics-for-wordpress) plugin before 5.1.3 for WordPress allows remote attackers to inject arbitrary web script or HTML via the "Manually enter your UA code" (manual_ua_code_field) field in the General Settings.
# SecRule TX:WordPress "@eq 1" \
# 	"id:66601439,chain,msg:'POL-2014-9174',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
# SecRule ARGS_GET:page "@streq yst_ga_settings" \
# 	"chain,t:none,t:lowercase"
# SecRule ARGS_POST:manual_ua_code_field "@pm \" <" \
# 	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-6522
# CVSS: 7.5
# Publish: 2015-08-19T15:59:00
# SQL injection vulnerability in the WP Symposium plugin before 15.8 for WordPress allows remote attackers to execute arbitrary SQL commands via the size parameter to get_album_item.php.
SecRule REQUEST_FILENAME "@endsWith wp-symposium/get_album_item.php" \
	"id:66601440,chain,msg:'POL-2015-6522',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:size "@rx \D" \
	"t:none"


# CVE: CVE-2015-5535
# CVSS: 4.3
# Publish: 2015-08-13T14:59:00
# Cross-site scripting (XSS) vulnerability in the qTranslate plugin 2.5.39 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the edit parameter in the qtranslate page to wp-admin/options-general.php.
SecRule ARGS_GET:page "@streq qtranslate" \
	"id:66601441,chain,msg:'POL-2015-5535',phase:1,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:edit "@rx \"" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-4133
# CVSS: 7.5
# Publish: 2015-05-28T14:59:00
# Unrestricted file upload vulnerability in admin/scripts/FileUploader/php.php in the ReFlex Gallery plugin before 3.1.4 for WordPress allows remote attackers to execute arbitrary PHP code by uploading a file with a PHP extension, then accessing it via a direct request to the file in uploads/ directory. <a href="http://cwe.mitre.org/data/definitions/434.html">CWE-434: Unrestricted Upload of File with Dangerous Type</a>
SecRule REQUEST_FILENAME "@endsWith reflex-gallery/admin/scripts/FileUploader/php.php" \
	"id:66601442,chain,msg:'POL-2015-4133',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:Year|ARGS_GET:Month "@ge 1" \
	"chain,t:none"
SecRule FILES "!@rx \.(?:jpe?g|gif|bmp|png)$" \
	"t:none,t:lowercase"


# CVE: CVE-2014-4940
# CVSS: 5
# Publish: 2014-07-11T20:55:00
# Multiple directory traversal vulnerabilities in Tera Charts (tera-charts) plugin 0.1 for WordPress allow remote attackers to read arbitrary files via a .. (dot dot) in the fn parameter to (1) charts/treemap.php or (2) charts/zoomabletreemap.php.
SecRule REQUEST_FILENAME "@contains charts" \
	"id:66601443,chain,msg:'POL-2014-4940',deny,status:403,t:none,t:lowercase,rev:4,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule MATCHED_VAR "@pm treemap.php zoomabletreemap.php" \
	"chain,t:none"
SecRule ARGS_GET:fn "@contains .." \
	"t:none"


# CVE: CVE-2015-1365
# CVSS: 5
# Publish: 2015-01-27T20:04:00
# Directory traversal vulnerability in pixabay-images.php in the Pixabay Images plugin before 2.4 for WordPress allows remote attackers to write to arbitrary files via a .. (dot dot) in the q parameter.
SecRule &ARGS_POST:pixabay_upload "@ge 1" \
	"id:66601444,chain,msg:'POL-2015-1365',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:q "@contains .." \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-1366
# CVSS: 4.3
# Publish: 2015-01-27T20:04:00
# Cross-site scripting (XSS) vulnerability in pixabay-images.php in the Pixabay Images plugin before 2.4 for WordPress allows remote attackers to inject arbitrary web script or HTML via the image_user parameter.
SecRule &ARGS_POST:pixabay_upload "@ge 1" \
	"id:66601445,chain,msg:'POL-2015-1366',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:image_user "@rx (<|\")" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-9173
# CVSS: 7.5
# Publish: 2014-12-02T16:59:00
# SQL injection vulnerability in view.php in the Google Doc Embedder plugin before 2.5.15 for WordPress allows remote attackers to execute arbitrary SQL commands via the gpid parameter.
SecRule REQUEST_FILENAME "@endsWith google-document-embedder/view.php" \
	"id:66601446,chain,msg:'POL-2014-9173',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:embedded "@ge 1" \
	"chain,t:none"
SecRule ARGS_GET:gpid "@rx \D" \
	"t:none"


# CVE: CVE-2014-9100
# CVSS: 4.3
# Publish: 2014-11-26T15:59:00
# Cross-site scripting (XSS) vulnerability in the WhyDoWork AdSense plugin 1.2 for WordPress allows remote attackers to inject arbitrary web script or HTML via the idcode parameter in the whydowork_adsense page to wp-admin/options-general.php.
SecRule ARGS_GET:page "@streq whydowork_adsense" \
	"id:66601447,chain,msg:'POL-2014-9100',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:idcode "@rx \D" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"t:none,t:lowercase"


# CVE: CVE-2010-1186
# CVSS: 4.3
# Publish: 2010-04-07T15:30:00
# Cross-site scripting (XSS) vulnerability in xml/media-rss.php in the NextGEN Gallery plugin before 1.5.2 for WordPress allows remote attackers to inject arbitrary web script or HTML via the mode parameter.
SecRule ARGS_GET:mode "!@within last_pictures gallery album" \
	"id:66601448,chain,msg:'POL-2010-1186',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith xml/media-rss.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2015-4413
# CVSS: 4.3
# Publish: 2015-06-24T14:59:00
# Cross-site scripting (XSS) vulnerability in the new_fb_sign_button function in nextend-facebook-connect.php in Nextend Facebook Connect plugin before 1.5.6 for WordPress allows remote attackers to inject arbitrary web script or HTML via the redirect_to parameter.
SecRule ARGS_GET:redirect_to "@contains <" \
	"id:66601449,chain,msg:'POL-2015-4413',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith wp-login.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-5308
# CVSS: 7.5
# Publish: 2015-11-02T19:59:00
# Multiple SQL injection vulnerabilities in cs_admin_users.php in the wp-championship plugin 5.8 for WordPress allow remote attackers to execute arbitrary SQL commands via the (1) user, (2) isadmin, (3) mail service, (4) mailresceipt, (5) stellv, (6) champtipp, (7) tippgroup, or (8) userid parameter.
SecRule ARGS_GET:page "@streq wp-championship/cs_admin_users.php" \
	"id:66601450,chain,msg:'POL-2015-5308',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:userid "@rx \D" \
	"t:none,t:urlDecodeUni"

SecRule ARGS_GET:page "@streq wp-championship/cs_admin_users.php" \
	"id:66601451,chain,msg:'POL-2015-5308',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:user|ARGS_POST:mailservice|ARGS_POST:mailreceipt|ARGS_POST:isadmin|ARGS_POST:stellv|ARGS_POST:champtipp|ARGS_POST:tippgroup "@rx \W" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-9442
# CVSS: 6.5
# Publish: 2015-01-02T19:59:00
# SQL injection vulnerability in models/Cart66Ajax.php in the Cart66 Lite plugin before 1.5.4 for WordPress allows remote authenticated users to execute arbitrary SQL commands via the q parameter in a promotionProductSearch action to wp-admin/admin-ajax.php.
SecRule ARGS_GET:action "@streq promotionproductsearch" \
	"id:66601452,chain,msg:'POL-2014-9442',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:q "@rx \'" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith admin-ajax.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-2973
# CVSS: 4.3
# Publish: 2015-07-24T16:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Welcart plugin before 1.4.18 for WordPress allow remote attackers to inject arbitrary web script or HTML via the usces_referer parameter to (1) classes/usceshop.class.php, (2) includes/edit-form-advanced.php, (3) includes/edit-form-advanced30.php, (4) includes/edit-form-advanced34.php, (5) includes/member_edit_form.php, (6) includes/order_edit_form.php, (7) includes/order_list.php, or (8) includes/usces_item_master_list.php, related to admin.php.
SecRule ARGS:usces_referer "@contains \"" \
	"id:66601453,chain,msg:'POL-2015-2973',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains usces" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_COOKIES_NAMES "@contains wordpress" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"t:none,t:lowercase"


# CVE: CVE-2014-4547
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in templates/default/index_ajax.php in the Rezgo Online Booking plugin before 1.8.2 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) tags or (2) search_for parameter.
SecRule REQUEST_FILENAME "@contains rezgo-online-booking/templates/default/index_ajax.php" \
	"id:66601454,chain,msg:'POL-2014-4547',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:search_for|ARGS_GET:tags "@contains '" \
	"t:none,t:urlDecodeUni"

# CVE: CVE-2016-1000153
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin tidio-gallery v1.1
SecRule REQUEST_BASENAME "@streq popup-insert-help.php" \
	"id:66601455,chain,msg:'POL-2016-1000153',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:galleryId "@rx \W" \
	"t:none"


# CVE: CVE-2014-4941
# CVSS: 5
# Publish: 2014-07-11T20:55:00
# Absolute path traversal vulnerability in Cross-RSS (wp-cross-rss) plugin 1.7 for WordPress allows remote attackers to read arbitrary files via a full pathname in the rss parameter to proxy.php.
SecRule REQUEST_FILENAME "@endsWith proxy.php" \
	"id:66601456,chain,msg:'POL-2014-4941',phase:2,deny,status:403,t:none,t:urlDecodeUni,t:lowercase,t:removeWhitespace,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:rss "@beginsWith /" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"


# CVE: CVE-2014-5180
# CVSS: 6.5
# Publish: 2014-08-06T19:55:00
# SQL injection vulnerability in the videos page in the HDW Player Plugin (hdw-player-video-player-video-gallery) 2.4.2 for WordPress allows remote authenticated administrators to execute arbitrary SQL commands via the id parameter in the edit action to wp-admin/admin.php.
SecRule REQUEST_URI "@contains wp-admin/admin.php" \
	"id:66601457,chain,msg:'POL-2014-5180',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:removeWhitespace,t:htmlEntityDecode,multiMatch,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq videos" \
	"chain,t:none,t:urlDecodeUni,t:lowercase,t:removeWhitespace,t:htmlEntityDecode"
SecRule ARGS_GET:opt "@streq edit" \
	"chain,t:none,t:urlDecodeUni,t:lowercase,t:removeWhitespace,t:htmlEntityDecode"
SecRule ARGS_GET:id "@rx [^0-9]" \
	"t:none,t:urlDecodeUni,t:removeWhitespace,t:htmlEntityDecode"


# CVE: CVE-2014-5190
# CVSS: 4.3
# Publish: 2014-08-07T11:13:00
# Cross-site scripting (XSS) vulnerability in captcha-secureimage/test/index.php in the SI CAPTCHA Anti-Spam plugin 2.7.4 for WordPress allows remote attackers to inject arbitrary web script or HTML via the PATH_INFO.
SecRule REQUEST_FILENAME "@contains captcha-secureimage/test/index.php" \
	"id:66601458,chain,msg:'POL-2014-5190',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:removeWhitespace,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_URI "@rx \"" \
	"t:none,t:urlDecodeUni,t:removeWhitespace,t:htmlEntityDecode"


# CVE: CVE-2014-5196
# CVSS: 4.3
# Publish: 2014-08-12T20:55:00
# Cross-site request forgery (CSRF) vulnerability in improved-user-search-in-backend.php in the backend in the Improved user search in backend plugin before 1.2.5 for WordPress allows remote attackers to hijack the authentication of administrators for requests that insert XSS sequences via the iusib_meta_fields parameter.
#5001146
SecRule REQUEST_URI "!@rx \/options\-general\.php" \
        "id:66601459,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5001146"

SecMarker BEGIN-RULE5001146
SecRule ARGS_POST:iusib_meta_fields "@rx [^\w\"\'\,\-]" \
        "id:66601460,phase:2,deny,status:403,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:removeWhitespace,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule REQUEST_METHOD "@streq GET" \
        "id:66601461,phase:2,pass,setvar:'SESSION.TIMEOUT=600',setvar:'SESSION.backend=1',expirevar:'SESSION.backend=600',nolog,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:removeWhitespace,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule SESSION:backend "@eq 1" \
        "id:66601462,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule REQUEST_METHOD "@streq POST" \
        "id:66601463,chain,msg:'POL-2014-5196',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:removeWhitespace,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains improved-user-search-in-backend" \
        "chain,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:normalizePath,t:removeWhitespace,t:lowercase,multiMatch"
SecRule &SESSION:backend "!@eq 1" "

SecMarker END-RULE5001146

# CVE: CVE-2014-5181
# CVSS: 5
# Publish: 2014-08-06T19:55:00
# Directory traversal vulnerability in lastfm-proxy.php in the Last.fm Rotation (lastfm-rotation) plugin 1.0 for WordPress allows remote attackers to read arbitrary files via a .. (dot dot) in the snode parameter.
SecRule REQUEST_FILENAME "@endsWith astfm-proxy.php" \
	"id:66601464,chain,msg:'POL-2014-5181',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,t:normalizePath,t:removeWhitespace,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:snode "@beginsWith /" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,t:normalizePath"


# CVE: CVE-2014-5182
# CVSS: 6
# Publish: 2014-08-06T19:55:00
# Multiple SQL injection vulnerabilities in the yawpp plugin 1.2 for WordPress allow remote authenticated users with Contributor privileges to execute arbitrary SQL commands via vectors related to (1) admin_functions.php or (2) admin_update.php, as demonstrated by the id parameter in the update action to wp-admin/admin.php.
SecRule REQUEST_URI "@contains wp-admin/admin.php" \
	"id:66601465,chain,msg:'POL-2014-5182',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,t:normalizePath,t:removeWhitespace,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq yawpp" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:removeWhitespace,t:lowercase"
SecRule ARGS_GET:id "@rx \D" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-7139
# CVSS: 4.3
# Publish: 2014-10-10T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Contact Form DB (aka CFDB and contact-form-7-to-database-extension) plugin before 2.8.16 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) form or (2) enc parameter in the CF7DBPluginShortCodeBuilder page to wp-admin/admin.php.
SecRule ARGS_GET:page "@streq CF7DBPluginShortCodeBuilder" \
	"id:66601466,chain,msg:'POL-2014-7139',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:form|ARGS_GET:enc "@rx <|\"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-7320
# CVSS: 4.3
# Publish: 2015-09-29T19:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in cpabc_appointments_admin_int_bookings_list.inc.php in the Appointment Booking Calendar plugin before 1.1.8 for WordPress allow remote attackers to inject arbitrary web script or HTML via unspecified vectors.
SecRule ARGS_GET:page "@streq cpabc_appointments" \
	"id:66601467,chain,msg:'POL-2015-7320',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:name|ARGS_GET:ics "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2013-5977
# CVSS: 6.8
# Publish: 2013-11-01T15:55:00
# Cross-site request forgery (CSRF) vulnerability in Cart66Product.php in the Cart66 Lite plugin before 1.5.1.15 for WordPress allows remote attackers to hijack the authentication of administrators for requests that (1) create or modify products or conduct cross-site scripting (XSS) attacks via the (2) Product name or (3) Price description field in a product save action via a request to wp-admin/admin.php.
#5001044
SecRule REQUEST_URI "!@rx /wp-admin/admin\.php" \
        "id:66601468,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5001044"

SecMarker BEGIN-RULE5001044
SecRule REQUEST_METHOD "@streq GET" \
        "id:66601469,chain,phase:2,pass,nolog,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule QUERY_STRING "@rx page=cart66-products" \
        "setvar:'SESSION.TIMEOUT=3600',setvar:'SESSION.cart66=1',expirevar:'SESSION.cart66=3600',t:none,t:urlDecodeUni"

SecRule SESSION:cart66 "@eq 1" \
        "id:66601470,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule REQUEST_METHOD "@streq POST" \
        "id:66601471,chain,msg:'POL-2013-5977',phase:2,deny,status:403,log,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule QUERY_STRING "@rx page=cart66-products" \
        "chain,t:none,t:urlDecodeUni"
SecRule ARGS_POST:cart66-action "@rx ^save product$" "

SecMarker END-RULE5001044


# CVE: CVE-2013-6797
# CVSS: 6.8
# Publish: 2013-11-19T04:50:00
# Cross-site request forgery (CSRF) vulnerability in bluewrench-video-widget.php in the Blue Wrench Video Widget plugin before 2.0.0 for WordPress allows remote attackers to hijack the authentication of administrators for requests that embed arbitrary URLs via the bw_url parameter in the bw-videos page to wp-admin/admin.php, as demonstrated by embedding a URL to a JavaScript file.
#5001047
SecRule REQUEST_URI "!@rx /wp-admin/admin\.php" \
        "id:66601472,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5001047"

SecMarker BEGIN-RULE5001047
SecRule REQUEST_METHOD "@streq GET" \
        "id:66601473,chain,phase:2,pass,nolog,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule QUERY_STRING "@rx page=bw-videos" \
        "setvar:'SESSION.TIMEOUT=3600',setvar:'SESSION.wrench=1',expirevar:'SESSION.wrench=3600',t:none,t:urlDecodeUni"

SecRule SESSION:wrench "@eq 1" \
        "id:66601474,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule REQUEST_METHOD "@streq POST" \
        "id:66601475,chain,msg:'POL-2013-6797',phase:2,deny,status:403,log,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule QUERY_STRING "@rx page=bw-videos" \
        "chain,t:none,t:urlDecodeUni"
SecRule ARGS_POST:action "@streq save" "

SecMarker END-RULE5001047


# CVE: CVE-2013-3526
# CVSS: 4.3
# Publish: 2013-05-10T21:55:00
# Cross-site scripting (XSS) vulnerability in js/ta_loaded.js.php in the Traffic Analyzer plugin, possibly 3.3.2 and earlier, for WordPress allows remote attackers to inject arbitrary web script or HTML via the aoid parameter.
SecRule REQUEST_FILENAME "@contains js/ta_loaded.js.php" \
	"id:66601476,chain,msg:'POL-2013-3526',phase:2,deny,status:403,t:none,t:lowercase,t:urlDecodeUni,t:normalizePath,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:aoid "@rx \D" \
	"t:none"


# CVE: CVE-2014-6242
# CVSS: 6.5
# Publish: 2014-10-02T14:55:00
# Multiple SQL injection vulnerabilities in the All In One WP Security & Firewall plugin before 3.8.3 for WordPress allow remote authenticated users to execute arbitrary SQL commands via the (1) orderby or (2) order parameter in the aiowpsec page to wp-admin/admin.php.  NOTE: this can be leveraged using CSRF to allow remote attackers to execute arbitrary SQL commands.
SecRule ARGS_GET:page "@streq aiowpsec" \
	"id:66601477,chain,msg:'POL-2014-6242',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:orderby|ARGS_GET:order "!@rx ^\w+$" \
	"t:none"


# CVE: CVE-2014-4664
# CVSS: 4.3
# Publish: 2014-11-06T15:55:00
# Cross-site scripting (XSS) vulnerability in the Wordfence Security plugin before 5.1.4 for WordPress allows remote attackers to inject arbitrary web script or HTML via the whoisval parameter on the WordfenceWhois page to wp-admin/admin.php.
SecRule ARGS_GET:page "@streq WordfenceWhois" \
	"id:66601478,chain,msg:'POL-2014-4664',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:whoisval "@rx <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-6315
# CVSS: 4.3
# Publish: 2014-10-10T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Web-Dorado Photo Gallery plugin 1.1.30 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) callback, (2) dir, or (3) extensions parameter in an addImages action to wp-admin/admin-ajax.php.
SecRule ARGS_GET:action "@streq addImages" \
	"id:66601479,chain,msg:'POL-2014-6315',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:callback|ARGS_GET:dir|ARGS_GET:extensions "@rx <|\"" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode"
SecRule REQUEST_FILENAME "@endsWith admin-ajax.php" \
	"t:none,t:lowercase"


# CVE: CVE-2014-5460
# CVSS: 6.5
# Publish: 2014-09-11T15:55:00
# Unrestricted file upload vulnerability in the Tribulant Slideshow Gallery plugin before 1.4.7 for WordPress allows remote authenticated users to execute arbitrary code by uploading a PHP file, then accessing it via a direct request to the file in wp-content/uploads/slideshow-gallery/.
SecRule ARGS_GET:page "@streq slideshow-slides" \
	"id:66601480,chain,msg:'POL-2014-5460',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:method "@streq save" \
	"chain,t:none,t:lowercase"
SecRule FILES "!@rx \.(?:jpe?g|gif|bmp|png)$" \
	"t:none,t:lowercase"


# CVE: CVE-2014-6243
# CVSS: 4.3
# Publish: 2014-10-10T14:55:00
# Cross-site scripting (XSS) vulnerability in the EWWW Image Optimizer plugin before 2.0.2 for WordPress allows remote attackers to inject arbitrary web script or HTML via the error parameter in the ewww-image-optimizer.php page to wp-admin/options-general.php, which is not properly handled in a pngout error message.
SecRule ARGS_GET:page "@streq ewww-image-optimizer/ewww-image-optimizer.php" \
	"id:66601481,chain,msg:'POL-2014-6243',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:error "@rx <" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"t:none,t:lowercase"


# CVE: CVE-2014-4551
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in diagnostics/test.php in the Social Connect plugin 1.0.4 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the testing parameter.
SecRule ARGS_POST:option_page "@streq social-connect-settings-group" \
	"id:66601482,chain,msg:'POL-2014-4551',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:social_connect_facebook_api_key|ARGS_POST:social_connect_facebook_secret_key|ARGS_POST:social_connect_twitter_consumer_key|ARGS_POST:social_connect_twitter_consumer_secret "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-7958
# CVSS: 4.3
# Publish: 2014-11-06T15:55:00
# Cross-site scripting (XSS) vulnerability in admin/htaccess/bpsunlock.php in the BulletProof Security plugin before .51.1 for WordPress allows remote attackers to inject arbitrary web script or HTML via the dbhost parameter.
SecRule REQUEST_FILENAME "@endsWith htaccess/bpsunlock.php" \
	"id:66601483,chain,msg:'POL-2014-7958',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:dbhost "@rx <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-10012
# CVSS: 4.3
# Publish: 2015-01-13T11:59:00
# Cross-site scripting (XSS) vulnerability in the Another WordPress Classifieds Plugin plugin for WordPress allows remote attackers to inject arbitrary web script or HTML via the query string to the default URI.
SecRule ARGS_GET:page "@contains awpcp-listings" \
	"id:66601484,chain,msg:'POL-2014-10012',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:action "@rx <" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_COOKIES_NAMES "@contains wordpress" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-4703
# CVSS: 5
# Publish: 2016-01-12T19:59:00
# Absolute path traversal vulnerability in mysqldump_download.php in the WordPress Rename plugin 1.0 for WordPress allows remote attackers to read arbitrary files via a full pathname in the dumpfname parameter.
SecRule REQUEST_FILENAME "@contains mysqldump_download" \
	"id:66601485,chain,msg:'POL-2015-4703',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:dumpfname "@beginsWith /" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2011-4671
# CVSS: 7.5
# Publish: 2011-12-02T18:55:00
# SQL injection vulnerability in adrotate/adrotate-out.php in the AdRotate plugin 3.6.6, and other versions before 3.6.8, for WordPress allows remote attackers to execute arbitrary SQL commands via the track parameter (aka redirect URL).
SecRule REQUEST_FILENAME "@endsWith adrotate/adrotate-out.php" \
	"id:66601486,chain,msg:'POL-2011-4671',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:track "@rx \'" \
	"t:none,t:base64Decode"

SecRule REQUEST_FILENAME "@endsWith adrotate/adrotate-out.php" \
	"id:66601487,chain,msg:'POL-2011-4671',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:trackerid "@rx \D" \
	"t:none"


# CVE: CVE-2015-7791
# CVSS: 6.5
# Publish: 2015-12-29T22:59:00
# Multiple SQL injection vulnerabilities in admin.php in the Collne Welcart plugin before 1.5.3 for WordPress allow remote authenticated users to execute arbitrary SQL commands via the (1) search[column] or (2) switch parameter.
SecRule ARGS_GET:page "@streq usces_memberlist" \
	"id:66601488,chain,msg:'POL-2015-7791',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:switch "!@rx ^[\w-]+$" \
	"t:none"

SecRule ARGS_GET:page "@streq usces_memberlist" \
	"id:66601489,chain,msg:'POL-2015-7791',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:search[column] "!@rx ^[\w-]+$" \
	"t:none"


# CVE: CVE-2014-7151
# CVSS: 4.3
# Publish: 2016-01-08T21:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the NEX-Forms Lite plugin 2.1.0 for WordPress allow remote attackers to inject arbitrary web script or HTML via the form_fields parameter in a (1) do_edit or (2) do_insert action to wp-admin/admin-ajax.php.
SecRule ARGS_POST:action "@pm do_edit do_insert" \
	"id:66601490,chain,msg:'POL-2014-7151',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:form_fields "@rx <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-4694
# CVSS: 5
# Publish: 2016-01-08T20:59:00
# Directory traversal vulnerability in download.php in the Zip Attachments plugin before 1.5.1 for WordPress allows remote attackers to read arbitrary files via a .. (dot dot) in the za_file parameter.
SecRule REQUEST_FILENAME "@contains download" \
	"id:66601491,chain,msg:'POL-2015-4694',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:za_file "@contains .." \
	"t:none"


# CVE: CVE-2017-6095
# CVSS: 7.5
# Publish: 2017-02-21T07:59:00
# A SQL injection issue was discovered in the Mail Masta (aka mail-masta) plugin 1.0 for WordPress. This affects /inc/lists/csvexport.php (Unauthenticated) with the GET Parameter: list_id.
SecRule REQUEST_FILENAME "@endsWith mail-masta/inc/lists/csvexport.php" \
	"id:66601492,chain,msg:'POL-2017-6095',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:list_id "@rx \D" \
	"t:none"


# CVE: CVE-2017-5942
# CVSS: 4.3
# Publish: 2017-02-10T07:59:00
# An issue was discovered in the WP Mail plugin before 1.2 for WordPress. The replyto parameter when composing a mail allows for a reflected XSS. This would allow you to execute JavaScript in the context of the user receiving the mail.
SecRule TX:WordPress "@eq 1" \
	"id:66601493,chain,msg:'POL-2017-5942',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq wp_mail_compose" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:replyto "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-1000013
# CVSS: 5
# Publish: 2016-10-06T14:59:00
# Remote file upload vulnerability in wordpress plugin csv2wpec-coupon v1.1
SecRule REQUEST_FILENAME "@endsWith csv2wpeccoupon_fileupload.php" \
	"id:66601494,chain,msg:'POL-2015-1000013',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule &ARGS_POST:upload_dir "@ge 1" \
	"chain,t:none"
SecRule FILES "@rx \.(?:php[\d]?|js|pl|rb|sh|p?html|asp|exe|com|htaccess)" \
	"t:none,t:lowercase"


# CVE: CVE-2015-1000000
# CVSS: 5
# Publish: 2016-10-06T14:59:00
# Remote file upload vulnerability in mailcwp v1.99 wordpress plugin
SecRule REQUEST_FILENAME "@endsWith mailcwp-upload.php" \
	"id:66601495,chain,msg:'POL-2015-1000000',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule &ARGS_GET:message_id "@ge 1" \
	"chain,t:none"
SecRule &ARGS_POST:upload_dir "@ge 1" \
	"chain,t:none"
SecRule FILES "@rx \.(?:php[\d]?|js|pl|rb|sh|p?(?:ht(ml)?)|asp|exe|com|htaccess)" \
	"t:none,t:lowercase"


# CVE: CVE-2015-2218
# CVSS: 4.3
# Publish: 2015-03-05T16:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the wp_ajax_save_item function in wonderpluginaudio.php in the WonderPlugin Audio Player plugin before 2.1 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) item[name] or (2) item[customcss] parameter in a wonderplugin_audio_save_item action to wp-admin/admin-ajax.php or the itemid parameter in the (3) wonderplugin_audio_show_item or (4) wonderplugin_audio_edit_item page to wp-admin/admin.php.
SecRule REQUEST_FILENAME "@contains wp-admin/admin.php" \
	"id:66601496,chain,msg:'POL-2015-2218',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@pm wonderplugin_audio_show_item wonderplugin_audio_edit_item" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_GET:itemid "@pm < >" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_FILENAME "@contains wp-admin/admin-ajax.php" \
	"id:66601497,chain,msg:'POL-2015-2218',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:action "@pm wonderplugin_audio_save_item" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:item[name]|ARGS_POST:item[customcss] "@pm < >" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-2315
# CVSS: 4.3
# Publish: 2015-03-17T15:59:00
# Cross-site scripting (XSS) vulnerability in the WPML plugin before 3.1.9 for WordPress allows remote attackers to inject arbitrary web script or HTML via the target parameter in a reminder_popup action to the default URI.
SecRule ARGS_GET:icl_action "@streq reminder_popup" \
	"id:66601498,chain,msg:'POL-2015-2315',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:target "@contains javascript" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2015-1385
# CVSS: 4.3
# Publish: 2015-02-02T15:59:00
# Cross-site scripting (XSS) vulnerability in the Blubrry PowerPress Podcasting plugin before 6.0.1 for WordPress allows remote attackers to inject arbitrary web script or HTML via the cat parameter in a powerpress-editcategoryfeed action in the powerpressadmin_categoryfeeds.php page to wp-admin/admin.php.
SecRule ARGS_GET:page "@contains powerpressadmin_categoryfeeds.php" \
	"id:66601499,chain,msg:'POL-2015-1385',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:action "@contains powerpress-editcategoryfeed" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_GET:cat "@rx \D" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4603
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in yupdates_application.php in the Yahoo! Updates for WordPress plugin 1.0 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) secret, (2) key, or (3) appid parameter.
SecRule REQUEST_FILENAME "@endsWith yupdates_application.php" \
	"id:66601500,chain,msg:'POL-2014-4603',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:appid|ARGS_GET:key|ARGS_GET:secret "@pm < >" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-2195
# CVSS: 4.3
# Publish: 2015-03-03T19:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the WP Media Cleaner plugin 2.2.6 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) view, (2) paged, or (3) s parameter in the wp-media-cleaner page to wp-admin/upload.php.
# SecRule TX:WordPress "@eq 1" \
# 	"id:66601501,chain,msg:'POL-2015-2195',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
# SecRule ARGS_GET:page "@contains wp-media-cleaner" \
# 	"chain,t:none,t:lowercase"
# SecRule ARGS_GET:s|ARGS_GET:view|ARGS_GET:paged "@pm \" '" \
# 	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-2199
# CVSS: 6.5
# Publish: 2015-03-03T19:59:00
# Multiple SQL injection vulnerabilities in the WonderPlugin Audio Player plugin before 2.1 for WordPress allow (1) remote authenticated users to execute arbitrary SQL commands via the item[id] parameter in a wonderplugin_audio_save_item action to wp-admin/admin-ajax.php or remote administrators to execute arbitrary SQL commands via the itemid parameter in the (2) wonderplugin_audio_show_item, (3) wonderplugin_audio_show_items, or (4) wonderplugin_audio_edit_item page to wp-admin/admin.php.
SecRule REQUEST_FILENAME "@contains wp-admin/admin-ajax.php" \
	"id:66601502,chain,msg:'POL-2015-2199',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:action "@streq wonderplugin_audio_save_item" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:item[id] "@rx \D" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_FILENAME "@contains wp-admin/admin.php" \
	"id:66601503,chain,msg:'POL-2015-2199',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@pm wonderplugin_audio_show_item wonderplugin_audio_show_items wonderplugin_audio_edit_item" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_GET:itemid "@rx \D" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-1436
# CVSS: 4.3
# Publish: 2015-02-16T15:59:00
# Cross-site scripting (XSS) vulnerability in the Easing Slider plugin before 2.2.0.7 for WordPress allows remote attackers to inject arbitrary web script or HTML via the edit parameter in the (1) easingslider_manage_customizations or (2) easingslider_edit_sliders page to wp-admin/admin.php.
SecRule ARGS_GET:page "@pm easingslider_manage_customizations easingslider_edit_sliders" \
	"id:66601504,chain,msg:'POL-2015-1436',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:edit "@rx \D" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-5199
# CVSS: 6.8
# Publish: 2014-08-12T20:55:00
# Cross-site request forgery (CSRF) vulnerability in the WordPress File Upload plugin (wp-file-upload) before 2.4.2 for WordPress allows remote attackers to hijack the authentication of administrators for requests that change plugin settings via unspecified vectors.  NOTE: some of these details are obtained from third party information.
#5001151
SecRule REQUEST_URI "!@rx \/options\-general\.php" \
        "id:66601505,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5001151"

SecMarker BEGIN-RULE5001151
SecRule REQUEST_METHOD "@streq GET" \
        "id:66601506,phase:2,pass,setvar:'SESSION.TIMEOUT=600',setvar:'SESSION.ref=1',expirevar:'SESSION.ref=600',nolog,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:removeWhitespace,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule SESSION:ref "@eq 1" \
        "id:66601507,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule REQUEST_METHOD "@streq POST" \
        "id:66601508,chain,msg:'POL-2014-5199',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:removeWhitespace,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq wordpress_file_upload" \
        "chain,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:removeWhitespace,t:lowercase,multiMatch"
SecRule ARGS_GET:action "@streq edit_settings" \
        "chain,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:removeWhitespace,t:lowercase,multiMatch"
SecRule &SESSION:ref "!@eq 1" "

SecMarker END-RULE5001151

# CVE: CVE-2015-1494
# CVSS: 4.3
# Publish: 2015-02-17T15:59:00
# The FancyBox for WordPress plugin before 3.0.3 for WordPress does not properly restrict access, which allows remote attackers to conduct cross-site scripting (XSS) attacks via an mfbfw[*] parameter in an update action to wp-admin/admin-post.php, as demonstrated by the mfbfw[padding] parameter and exploited in the wild in February 2015.
SecRule REQUEST_FILENAME "/admin-post.php" \
	"id:66601509,chain,msg:'POL-2015-1494',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains fancybox-for-wordpress" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:/mfbfw\[\w+\]/ "@pm < >" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2014-7138
# CVSS: 4.3
# Publish: 2014-10-16T19:55:00
# Cross-site scripting (XSS) vulnerability in the Google Calendar Events plugin before 2.0.4 for WordPress allows remote attackers to inject arbitrary web script or HTML via the gce_feed_ids parameter in a gce_ajax action to wp-admin/admin-ajax.php.
SecRule ARGS_GET:action "@streq gce_ajax" \
	"id:66601510,chain,msg:'POL-2014-7138',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:gce_type "@streq page" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_GET:gce_feed_ids "@rx \D" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith admin-ajax.php" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2014-7181
# CVSS: 4.3
# Publish: 2014-10-16T19:55:00
# Cross-site scripting (XSS) vulnerability in the Max Foundry MaxButtons plugin before 1.26.1 for WordPress allows remote attackers to inject arbitrary web script or HTML via the id parameter in a button action on the maxbuttons-controller page to wp-admin/admin.php, related to the button creation page.
SecRule REQUEST_FILENAME "@endsWith /admin.php" \
	"id:66601511,chain,msg:'POL-2014-7181',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq maxbuttons-controller" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_GET:action "@streq button" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_GET:id "@rx \D" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-2995
# CVSS: 3.5
# Publish: 2014-10-17T22:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in twitget.php in the Twitget plugin before 3.3.3 for WordPress allow remote authenticated administrators to inject arbitrary web script or HTML via unspecified vectors, as demonstrated by the twitget_consumer_key parameter to wp-admin/options-general.php.
SecRule REQUEST_FILENAME "@endsWith /options-general.php" \
	"id:66601512,chain,msg:'POL-2014-2995',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq twitget/twitget.php" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:twitget_consumer_key|ARGS_POST:twitget_consumer_secret|ARGS_POST:twitget_user_token|ARGS_POST:twitget_user_secret "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-5528
# CVSS: 4.3
# Publish: 2015-07-16T15:59:00
# Cross-site scripting (XSS) vulnerability in the save_order function in class-floating-social-bar.php in the Floating Social Bar plugin before 1.1.6 for WordPress allows remote attackers to inject arbitrary web script or HTML via the items[] parameter in an fsb_save_order action to wp-admin/admin-ajax.php.
SecRule REQUEST_FILENAME "@endsWith /admin-ajax.php" \
	"id:66601513,chain,msg:'POL-2015-5528',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:action "@streq fsb_save_order" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_GET:/^items\[\d+\]$/ "@rx \"|'|<" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-100018
# CVSS: 4.3
# Publish: 2015-01-13T15:59:00
# Cross-site scripting (XSS) vulnerability in the Unconfirmed plugin before 1.2.5 for WordPress allows remote attackers to inject arbitrary web script or HTML via the s parameter in the unconfirmed page to wp-admin/network/users.php.
SecRule TX:WordPress "@eq 1" \
	"id:66601514,chain,msg:'POL-2014-100018',phase:2,deny,status:403,log,t:none,rev:5,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith users.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@contains unconfirmed" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:s "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-8802
# CVSS: 5
# Publish: 2015-01-23T15:59:00
# The Pie Register plugin before 2.0.14 for WordPress does not properly restrict access to certain functions in pie-register.php, which allows remote attackers to (1) add a user by uploading a crafted CSV file or (2) activate a user account via a verifyit action.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601515,chain,phase:2,pass,nolog,skip:2,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@contains pie-import-export" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_GET "@eq 1" \
	"setvar:'SESSION.pie=1',expirevar:'SESSION.pie=300'"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601516,chain,msg:'POL-2014-8802',phase:2,deny,status:403,log,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@contains pie-import-export" \
	"chain,t:none,t:lowercase"
SecRule FILES_NAMES "@contains csvfile" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:pie "!@eq 1" "

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601517,chain,msg:'POL-2014-8802',phase:2,deny,status:403,log,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith profile.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:verifyit "@eq 1" \
	"chain,t:none"
SecRule &ARGS_POST_NAMES:vusers[] "@ge 1" \
	"chain"
SecRule &SESSION:pie "!@eq 1" "


# CVE: CVE-2014-5345
# CVSS: 4.3
# Publish: 2014-08-19T19:55:00
# Cross-site scripting (XSS) vulnerability in upgrade.php in the Disqus Comment System plugin before 2.76 for WordPress allows remote attackers to inject arbitrary web script or HTML via the step parameter.
SecRule REQUEST_FILENAME "@endsWith edit-comments.php" \
	"id:66601518,chain,msg:'POL-2014-5345',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_COOKIES_NAMES "@rx  ^(wordpress|wp)" \
	"chain,t:none,t:lowercase,multiMatch"
SecRule REQUEST_METHOD "@streq POST" \
	"chain"
SecRule ARGS_GET:page "@streq disqus" \
	"chain,t:none,t:urlDecodeUni,t:lowercase,multiMatch"
SecRule ARGS_GET:step "@contains >" \
	"t:none,t:urlDecodeUni,multiMatch"


# CVE: CVE-2014-10013
# CVSS: 7.5
# Publish: 2015-01-13T11:59:00
# SQL injection vulnerability in the Another WordPress Classifieds Plugin plugin for WordPress allows remote attackers to execute arbitrary SQL commands via the keywordphrase parameter in a dosearch action.
SecRule &ARGS_GET:page_id "@ge 1" \
	"id:66601519,chain,msg:'POL-2014-10013',phase:2,deny,status:403,log,t:none,rev:4,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:a "@streq dosearch" \
	"chain,t:none,t:lowercase"
SecRule ARGS:keywordphrase "@contains '" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-5346
# CVSS: 6.8
# Publish: 2014-08-19T19:55:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Disqus Comment System plugin 2.77 for WordPress allow remote attackers to hijack the authentication of administrators for requests that (1) activate or (2) deactivate the plugin via the active parameter to wp-admin/edit-comments.php, (3) import comments via an import_comments action, or (4) export comments via an export_comments action to wp-admin/index.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601520,chain,phase:2,pass,nolog,skip:3,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith edit-comments.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@streq disqus" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_GET:active "@eq 0" \
	"setvar:'SESSION.disqus=1',expirevar:'SESSION.disqus=300'"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601521,chain,phase:2,pass,nolog,skip:2,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith edit-comments.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@streq disqus" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"setvar:'SESSION.disqus=1',expirevar:'SESSION.disqus=20',t:none,t:lowercase"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601522,chain,msg:'POL-2014-5346',phase:2,deny,status:403,log,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith edit-comments.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@streq disqus" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_GET:active "@ge 1" \
	"chain"
SecRule &SESSION:disqus "@eq 0" "

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601523,chain,msg:'POL-2014-5346',phase:2,deny,status:403,log,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@rx (?:\/|index\.php)$" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_GET:cf_action "@ge 1" \
	"chain"
SecRule ARGS_GET:cf_action "@within import_comments export_comments" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:disqus "@eq 0" "


# CVE: CVE-2014-4527
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in paginas/vista-previa-form.php in the EnvialoSimple: Email Marketing and Newsletters (envialosimple-email-marketing-y-newsletters-gratis) plugin before 1.98 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) FormID or (2) AdministratorID parameter.
SecRule REQUEST_FILENAME "@contains paginas/vista-previa-form.php" \
	"id:66601524,chain,msg:'POL-2014-4527',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:AdministratorID|ARGS_GET:FormID "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-2838
# CVSS: 6.8
# Publish: 2015-01-12T15:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the GD Star Rating plugin 19.22 for WordPress allow remote attackers to hijack the authentication of administrators for requests that conduct (1) SQL injection attacks via the s parameter in the gd-star-rating-stats page to wp-admin/admin.php or (2) cross-site scripting (XSS) attacks via unspecified vectors.
SecRule &SESSION:wp_session "@eq 1" \
	"id:66601525,chain,phase:2,pass,nolog,rev:4,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith /admin.php" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_GET:page "@contains gd-star" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.gdstar=1',expirevar:'SESSION.gdstar=300',t:none,t:lowercase"

SecRule REQUEST_FILENAME "@endsWith /admin.php" \
	"id:66601526,chain,msg:'POL-2014-2838',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:4,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains gd-star" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:gdstar "!@eq 1" "


# CVE: CVE-2014-3907
# CVSS: 6.8
# Publish: 2014-08-26T14:55:00
# Cross-site request forgery (CSRF) vulnerability in the MailPoet Newsletters (wysija-newsletters) plugin before 2.6.11 for WordPress allows remote attackers to hijack the authentication of arbitrary users.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601527,chain,phase:2,pass,nolog,t:none,skip:4,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@rx admin(?:\-ajax)?\.php$" \
	"chain,t:none,t:lowercase"
SecRule ARGS:page|ARGS:action "@contains wysija" \
	"chain,t:none"
SecRule &ARGS:_wpnonce "@ge 1" \
	"t:none"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601528,chain,phase:2,pass,nolog,skip:3,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"chain,t:none"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule ARGS:page "@contains wysija" \
	"chain,t:none,t:lowercase"
SecRule ARGS:action "!@within duplicate delete" \
	"setvar:'SESSION.wysija=1',expirevar:'SESSION.wysija=300',t:none,t:lowercase"

SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"id:66601529,chain,msg:'POL-2014-3907',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule ARGS:action "@contains wysija" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wysija "!@eq 1" "

SecRule REQUEST_FILENAME "@endsWith admin-ajax.php" \
	"id:66601530,chain,msg:'POL-2014-3907',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule ARGS:action "@contains wysija" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wysija "!@eq 1" "

SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"id:66601531,chain,msg:'POL-2014-3907',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule ARGS:page "@contains wysija" \
	"chain,t:none,t:lowercase"
SecRule ARGS:action "@within duplicate delete" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wysija "!@eq 1" "


# CVE: CVE-2017-6819
# CVSS: 4.3
# Publish: 2017-03-12T01:59:00
# In WordPress before 4.7.3, there is cross-site request forgery (CSRF) in Press This (wp-admin/includes/class-wp-press-this.php), leading to excessive use of server resources. The CSRF can trigger an outbound HTTP request for a large file that is then parsed by Press This.
SecRule &ARGS:u "@ge 1" \
	"id:66601532,chain,msg:'POL-2017-6819',phase:2,pass,nolog,t:none,rev:1,severity:2,tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith wp-admin/press-this.php" \
	"setvar:'ip.wp_pressthis=+1',expirevar:'ip.wp_pressthis=10',t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"

SecRule IP:wp_pressthis "@ge 5" \
	"id:66601533,msg:'POL-2017-6819',phase:2,pass,setvar:'ip.wp_pressthis_dos=1',expirevar:'ip.wp_pressthis_dos=300',nolog,t:none,rev:1,severity:2,tag:'WordPress'"

SecRule IP:wp_pressthis_dos "@eq 1" \
	"id:66601534,chain,msg:'POL-2017-6819',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith wp-admin/press-this.php" \
	"t:none,t:urlDecodeUni,t:normalisePath,t:lowercase"


# CVE: CVE-2014-4942
# CVSS: 5
# Publish: 2014-07-11T20:55:00
# The EasyCart (wp-easycart) plugin before 2.0.6 for WordPress allows remote attackers to obtain configuration information via a direct request to inc/admin/phpinfo.php, which calls the phpinfo function.
SecRule REQUEST_FILENAME "@endsWith wp-content/plugins/wp-easycart/inc/admin/phpinfo.php" \
	"id:66601535,msg:'POL-2014-4942',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:normalizePath,t:removeWhitespace,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"


# CVE: CVE-2016-1000142
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin parsi-font v4.2.5
SecRule TX:WordPress "@eq 1" \
	"id:66601536,chain,msg:'POL-2016-1000142',phase:2,deny,status:403,log,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith css.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:size "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-1000131
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin e-search v1.0
SecRule ARGS_GET:date-from|ARGS_GET:date-to|ARGS_GET:searchword "@rx \"" \
	"id:66601537,chain,msg:'POL-2016-1000131',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@rx \/tmpl\/(?:date_select|searchword)\.php$" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2014-8606
# CVSS: 4
# Publish: 2015-06-10T18:59:00
# Directory traversal vulnerability in the XCloner plugin 3.1.1 for WordPress and 3.5.1 for Joomla! allows remote administrators to read arbitrary files via a .. (dot dot) in the file parameter in a json_return action in the xcloner_show page to wp-admin/admin-ajax.php.
SecRule ARGS_GET:file "@contains .." \
	"id:66601538,chain,msg:'POL-2014-8606',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:task "@streq download" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page|ARGS_GET:option "@pm xcloner_show com_xcloner-backupandrestore" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@pm /wp-admin/admin-ajax.php /administrator/index.php" \
	"t:none,t:lowercase,t:normalizePath"


# CVE: CVE-2016-1000138
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin indexisto v1.0.5
SecRule TX:WordPress "@eq 1" \
	"id:66601539,chain,msg:'POL-2016-1000138',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith indexisto-inject.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:indexisto_index "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-1000141
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin page-layout-builder v1.9.3
SecRule REQUEST_FILENAME "@endsWith page-layout-builder/includes/layout-settings.php" \
	"id:66601540,chain,msg:'POL-2016-1000141',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:layout_settings_id "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-1000134
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin hdw-tube v1.2
SecRule ARGS_GET:playlist "@contains <" \
	"id:66601541,chain,msg:'POL-2016-1000134',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith plugins/hdw-tube/playlist.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2016-1000132
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin enhanced-tooltipglossary v3.2.8
SecRule ARGS_GET:msg "@streq imported" \
	"id:66601542,chain,msg:'POL-2016-1000132',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith backend/views/admin_importexport.php" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath"
SecRule ARGS_GET:itemsnumber "@rx \D" \
	"t:none"


# CVE: CVE-2016-1000133
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin forget-about-shortcode-buttons v1.1.1
SecRule REQUEST_FILENAME "@endsWith /assets/js/fasc-buttons/popup.php" \
	"id:66601543,chain,msg:'POL-2016-1000133',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:ver|ARGS_GET:ajaxurl "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2013-3254
# CVSS: 4.3
# Publish: 2013-05-10T11:42:00
# Cross-site scripting (XSS) vulnerability in wp-admin/admin.php in the WP Photo Album Plus plugin before 5.0.3 for WordPress allows remote attackers to inject arbitrary web script or HTML via the commentid parameter in a wppa_manage_comments edit action.
SecRule ARGS_GET:page "@streq wppa_manage_comments" \
	"id:66601544,chain,msg:'POL-2013-3254',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:tab "@streq edit" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:commentid "@contains <" \
	"t:none,t:lowercase,t:urlDecodeUni,t:htmlEntityDecode"

SecRule ARGS_GET:page "@streq wppa_manage_comments" \
	"id:66601545,chain,msg:'POL-2013-3254',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:tab "@streq edit" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:commentid "@contains <" \
	"t:none,t:lowercase,t:urlDecodeUni"


# CVE: CVE-2015-4704
# CVSS: 5
# Publish: 2017-05-23T04:29:00
# Directory traversal vulnerability in the Download Zip Attachments plugin 1.0 for WordPress allows remote attackers to read arbitrary files via a .. (dot dot) in the File parameter to download.php.
SecRule REQUEST_FILENAME "@endsWith download.php" \
	"id:66601546,chain,msg:'POL-2015-4704',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:za_file "@rx \.\.|^\/" \
	"t:none,t:UrlDecodeUni,t:normalizePath"


# CVE: CVE-2016-1000140
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin new-year-firework v1.1.9
SecRule ARGS_GET:text "@contains <" \
	"id:66601547,chain,msg:'POL-2016-1000140',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@contains plugins/new-year-firework/firework/" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2016-1000149
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin simpel-reserveren v3.5.2
SecRule REQUEST_FILENAME "@endsWith plugins/simpel-reserveren/edit.php" \
	"id:66601548,chain,msg:'POL-2016-1000149',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-5185
# CVSS: 6
# Publish: 2014-08-06T19:55:00
# SQL injection vulnerability in the Quartz plugin 1.01.1 for WordPress allows remote authenticated users with Contributor privileges to execute arbitrary SQL commands via the quote parameter in an edit action in the quartz/quote_form.php page to wp-admin/edit.php.
SecRule TX:WordPress "@eq 1" \
	"id:66601549,chain,msg:'POL-2014-5185',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains quote_form.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:quote "@rx \D" \
	"t:none"


# CVE: CVE-2016-4827
# CVSS: 4.3
# Publish: 2016-06-25T21:59:00
# Cross-site scripting (XSS) vulnerability in the Collne Welcart e-Commerce plugin before 1.8.3 for WordPress allows remote attackers to inject arbitrary web script or HTML via unspecified vectors, a different vulnerability than CVE-2016-4826.
SecRule TX:WordPress "@eq 1" \
	"id:66601550,chain,msg:'POL-2016-4827',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@pm usces_itemnew usces_itemedit" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:post_title "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4577
# CVSS: 5
# Publish: 2014-10-21T15:55:00
# Absolute path traversal vulnerability in reviews.php in the WP AmASIN - The Amazon Affiliate Shop plugin 0.9.6 and earlier for WordPress allows remote attackers to read arbitrary files via a full pathname in the url parameter.
SecRule REQUEST_URI "@contains /wp-content/plugins/" \
	"id:66601551,chain,msg:'POL-2014-4577',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,t:normalizePath,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith reviews.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:url "@rx ^[\\\/]" \
	"t:none,t:urlDecodeUni,t:normalizePath"


# CVE: CVE-2013-7240
# CVSS: 5
# Publish: 2014-01-03T18:54:00
# Directory traversal vulnerability in download-file.php in the Advanced Dewplayer plugin 1.2 for WordPress allows remote attackers to read arbitrary files via a .. (dot dot) in the dew_file parameter.
SecRule REQUEST_FILENAME "@endsWith advanced-dewplayer/admin-panel/download-file.php" \
	"id:66601552,chain,msg:'POL-2013-7240',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:dew_file "@contains .." \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4939
# CVSS: 6.5
# Publish: 2014-07-11T20:55:00
# SQL injection vulnerability in the ENL Newsletter (enl-newsletter) plugin 1.0.1 for WordPress allows remote authenticated administrators to execute arbitrary SQL commands via the id parameter in the enl-add-new page to wp-admin/admin.php.
SecRule REQUEST_URI "@contains wp-admin/admin.php" \
	"id:66601553,chain,msg:'POL-2014-4939',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:removeWhitespace,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq enl-add-new" \
	"chain"
SecRule ARGS_GET:id "@rx \D" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"


# CVE: CVE-2014-4606
# CVSS: 4.3
# Publish: 2014-07-02T20:55:00
# Cross-site scripting (XSS) vulnerability in redirect_to_zeenshare.php in the ZeenShare plugin 1.0.1 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the zs_sid parameter.
SecRule REQUEST_FILENAME "@endsWith redirect_to_zeenshare.php" \
	"id:66601554,chain,msg:'POL-2014-4606',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:removeWhitespace,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:zs_sid "@contains >" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"


# CVE: CVE-2014-5186
# CVSS: 6.5
# Publish: 2014-08-06T19:55:00
# SQL injection vulnerability in the All Video Gallery (all-video-gallery) plugin 1.2 for WordPress allows remote authenticated administrators to execute arbitrary SQL commands via the id parameter in an edit action in the allvideogallery_videos page to wp-admin/admin.php.
SecRule ARGS_GET:page "@contains allvideogallery_videos" \
	"id:66601555,chain,msg:'POL-2014-5186',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:compressWhitespace,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@contains admin.php" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:removeWhitespace,t:lowercase,multiMatch"
SecRule ARGS:id "[^0-9]" \
	"t:none,t:urlDecodeUni,t:compressWhitespace"


# CVE: CVE-2014-5187
# CVSS: 5
# Publish: 2014-08-06T19:55:00
# Directory traversal vulnerability in the Tom M8te (tom-m8te) plugin 1.5.3 for WordPress allows remote attackers to read arbitrary files via the file parameter to tom-download-file.php.
SecRule REQUEST_URI "wp-content/plugins/tom-m8te/tom-download-file.php" \
	"id:66601556,chain,msg:'POL-2014-5187',phase:1,deny,status:403,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,t:normalizePath,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:file "@contains ../" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2014-4584
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Cross-site scripting (XSS) vulnerability in admin/editFacility.php in the wp-easybooking plugin 1.0.3 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the fID parameter.
SecRule REQUEST_FILENAME "@endsWith editFacility.php" \
	"id:66601557,chain,msg:'POL-2014-4584',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:removeWhitespace,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:fID "@contains >" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"


# CVE: CVE-2014-4575
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Cross-site scripting (XSS) vulnerability in js/window.php in the Wikipop plugin 2.0 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the s parameter.
SecRule REQUEST_FILENAME "@endsWith js/window.php" \
	"id:66601558,chain,msg:'POL-2014-4575',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:removeWhitespace,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:s "@pm \" >" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"


# CVE: CVE-2014-4587
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in the WP GuestMap plugin 1.8 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) zl, (2) mt, or (3) dc parameter to guest-locator.php; the (4) zl, (5) mt, (6) activate, or (7) dc parameter to online-tracker.php; the (8) zl, (9) mt, or (10) dc parameter to stats-map.php; or the (11) zl, (12) mt, (13) activate, or (14) dc parameter to weather-map.php.
SecRule REQUEST_FILENAME "@pm guest-locator.php online-tracker.php stats-map.php weather-map.php" \
	"id:66601559,chain,msg:'POL-2014-4587',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:removeWhitespace,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:dc|ARGS_GET:mt|ARGS_GET:zl "@contains >" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"


# CVE: CVE-2014-4585
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Cross-site scripting (XSS) vulnerability in the WP-FaceThumb plugin possibly 1.0 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the ajax_url parameter to index.php.
SecRule REQUEST_FILENAME "@contains wp-facethumb/index.php" \
	"id:66601560,chain,msg:'POL-2014-4585',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:removeWhitespace,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:ajax_url "@contains >" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"


# CVE: CVE-2014-4605
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in cal/test.php in the ZdStatistics (zdstats) plugin 2.0.1 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the lang parameter.
SecRule REQUEST_FILENAME "@contains cal/test.php" \
	"id:66601561,chain,msg:'POL-2014-4605',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:removeWhitespace,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:lang "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"


# CVE: CVE-2014-4604
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in settings/pwsettings.php in the Your Text Manager plugin 0.3.0 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the ytmpw parameter.
SecRule REQUEST_FILENAME "@endsWith settings/pwsettings.php" \
	"id:66601562,chain,msg:'POL-2014-4604',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:removeWhitespace,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:ytmpw "@contains >" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"


# CVE: CVE-2015-2825
# CVSS: 7.5
# Publish: 2015-04-21T15:59:00
# Unrestricted file upload vulnerability in sam-ajax-admin.php in the Simple Ads Manager plugin before 2.5.96 for WordPress allows remote attackers to execute arbitrary code by uploading a file with an executable extension, then accessing it via a direct request to the file in the directory specified by the path parameter. <a href="http://cwe.mitre.org/data/definitions/434.html">CWE-434: Unrestricted Upload of File with Dangerous Type</a>
SecRule REQUEST_FILENAME "@endsWith simple-ads-manager/sam-ajax-admin.php" \
	"id:66601563,chain,msg:'POL-2015-2825',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@streq upload_ad_image" \
	"chain,t:none,t:lowercase"
SecRule FILES "!@rx \.(?:jpe?g|gif|bmp|png)$" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2015-2196
# CVSS: 7.5
# Publish: 2015-03-03T19:59:00
# SQL injection vulnerability in Spider Event Calendar 1.4.9 for WordPress allows remote attackers to execute arbitrary SQL commands via the cat_id parameter in a spiderbigcalendar_month action to wp-admin/admin-ajax.php.
SecRule ARGS_GET:action "@streq spiderbigcalendar_month" \
	"id:66601564,chain,msg:'POL-2015-2196',phase:1,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:cat_id "@rx \D" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith admin-ajax.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-4614
# CVSS: 7.5
# Publish: 2015-07-08T16:59:00
# Multiple SQL injection vulnerabilities in includes/Function.php in the Easy2Map plugin before 1.2.5 for WordPress allow remote attackers to execute arbitrary SQL commands via the mapName parameter in an e2m_img_save_map_name action to wp-admin/admin-ajax.php and other unspecified vectors.
SecRule ARGS_POST:action "@contains save_map" \
	"id:66601565,chain,msg:'POL-2015-4614',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:mapName "@contains '" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith admin-ajax.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-2824
# CVSS: 7.5
# Publish: 2015-04-06T15:59:00
# Multiple SQL injection vulnerabilities in the Simple Ads Manager plugin before 2.7.97 for WordPress allow remote attackers to execute arbitrary SQL commands via a (1) hits[][] parameter in a sam_hits action to sam-ajax.php; the (2) cstr parameter in a load_posts action to sam-ajax-admin.php; the (3) searchTerm parameter in a load_combo_data action to sam-ajax-admin.php; or the (4) subscriber, (5) contributor, (6) author, (7) editor, (8) admin, or (9) sadmin parameter in a load_users action to sam-ajax-admin.php.
SecRule REQUEST_FILENAME "@endsWith simple-ads-manager/sam-ajax.php" \
	"id:66601566,chain,msg:'POL-2015-2824',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@streq sam_hits" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:/hits\[\d+]\[\d*]/ "@rx \D" \
	"t:none"

SecRule REQUEST_FILENAME "@endsWith simple-ads-manager/sam-ajax-admin.php" \
	"id:66601567,chain,msg:'POL-2015-2824',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@streq load_users" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:subscriber|ARGS_POST:contributor|ARGS_POST:author|ARGS_POST:editor|ARGS_POST:admin "!@rx ^[a-z]+$" \
	"t:none,t:lowercase"

SecRule REQUEST_FILENAME "@endsWith simple-ads-manager/sam-ajax-admin.php" \
	"id:66601568,chain,msg:'POL-2015-2824',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@streq load_users" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:sadmin "!@streq Super Admin" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_FILENAME "@endsWith simple-ads-manager/sam-ajax-admin.php" \
	"id:66601569,chain,msg:'POL-2015-2824',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:action "@streq load_posts" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:cstr "@rx \D" \
	"t:none"

SecRule REQUEST_FILENAME "@endsWith simple-ads-manager/sam-ajax-admin.php" \
	"id:66601570,chain,msg:'POL-2015-2824',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@streq load_combo_data" \
	"chain"
SecRule ARGS_GET:searchTerm "!@rx ^\w+$" \
	"t:none"


# CVE: CVE-2015-5599
# CVSS: 7.5
# Publish: 2015-08-18T15:59:00
# Multiple SQL injection vulnerabilities in upload.php in the Powerplay Gallery plugin 3.3 for WordPress allow remote attackers to execute arbitrary SQL commands via the (1) albumid or (2) name parameter.
SecRule REQUEST_FILENAME "@endsWith wp-powerplaygallery/upload.php" \
	"id:66601571,chain,msg:'POL-2015-5599',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:albumid "@rx \D" \
	"t:none"


# CVE: CVE-2014-7182
# CVSS: 4.3
# Publish: 2014-10-22T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in the WP Google Maps plugin before 6.0.27 for WordPress allow remote attackers to inject arbitrary web script or HTML via the poly_id parameter in an (1) edit_poly, (2) edit_polyline, or (3) edit_marker action in the wp-google-maps-menu page to wp-admin/admin.php.
SecRule ARGS_GET:page "@contains wp-google-maps-menu" \
	"id:66601572,chain,msg:'POL-2014-7182',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:action "@pm edit_poly edit_polyline edit_marker" \
	"chain,t:none"
SecRule ARGS_GET:poly_id|ARGS_GET:id "@rx \D" \
	"t:none"


# CVE: CVE-2015-1874
# CVSS: 6.8
# Publish: 2015-03-09T16:59:00
# Cross-site request forgery (CSRF) vulnerability in the Contact Form DB (aka CFDB and contact-form-7-to-database-extension) plugin before 2.8.32 for WordPress allows remote attackers to hijack the authentication of administrators for requests that delete all plugin records via a request in the CF7DBPluginSubmissions page to wp-admin/admin.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601573,chain,msg:'POL-2015-1874',phase:2,pass,nolog,skip:1,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith /admin.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@contains cf7dbplugin" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.wp_cfdb=1',expirevar:'SESSION.wp_cfdb=300',t:none,t:lowercase"

SecRule REQUEST_FILENAME "@endsWith /admin.php" \
	"id:66601574,chain,msg:'POL-2015-1874',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq cf7dbpluginsubmissions" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule &ARGS_POST:delete "@ge 1" \
	"chain"
SecRule &SESSION:wp_cfdb "!@ge 1" "


# CVE: CVE-2015-0901
# CVSS: 4.3
# Publish: 2015-03-31T10:59:00
# Cross-site scripting (XSS) vulnerability in the duwasai flashy theme 1.3 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.
SecRule REQUEST_FILENAME "@endsWith themes.php" \
	"id:66601575,chain,msg:'POL-2015-0901',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq functions.php" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:ga_id|ARGS_POST:notice_content "@contains </textarea>" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2015-1614
# CVSS: 6.8
# Publish: 2015-02-19T15:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Image Metadata Cruncher plugin for WordPress allow remote attackers to hijack the authentication of administrators for requests that conduct cross-site scripting (XSS) attacks via the (1) image_metadata_cruncher[alt] or (2) image_metadata_cruncher[caption] parameter in an update action in the image_metadata_cruncher_title page to wp-admin/options.php or (3) custom image meta tag to the image metadata cruncher page.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601576,chain,msg:'POL-2015-1614',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith options.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS:option_page "@streq image_metadata_cruncher_title" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:image_metadata_cruncher[alt]|ARGS_POST:image_metadata_cruncher "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-1000006
# CVSS: 5
# Publish: 2016-10-06T14:59:00
# Remote file download vulnerability in recent-backups v0.7 wordpress plugin
SecRule ARGS_GET:file_link "@beginsWith /" \
	"id:66601577,chain,msg:'POL-2015-1000006',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith recent-backups/download-file.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2015-1000002
# CVSS: 5.8
# Publish: 2016-10-06T14:59:00
# Open Proxy in filedownload v1.4 wordpress plugin
SecRule ARGS_GET:referer "@contains \"" \
	"id:66601578,chain,msg:'POL-2015-1000002',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith filedownload/download.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2016-1000007
# CVSS: 4.3
# Publish: 2016-10-07T18:59:00
# Pagure 2.2.1 XSS in raw file endpoint
SecRule ARGS_GET:url "@beginsWith /" \
	"id:66601579,chain,msg:'POL-2016-1000007',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith lib-mbox/ajax_load.php" \
	"t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"


# CVE: CVE-2015-8353
# CVSS: 4.3
# Publish: 2017-09-11T20:29:00
# Cross-site scripting (XSS) vulnerability in the Role Scoper plugin before 1.3.67 for WordPress allows remote attackers to inject arbitrary web script or HTML via the object_name parameter in a rs-object_role_edit page to wp-admin/admin.php.
SecRule TX:WordPress "@eq 1" \
	"id:66601580,chain,msg:'POL-2015-8353',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq rs-object_role_edit" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:object_name "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-1000137
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin hero-maps-pro v2.1.0
SecRule REQUEST_FILENAME "@contains /hero-maps-pro/views/dashboard/" \
	"id:66601581,chain,msg:'POL-2016-1000137',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:p|ARGS_GET:v "@rx (?:\.\.|\")" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2016-1000135
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin hdw-tube v1.2
SecRule REQUEST_FILENAME "@endsWith hdw-tube/mychannel.php" \
	"id:66601582,chain,msg:'POL-2016-1000135',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:channel "@rx \D" \
	"t:none"


# CVE: CVE-2016-1000136
# CVSS: 4.3
# Publish: 2016-10-10T20:59:00
# Reflected XSS in wordpress plugin heat-trackr v1.0
SecRule TX:WordPress "@eq 1" \
	"id:66601583,chain,msg:'POL-2016-1000136',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:page "@streq heat-trackr_abtest_admin.php" \
	"chain,t:none"
SecRule ARGS:id "@rx \D" \
	"t:none"

SecRule REQUEST_BASENAME "@streq heat-trackr_abtest_add.php" \
	"id:66601584,chain,msg:'POL-2016-1000136',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:id "@rx \D" \
	"t:none"


# CVE: CVE-2014-8586
# CVSS: 7.5
# Publish: 2014-11-04T15:55:00
# SQL injection vulnerability in the CP Multi View Event Calendar plugin 1.01 for WordPress allows remote attackers to execute arbitrary SQL commands via the calid parameter.
SecRule ARGS_GET:cpmvc_do_action "@streq mvparse" \
	"id:66601585,chain,msg:'POL-2014-8586',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:calid "@rx \D" \
	"t:none"


# CVE: CVE-2014-8622
# CVSS: 3.5
# Publish: 2014-11-05T23:55:00
# Cross-site scripting (XSS) vulnerability in compfight-search.php in the Compfight plugin 1.4 for WordPress allows remote authenticated users to inject arbitrary web script or HTML via the search-value parameter.
SecRule REQUEST_FILENAME "@contains compfight-search" \
	"id:66601586,chain,msg:'POL-2014-8622',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:search-value "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-9305
# CVSS: 6.5
# Publish: 2014-12-08T16:59:00
# SQL injection vulnerability in the shortcodeProductsTable function in models/Cart66Ajax.php in the Cart66 Lite plugin before 1.5.2 for WordPress allows remote authenticated users to execute arbitrary SQL commands via the id parameter in a shortcode_products_table action to wp-admin/admin-ajax.php.
SecRule ARGS_POST:action "@streq shortcode_products_table" \
	"id:66601587,chain,msg:'POL-2014-9305',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:id "@rx \D" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@contains admin-ajax" \
	"t:none,t:lowercase"


# CVE: CVE-2016-10112
# CVSS: 3.5
# Publish: 2017-01-04T02:59:00
# Cross-site scripting (XSS) vulnerability in the WooCommerce plugin before 2.6.9 for WordPress allows remote authenticated administrators to inject arbitrary web script or HTML by providing crafted tax-rate table values in CSV format.
SecRule ARGS_GET:action "@streq woocommerce_tax_rates_save_changes" \
	"id:66601588,chain,msg:'POL-2016-10112',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:/postcode/ "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-1000156
# CVSS: 7.5
# Publish: 2016-12-14T18:59:00
# Mailcwp remote file upload vulnerability incomplete fix v1.100
SecRule TX:WordPress "@eq 1" \
	"id:66601589,chain,msg:'POL-2016-1000156',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith mailcwp-upload.php" \
	"chain,t:none,t:lowercase"
SecRule FILES "@rx \.(?:(?:p|s)?h(?:p[2-7s]?|(?:tm)?l?)|dll|exe|js|pl|rb|sh|\.htaccess)$" \
	"t:none,t:lowercase"


# CVE: CVE-2017-6096
# CVSS: 6.5
# Publish: 2017-02-21T07:59:00
# A SQL injection issue was discovered in the Mail Masta (aka mail-masta) plugin 1.0 for WordPress. This affects /inc/lists/view-list.php (Requires authentication to Wordpress admin) with the GET Parameter: filter_list.
SecRule TX:WordPress "@eq 1" \
	"id:66601590,chain,msg:'POL-2017-6096',phase:2,deny,status:403,log,t:none,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq masta-lists" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:action "@pm view_list add_member edit_member" \
	"chain,t:none"
SecRule ARGS_GET:filter_list "@rx \D" \
	"t:none"


# CVE: CVE-2014-4549
# CVSS: 4.3
# Publish: 2014-07-02T20:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in pages/3DComplete.php in the WooCommerce SagePay Direct Payment Gateway plugin before 0.1.6.7 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) MD or (2) PARes parameter.
SecRule REQUEST_FILENAME "@contains /pages/3dcomplete.php" \
	"id:66601591,chain,msg:'POL-2014-4549',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:MD|ARGS_GET:PARes "@contains <" \
	"chain,t:none,t:htmlEntityDecode,t:lowercase"
SecRule &SESSION:wp_session "@ge 1" \
	"t:none"


# CVE: CVE-2014-4560
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in includes/getTipo.php in the ToolPage plugin 1.6.1 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the t parameter.
SecRule REQUEST_FILENAME "@contains /includes/getTipo.php" \
	"id:66601592,chain,msg:'POL-2014-4560',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:htmlEntityDecode,t:removeWhitespace,t:lowercase,multiMatch,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:t "@contains >" \
	"chain,t:none,t:htmlEntityDecode,t:urlDecodeUni,t:lowercase"
SecRule &SESSION:wp_session "@ge 1" \
	"t:none"


# CVE: CVE-2017-6103
# CVSS: 4.3
# Publish: 2017-03-02T22:59:00
# Persistent XSS Vulnerability in Wordpress plugin AnyVar v0.1.1.
SecRule TX:WordPress "@eq 1" \
	"id:66601593,chain,msg:'POL-2017-6103',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains anyvar.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:var_text "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4581
# CVSS: 4.3
# Publish: 2014-07-02T20:55:00
# Cross-site scripting (XSS) vulnerability in facture.php in the WPCB plugin 2.4.8 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the id parameter.
SecRule REQUEST_FILENAME "@contains facture.php" \
	"id:66601594,chain,msg:'POL-2014-4581',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,multiMatch,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:id "@contains >" \
	"chain,t:none,t:htmlEntityDecode,t:urlDecodeUni"
SecRule &SESSION:wp_session "@ge 1" \
	"t:none"


# CVE: CVE-2014-4582
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in admin/admin_show_dialogs.php in the WP Consultant plugin 1.0 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the dialog_id parameter.
SecRule REQUEST_FILENAME "@contains /admin_show_dialogs.php" \
	"id:66601595,chain,msg:'POL-2014-4582',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,multiMatch,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:dialog_id "@contains '>" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode"
SecRule &SESSION:wp_session "@ge 1" \
	"t:none"


# CVE: CVE-2014-4574
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in resize.php in the WebEngage plugin before 2.0.1 for WordPress allows remote attackers to inject arbitrary web script or HTML via the height parameter.
SecRule REQUEST_FILENAME "@contains resize.php" \
	"id:66601596,chain,msg:'POL-2014-4574',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:htmlEntityDecode,t:removeWhitespace,t:lowercase,multiMatch,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:height "@rx \D" \
	"chain"
SecRule &SESSION:wp_session "@ge 1" \
	"t:none"


# CVE: CVE-2014-4534
# CVSS: 4.3
# Publish: 2014-07-02T20:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in videoplayer/autoplay.php in the HTML5 Video Player with Playlist plugin 2.4.0 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) theme or (2) playlistmod parameter.
SecRule REQUEST_FILENAME "@contains autoplay.php" \
	"id:66601597,chain,msg:'POL-2014-4534',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:playlistmod|ARGS_GET:theme "@rx \"" \
	"chain,t:none,t:htmlEntityDecode,t:urlDecodeUni"
SecRule &SESSION:wp_session "@ge 1" \
	"t:none"


# CVE: CVE-2014-5337
# CVSS: 5
# Publish: 2014-08-29T13:55:00
# The WordPress Mobile Pack plugin before 2.0.2 for WordPress does not properly restrict access to password protected posts, which allows remote attackers to obtain sensitive information via an exportarticles action to export/content.php.
SecRule REQUEST_FILENAME "@contains wp-content/plugins/wordpress-mobile-pack/export/content.php" \
	"id:66601598,chain,msg:'POL-2014-5337',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:content "@streq exportarticles" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule &ARGS:callback "!eq 0" "


# CVE: CVE-2014-5347
# CVSS: 6.8
# Publish: 2014-08-19T19:55:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Disqus Comment System plugin before 2.76 for WordPress allow remote attackers to hijack the authentication of administrators for requests that conduct cross-site scripting (XSS) attacks via the (1) disqus_replace, (2) disqus_public_key, or (3) disqus_secret_key parameter to wp-admin/edit-comments.php in manage.php or that (4) reset or (5) delete plugin options via the reset parameter to wp-admin/edit-comments.php.
#5001170
SecRule REQUEST_URI "!@rx wp-admin/edit-comments.php" \
        "id:66601599,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5001170"

SecMarker BEGIN-RULE5001170
SecRule ARGS_POST:disqus_public_key|ARGS_POST:disqus_secret_key "@rx \W" \
        "id:66601600,msg:'POL-2014-5347',phase:2,deny,status:403,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule ARGS_POST:disqus_replace "!@pm all closed" \
        "id:66601601,msg:'POL-2014-5347',phase:2,deny,status:403,t:none,t:urlDecodeUni,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule REQUEST_METHOD "@streq GET" \
        "id:66601602,phase:2,pass,setvar:'SESSION.TIMEOUT=600',setvar:'SESSION.backend=1',expirevar:'SESSION.backend=600',nolog,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule SESSION:backend "@eq 1" \
        "id:66601603,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule REQUEST_METHOD "@streq POST" \
        "id:66601604,chain,msg:'POL-2014-5347',phase:2,deny,status:403,log,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains disqus" \
        "chain,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:normalizePath,t:removeWhitespace,t:lowercase,multiMatch"
SecRule &SESSION:backend "!@eq 1" "

SecMarker END-RULE5001170

# CVE: CVE-2014-4583
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in forms/messages.php in the WP-Contact (wp-contact-sidebar-widget) plugin 1.0 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) edit, (2) order_direction, (3) limit_start, (4) id, or (5) order parameter.
SecRule REQUEST_FILENAME "@contains /forms/messages.php" \
	"id:66601605,chain,msg:'POL-2014-4583',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,multiMatch,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:edit|ARGS_GET:id|ARGS_GET:limit_start|ARGS_GET:order|ARGS_GET:order_direction "@contains >" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"
SecRule &SESSION:wp_session "@ge 1" \
	"t:none"


# CVE: CVE-2014-4600
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in contact/edit.php in the WP Ultimate Email Marketer plugin 1.1.0 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) listname or (2) contact parameter.
SecRule REQUEST_FILENAME "@contains contact/edit.php" \
	"id:66601606,chain,msg:'POL-2014-4600',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:removeWhitespace,t:lowercase,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:contact|ARGS_GET:listname "@rx \W" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"


# CVE: CVE-2014-4570
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in the VideoWhisper Video Presentation plugin before 3.31 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) room_name parameter to c_login.php or (2) room parameter to index.php in vp/.
SecRule REQUEST_FILENAME "@pm c_login.php vp/index.php" \
	"id:66601607,chain,msg:'POL-2014-4570',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:room_name|ARGS_GET:room "@pm < >" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4572
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in bvc.php in the Votecount for Balatarin plugin 0.1.1 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the (1) url or (2) bvcurl parameter.
SecRule REQUEST_FILENAME "@endsWith bvc.php" \
	"id:66601608,chain,msg:'POL-2014-4572',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,multiMatch,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:url|ARGS_GET:bvcurl "@rx (?:>|<)" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,multiMatch"


# CVE: CVE-2014-6445
# CVSS: 4.3
# Publish: 2014-09-26T21:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in includes/toAdmin.php in Contact Form 7 Integrations plugin 1.0 through 1.3.10 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) uE or (2) uC parameter.
SecRule REQUEST_FILENAME "@endsWith includes/toadmin.php" \
	"id:66601609,chain,msg:'POL-2014-6445',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,multiMatch,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule &ARGS:uC "@ge 1" \
	"chain"
SecRule &ARGS:uE "@ge 1" \
	"chain"
SecRule ARGS:uC|ARGS:uE "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,multiMatch"


# CVE: CVE-2014-10021
# CVSS: 7.5
# Publish: 2015-01-13T11:59:00
# Unrestricted file upload vulnerability in UploadHandler.php in the WP Symposium plugin 14.11 for WordPress allows remote attackers to execute arbitrary code by uploading a file with an executable extension, then accessing it via a direct request to the file in server/php/. <a href="http://cwe.mitre.org/data/definitions/434.html">CWE-434: Unrestricted Upload of File with Dangerous Type</a>
SecRule REQUEST_FILENAME "@contains /server/php/" \
	"id:66601610,chain,msg:'POL-2014-10021',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,multiMatch,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST_NAMES "@rx uploader_(uid|url)" \
	"chain,t:none,t:urlDecodeUni,t:lowercase,multiMatch"
SecRule FILES "@rx \.(?:php|js|pl)(?:\.|$)" \
	"t:none,t:urlDecodeUni,t:lowercase,multiMatch"


# CVE: CVE-2012-4768
# CVSS: 4.3
# Publish: 2014-09-04T14:55:00
# Cross-site scripting (XSS) vulnerability in the Download Monitor plugin before 3.3.5.9 for WordPress allows remote attackers to inject arbitrary web script or HTML via the dlsearch parameter to the default URI.
SecRule ARGS_GET:dlsearch "@rx \"" \
	"id:66601611,msg:'POL-2012-4768',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,multiMatch,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"


# CVE: CVE-2014-7153
# CVSS: 6.5
# Publish: 2014-09-22T14:55:00
# SQL injection vulnerability in the editgallery function in admin/gallery_func.php in the Huge-IT Image Gallery plugin 1.0.1 for WordPress allows remote authenticated users to execute arbitrary SQL commands via the removeslide parameter to wp-admin/admin.php.
SecRule REQUEST_URI "@contains wp-admin/admin.php" \
	"id:66601612,chain,msg:'POL-2014-7153',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,multiMatch,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq gallerys_huge_it_gallery" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_GET:removeslide "@rx \D" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2012-6624
# CVSS: 4.3
# Publish: 2014-01-16T21:55:00
# Cross-site scripting (XSS) vulnerability in the SoundCloud Is Gold plugin 2.1 for WordPress allows remote attackers to inject arbitrary web script or HTML via the width parameter in a soundcloud_is_gold_player_preview action to wp-admin/admin-ajax.php.
SecRule TX:WordPress "@eq 1" \
	"id:66601613,chain,msg:'POL-2012-6624',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@streq soundcloud_is_gold_player_preview" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:width "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-1907
# CVSS: 6.4
# Publish: 2014-03-06T15:55:00
# Multiple directory traversal vulnerabilities in the VideoWhisper Live Streaming Integration plugin before 4.29.5 for WordPress allow remote attackers to (1) read arbitrary files via a .. (dot dot) in the s parameter to ls/rtmp_login.php or (2) delete arbitrary files via a .. (dot dot) in the s parameter to ls/rtmp_logout.php.
SecRule REQUEST_URI "/wp-content/plugins/videowhisper-live-streaming-integration/ls/(rtmp_login.php|rtmp_logout.php)" \
	"id:66601614,chain,msg:'POL-2014-1907',deny,status:403,t:none,t:urlDecodeUni,t:cmdline,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:s "\.\./" "


# CVE: CVE-2013-7319
# CVSS: 4.3
# Publish: 2014-02-06T16:10:00
# Cross-site scripting (XSS) vulnerability in the Download Manager plugin before 2.5.9 for WordPress allows remote attackers to inject arbitrary web script or HTML via the title field.
#5001056
SecRule REQUEST_URI "!@rx wp-admin/admin-ajax\.php" \
        "id:66601615,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5001056"

SecMarker BEGIN-RULE5001056
SecRule REQUEST_METHOD "@streq POST" \
        "id:66601616,chain,msg:'POL-2013-7319',phase:2,deny,status:403,log,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:file[title] "@rx <|\"" "

SecMarker END-RULE5001056

# CVE: CVE-2012-6622
# CVSS: 4.3
# Publish: 2014-01-16T21:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in fs-admin/fs-admin.php in the ForumPress WP Forum Server plugin before 1.7.4 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) groupid parameter in an editgroup action or (2) usergroup_id parameter in an edit_usergroup action.
SecRule TX:WordPress "@eq 1" \
	"id:66601617,chain,msg:'POL-2012-6622',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith /wp-admin/admin.php" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS:page "@contains forum-server/fs-admin/fs-admin.php" \
	"chain,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase"
SecRule ARGS:groupid|ARGS:usergroup_id "@rx \D" \
	"t:none"


# CVE: CVE-2014-4545
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in pq_dialog.php in the Pro Quoter plugin 1.0 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) leftorright or (2) author parameter.
SecRule REQUEST_FILENAME "@endsWith pq_dialog.php" \
	"id:66601618,chain,msg:'POL-2014-4545',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:leftorright|ARGS_GET:author "@rx \"|'" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4569
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Cross-site scripting (XSS) vulnerability in ls/vv_login.php in the VideoWhisper Live Streaming Integration plugin 4.27.2 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the room_name parameter.
SecRule REQUEST_FILENAME "@endsWith vv_login.php" \
	"id:66601619,chain,msg:'POL-2014-4569',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:room_name "@pm < >" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2017-7719
# CVSS: 7.5
# Publish: 2017-04-12T15:59:00
# SQL injection in the Spider Event Calendar (aka spider-event-calendar) plugin before 1.5.52 for WordPress is exploitable with the order_by parameter to calendar_functions.php or widget_Theme_functions.php, related to front_end/frontend_functions.php.
SecRule &TX:WordPress "@eq 1" \
	"id:66601620,chain,msg:'POL-2017-7719',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq spidercalendar" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:order_by "@rx \W" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-4084
# CVSS: 4.3
# Publish: 2015-05-28T14:59:00
# Cross-site scripting (XSS) vulnerability in the Free Counter plugin 1.1 for WordPress allows remote attackers to inject arbitrary web script or HTML via the value_ parameter in a check_stat action to wp-admin/admin-ajax.php.
SecRule REQUEST_FILENAME "@endsWith admin-ajax.php" \
	"id:66601621,chain,msg:'POL-2015-4084',deny,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@contains check_stat" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_POST:id_counter "@gt 0" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:value "@contains <" \
	"t:none,t:lowercase"


# CVE: CVE-2015-5471
# CVSS: 5
# Publish: 2016-01-12T19:59:00
# Absolute path traversal vulnerability in include/user/download.php in the Swim Team plugin 1.44.10777 for WordPress allows remote attackers to read arbitrary files via a full pathname in the file parameter.
SecRule REQUEST_FILENAME "@contains include/user/download" \
	"id:66601622,chain,msg:'POL-2015-5471',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:file "@beginsWith /" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-6444
# CVSS: 4.3
# Publish: 2016-01-08T21:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Titan Framework plugin before 1.6 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) t parameter to iframe-googlefont-preview.php or the (2) text parameter to iframe-font-preview.php.
SecRule REQUEST_FILENAME "@pm iframe-googlefont-preview iframe-font-preview" \
	"id:66601623,chain,msg:'POL-2014-6444',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:t|ARGS_GET:text "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-0770
# CVSS: 4.3
# Publish: 2017-03-16T15:59:00
# Cross-site scripting (XSS) vulnerability in includes/admin/pages/manage.php in the Connections Business Directory plugin before 8.5.9 for WordPress allows remote attackers to inject arbitrary web script or HTML via the s variable.
SecRule REQUEST_FILENAME "@contains /wp-admin/admin.php" \
	"id:66601624,chain,msg:'POL-2016-0770',phase:2,deny,status:403,log,t:none,t:lowercase,t:urlDecodeUni,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq connections_manage" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:s "@contains <" \
	"t:none,t:lowercase,t:urlDecodeUni"


# CVE: CVE-2014-6446
# CVSS: 7.5
# Publish: 2014-09-26T21:55:00
# The Infusionsoft Gravity Forms plugin 1.5.3 through 1.5.10 for WordPress does not properly restrict access, which allows remote attackers to upload arbitrary files and execute arbitrary PHP code via a request to utilities/code_generator.php.
SecRule REQUEST_FILENAME "@endsWith infusionsoft/utilities/code_generator.php" \
	"id:66601625,msg:'POL-2014-6446',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"


# CVE: CVE-2015-6238
# CVSS: 4.3
# Publish: 2015-09-21T19:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Google Analyticator plugin before 6.4.9.6 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) ga_adsense, (2) ga_admin_disable_DimentionIndex, (3) ga_downloads_prefix, (4) ga_downloads, or (5) ga_outbound_prefix parameter in the google-analyticator page to wp-admin/admin.php.
SecRule ARGS_GET:page "@streq google-analyticator" \
	"id:66601626,chain,msg:'POL-2015-6238',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:ga_admin_disable_DimentionIndex|ARGS_POST:ga_adsense|ARGS_POST:ga_downloads_prefix|ARGS_POST:ga_downloads|ARGS_POST:ga_outbound_prefix "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-1000112
# CVSS: 9.4
# Publish: 2016-10-06T14:59:00
# Unauthenticated remote .jpg file upload in contus-video-comments v1.0 wordpress plugin
SecRule TX:WordPress "@eq 1" \
	"id:66601627,chain,msg:'POL-2016-1000112',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith save.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:id "@contains .." \
	"t:none,t:normalizePath,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-1580
# CVSS: 6.8
# Publish: 2015-02-11T19:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Redirection Page plugin 1.2 for WordPress allow remote attackers to hijack the authentication of administrators for requests that (1) change plugin settings or conduct cross-site scripting (XSS) attacks via the (2) source or (3) redir parameter in an add action in the redirection-page to wp-admin/options-general.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601628,chain,phase:2,pass,nolog,skip:2,rev:4,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"chain,t:none"
SecRule ARGS_GET:page "@streq redirection-page" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.redirection_page_plugin=1',expirevar:'SESSION.redirection_page_plugin=300',t:none,t:lowercase"

SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"id:66601629,chain,msg:'POL-2015-1580',phase:2,deny,status:403,log,t:none,rev:4,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq redirection-page" \
	"chain,t:none,t:lowercase"
SecRule &ARGS:redirectionpage_action "@ge 1" \
	"chain,t:none"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:redirection_page_plugin "!@eq 1" "

SecRule ARGS_GET:page "@streq redirection-page" \
	"id:66601630,chain,msg:'POL-2015-1580',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule &ARGS:redirectionpage_action "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:source|ARGS_POST:redir "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-2084
# CVSS: 6.8
# Publish: 2015-02-25T22:59:00
# Cross-site request forgery (CSRF) vulnerability in the Easy Social Icons plugin before 1.2.3 for WordPress allows remote attackers to hijack the authentication of administrators for requests that conduct cross-site scripting (XSS) attacks via the image_file parameter in an edit action in the cnss_social_icon_add page to wp-admin/admin.php.
SecRule &SESSION:wp_session "@eq 1" \
	"id:66601631,chain,phase:2,pass,nolog,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains cnss_social_icon" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith /admin.php" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.easysocial=1',expirevar:'SESSION.easysocial=300',t:none,t:lowercase"

SecRule REQUEST_FILENAME "@endsWith /admin.php" \
	"id:66601632,chain,msg:'POL-2015-2084',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains cnss_social_icon" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:easysocial "!@eq 1" "

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601633,chain,msg:'POL-2015-2084',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains cnss_social_icon" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:image_file "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-1581
# CVSS: 6.8
# Publish: 2015-02-11T19:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Mobile Domain plugin 1.5.2 for WordPress allow remote attackers to hijack the authentication of administrators for requests that (1) change plugin settings or conduct cross-site scripting (XSS) attacks via the (2) domain, (3) text, (4) font, (5) fontcolor, (6) color, or (7) padding parameter in an add-domain action in the mobile-domain page to wp-admin/options-general.php.
SecRule &SESSION:wp_session "@eq 1" \
	"id:66601634,chain,phase:2,pass,nolog,skip:1,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith /options-general.php" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_GET:page "@contains mobile-domain" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.mobiledomain=1',expirevar:'SESSION.mobiledomain=300',t:none,t:lowercase"

SecRule REQUEST_FILENAME "@endsWith /options-general.php" \
	"id:66601635,chain,msg:'POL-2015-1581',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains mobile-domain" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:mobiledomain "!@eq 1" "

SecRule ARGS_GET:page "@contains mobile-domain" \
	"id:66601636,chain,msg:'POL-2015-1581',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@contains /options-general.php" \
	"chain,t:none,t:lowercase,t:urlDecodeUni"
SecRule ARGS_POST:domain|ARGS_POST:text|ARGS_POST:font|ARGS_POST:fontcolor|ARGS_POST:color|ARGS_POST:padding "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-2039
# CVSS: 6.8
# Publish: 2015-02-20T16:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Acobot Live Chat & Contact Form plugin 2.0 for WordPress allow remote attackers to hijack the authentication of administrators for requests that (1) change plugin settings or (2) conduct cross-site scripting (XSS) attacks via the acobot_token parameter in the acobot page to wp-admin/options-general.php.
SecRule &SESSION:wp_session "@eq 1" \
	"id:66601637,chain,phase:2,pass,nolog,rev:4,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith /options-general.php" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS:page "@streq acobot" \
	"setvar:'SESSION.wp_acobot=1',expirevar:'SESSION.wp_acobot=300',t:none,t:lowercase"

SecRule REQUEST_FILENAME "@endsWith /options-general.php" \
	"id:66601638,chain,msg:'POL-2015-2039',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:4,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:page "@streq acobot" \
	"chain,t:none,t:lowercase"
SecRule &ARGS:update_account "@ge 1" \
	"chain"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_acobot "!@eq 1" "

SecRule ARGS:page "@streq acobot" \
	"id:66601639,chain,msg:'POL-2015-2039',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule &ARGS:update_account "@ge 1" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith /options-general.php" \
	"chain,t:none,t:lowercase,t:urlDecodeUni"
SecRule ARGS_POST:acobot_token "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2016-4833
# CVSS: 4.3
# Publish: 2016-08-03T01:59:00
# Cross-site scripting (XSS) vulnerability in the Nofollow Links plugin before 1.0.11 for WordPress allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.
SecRule TX:WordPress "@eq 1" \
	"id:66601640,chain,msg:'POL-2016-4833',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq link-nofollow" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_URI "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-5533
# CVSS: 6.5
# Publish: 2017-10-23T18:29:00
# SQL injection vulnerability in counter-options.php in the Count Per Day plugin before 3.4.1 for WordPress allows remote authenticated administrators to execute arbitrary SQL commands via the cpd_keep_month parameter to wp-admin/options-general.php.  NOTE: this can be leveraged using CSRF to allow remote attackers to execute arbitrary SQL commands.
SecRule ARGS_GET:page "@streq count-per-day/counter-options.php" \
	"id:66601641,chain,msg:'POL-2015-5533',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:do "@streq cpd_collect" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:collect "@streq collectolddata" \
	"chain,t:none,t:urlDecodeUni,t:removeWhitespace,t:lowercase"
SecRule ARGS_POST:cpd_keep_month "@rx \D" \
	"t:none"


# CVE: CVE-2014-7957
# CVSS: 6.8
# Publish: 2015-01-15T15:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Pods plugin before 2.5 for WordPress allow remote attackers to hijack the authentication of administrators for requests that (1) conduct cross-site scripting (XSS) attacks via the toggled parameter in a toggle action in the pods-components page to wp-admin/admin.php, (2) delete a pod in a delete action in the pods page to wp-admin/admin.php, (3) reset pod settings and data via the pods_reset parameter in the pod-settings page to wp-admin/admin.php, (4) deactivate and reset pod data via the pods_reset_deactivate parameter in the pod-settings page to wp-admin/admin.php, (5) delete the admin role via the id parameter in a delete action in the pods-component-roles-and-capabilities page to wp-admin/admin.php, or (6) enable "roles and capabilities" in a toggle action in the pods-components page to wp-admin/admin.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601642,chain,phase:2,pass,nolog,t:none,skip:2,rev:5,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains pods" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_GET "@eq 1" \
	"setvar:'SESSION.wp_pods=1',expirevar:'SESSION.wp_pods=300',t:none"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601643,chain,msg:'POL-2014-7957',phase:2,deny,status:403,log,t:none,rev:5,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains pods" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET_NAMES "@pm action tab" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_pods "!@eq 1" \
	"t:none"

SecRule ARGS_GET:page "@streq pods-components" \
	"id:66601644,chain,msg:'POL-2014-7957',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:id "@streq roles-and-capabilities" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:toggled "@rx \D" \
	"t:none"


# CVE: CVE-2015-4010
# CVSS: 6.8
# Publish: 2015-06-09T14:59:00
# Cross-site request forgery (CSRF) vulnerability in the Encrypted Contact Form plugin before 1.1 for WordPress allows remote attackers to hijack the authentication of administrators for requests that conduct cross-site scripting (XSS) attacks via the iframe_url parameter in an Update Page action in the conformconf page to wp-admin/options-general.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601645,chain,phase:2,pass,nolog,skip:1,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq conformconf" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.encform=1',expirevar:'SESSION.encform=300',t:none,t:lowercase"

SecRule ARGS_GET:page "@streq conformconf" \
	"id:66601646,chain,msg:'POL-2015-4010',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:encform "!@ge 1" \
	"t:none"

SecRule ARGS_GET:page "@streq conformconf" \
	"id:66601647,chain,msg:'POL-2015-4010',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:iframe_url "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-1879
# CVSS: 4.3
# Publish: 2015-02-19T15:59:00
# Cross-site scripting (XSS) vulnerability in the Google Doc Embedder plugin before 2.5.19 for WordPress allows remote attackers to inject arbitrary web script or HTML via the profile parameter in an edit action in the gde-settings page to wp-admin/options-general.php.
SecRule REQUEST_FILENAME "@contains /options-general.php" \
	"id:66601648,chain,msg:'POL-2015-1879',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains gde-settings" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:profile "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-1582
# CVSS: 4.3
# Publish: 2015-02-11T19:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Spider Facebook plugin before 1.0.11 for WordPress allow (1) remote attackers to inject arbitrary web script or HTML via the appid parameter in a registration task to the default URI or remote administrators to inject arbitrary web script or HTML via the (2) asc_or_desc, (3) order_by, (4) page_number, (5) serch_or_not, or (6) search_events_by_title parameter in (a) the Spider_Facebook_manage page to wp-admin/admin.php or a (b) selectpagesforfacebook or (c) selectpostsforfacebook action to wp-admin/admin-ajax.php.
SecRule TX:WordPress "@eq 1" \
	"id:66601649,chain,msg:'POL-2015-1582',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains spider_facebook_manage" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:asc_or_desc|ARGS_POST:page_number|ARGS_POST:order_by|ARGS_POST:serch_or_not|ARGS_POST:search_events_by_title "@pm \" <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule TX:WordPress "@eq 1" \
	"id:66601650,chain,msg:'POL-2015-1582',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:action "@pm selectpagesforfacebook selectpostsforfacebook" \
	"chain,t:none"
SecRule ARGS_POST:asc_or_desc|ARGS_POST:page_number|ARGS_POST:order_by|ARGS_POST:serch_or_not|ARGS_POST:search_events_by_title "@pm \" <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_URI "@contains task=registration" \
	"id:66601651,chain,msg:'POL-2015-1582',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:type "@streq auto" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:appid "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-2069
# CVSS: 4.3
# Publish: 2015-02-24T17:59:00
# Cross-site scripting (XSS) vulnerability in the WooCommerce plugin before 2.2.11 for WordPress allows remote attackers to inject arbitrary web script or HTML via the QUERY_STRING in the wc-reports page to wp-admin/admin.php.
SecRule REQUEST_FILENAME "@endsWith wp-admin/admin.php" \
	"id:66601652,chain,msg:'POL-2015-2069',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains wc-reports" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_NAMES "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-2040
# CVSS: 4.3
# Publish: 2015-02-20T16:59:00
# Cross-site scripting (XSS) vulnerability in the Contact Form DB (aka CFDB and contact-form-7-to-database-extension) plugin 2.8.26 for WordPress allows remote attackers to inject arbitrary web script or HTML via the submit_time parameter in the CF7DBPluginSubmissions page to wp-admin/admin.php.
SecRule REQUEST_FILENAME "@contains /admin.php" \
	"id:66601653,chain,msg:'POL-2015-2040',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains cf7dbpluginsubmissions" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_GET:submit_time "@rx \"" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-2220
# CVSS: 4.3
# Publish: 2015-03-05T16:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Ninja Forms plugin before 2.8.9 for WordPress allow (1) remote attackers to inject arbitrary web script or HTML via the ninja_forms_field_1 parameter in a ninja_forms_ajax_submit action to wp-admin/admin-ajax.php or (2) remote administrators to inject arbitrary web script or HTML via the fields[1] parameter to wp-admin/post.php.
SecRule REQUEST_FILENAME "@contains /wp-admin/admin-ajax.php" \
	"id:66601654,chain,msg:'POL-2015-2220',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:action "@contains ninja_forms_ajax_submit" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:/^ninja_forms_field_\d+$/ "@contains <" \
	"t:none,t:urlDecodeUni"

SecRule REQUEST_FILENAME "@contains /wp-admin/post.php" \
	"id:66601655,chain,msg:'POL-2015-2220',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:/fields\[\d+\]$/ "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4521
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Cross-site scripting (XSS) vulnerability in client-assist.php in the dsIDXpress IDX plugin before 2.1.1 for WordPress allows remote attackers to inject arbitrary web script or HTML via the action parameter.
SecRule REQUEST_FILENAME "@endsWith client-assist.php" \
	"id:66601656,chain,msg:'POL-2014-4521',phase:1,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:action "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2015-1376
# CVSS: 4
# Publish: 2015-01-28T11:59:00
# pixabay-images.php in the Pixabay Images plugin before 2.4 for WordPress does not validate hostnames, which allows remote authenticated users to write to arbitrary files via an upload URL with a host other than pixabay.com.
SecRule REQUEST_FILENAME "@rx \/wp\-admin\/(?:index\.php)?$" \
	"id:66601657,chain,msg:'POL-2015-1376',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule &ARGS_POST:pixabay_upload "@ge 1" \
	"chain"
SecRule ARGS_POST:image_url "!@rx ^https?\:\/\/pixabay\.com\/" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2015-1384
# CVSS: 4.3
# Publish: 2015-02-03T16:59:00
# Cross-site scripting (XSS) vulnerability in the Banner Effect Header plugin before 1.2.8 for WordPress allows remote attackers to inject arbitrary web script or HTML via the banner_effect_divid parameter in the BannerEffectOptions page to wp-admin/options-general.php.
SecRule REQUEST_FILENAME "@endsWith /options-general.php" \
	"id:66601658,chain,msg:'POL-2015-1384',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:5,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq bannereffectoptions" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule ARGS_POST:banner_effect_email|ARGS_POST:banner_effect_divid "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-8584
# CVSS: 4.3
# Publish: 2014-11-04T15:55:00
# Cross-site scripting (XSS) vulnerability in the Web Dorado Spider Video Player (aka WordPress Video Player) plugin before 1.5.2 for WordPress allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.
SecRule ARGS_GET:page "@pm Spider_Video_Player_Videos Spider_Video_Player Tags_Spider_Video_Player Spider_Video_Player_Playlists Spider_Video_Player_Themes" \
	"id:66601659,chain,msg:'POL-2014-8584',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:search_events_by_title "@rx \"" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"t:none,t:lowercase"


# CVE: CVE-2010-3977
# CVSS: 4.3
# Publish: 2010-11-03T13:37:00
# Multiple cross-site scripting (XSS) vulnerabilities in wp-content/plugins/cforms/lib_ajax.php in cforms WordPress plugin 11.5 allow remote attackers to inject arbitrary web script or HTML via the (1) rs and (2) rsargs[] parameters.
SecRule REQUEST_FILENAME "@endsWith lib_ajax.php" \
	"id:66601660,chain,msg:'POL-2010-3977',phase:2,deny,status:403,log,t:none,t:lowercase,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:rs|ARGS_POST:rsargs[] "@contains <" \
	"t:none,t:urlDecodeUni"


# CVE: CVE-2014-4514
# CVSS: 4.3
# Publish: 2014-10-21T15:55:00
# Cross-site scripting (XSS) vulnerability in includes/api_tenpay/inc.tenpay_notify.php in the Alipay plugin 3.6.0 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via vectors related to the getDebugInfo function.
SecRule REQUEST_FILENAME "@contains includes/api_tenpay/inc.tenpay_notify" \
	"id:66601661,chain,msg:'POL-2014-4514',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:$para_ret['total_fee "@rx <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-6920
# CVSS: 4.3
# Publish: 2015-09-11T20:59:00
# Cross-site scripting (XSS) vulnerability in js/window.php in the sourceAFRICA plugin 0.1.3 for WordPress allows remote attackers to inject arbitrary web script or HTML via the wpbase parameter.
SecRule REQUEST_FILENAME "@endsWith js/window.php" \
	"id:66601662,chain,msg:'POL-2015-6920',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:wpbase "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-8799
# CVSS: 5
# Publish: 2014-11-28T15:59:00
# Directory traversal vulnerability in the dp_img_resize function in php/dp-functions.php in the DukaPress plugin before 2.5.4 for WordPress allows remote attackers to read arbitrary files via a .. (dot dot) in the src parameter to lib/dp_image.php.
SecRule REQUEST_FILENAME "@endsWith lib/dp_image.php" \
	"id:66601663,chain,msg:'POL-2014-8799',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:src "@rx ^\/|\.\." \
	"t:none,t:urlDecodeUni,t:normalizePath"


# CVE: CVE-2015-6805
# CVSS: 3.5
# Publish: 2015-09-02T14:59:00
# Cross-site scripting (XSS) vulnerability in the MDC Private Message plugin 1.0.0 for WordPress allows remote authenticated users to inject arbitrary web script or HTML via the message field in a private message.
SecRule ARGS_POST:action "@contains mdc_send_msg" \
	"id:66601664,chain,msg:'POL-2015-6805',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@endsWith admin-ajax.php" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:message "@contains <" \
	"t:none,t:htmlEntityDecode,t:urlDecodeUni"


# CVE: CVE-2014-4723
# CVSS: 4.3
# Publish: 2014-07-07T14:55:00
# Cross-site scripting (XSS) vulnerability in the Easy Banners plugin 1.4 for WordPress allows remote attackers to inject arbitrary web script or HTML via the name parameter to wp-admin/options-general.php.
SecRule ARGS_GET:page "@contains easy-banners" \
	"id:66601665,chain,msg:'POL-2014-4723',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:name|ARGS_POST:width|ARGS_POST:height|ARGS_POST:srcURL|ARGS_POST:linkURL "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4724
# CVSS: 4.3
# Publish: 2014-07-07T14:55:00
# Cross-site scripting (XSS) vulnerability in the Custom Banners plugin 1.2.2.2 for WordPress allows remote attackers to inject arbitrary web script or HTML via the custom_banners_registered_name parameter to wp-admin/options.php.
SecRule ARGS_POST:option_page "@streq custom-banners-settings-group" \
	"id:66601666,chain,msg:'POL-2014-4724',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:custom_banners_custom_css|ARGS_POST:custom_banners_registered_name|ARGS_POST:custom_banners_registered_url|ARGS_POST:custom_banners_registered_key "@rx \"|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-4062
# CVSS: 6.5
# Publish: 2015-05-27T18:59:00
# SQL injection vulnerability in includes/nsp_search.php in the NewStatPress plugin before 0.9.9 for WordPress allows remote authenticated users to execute arbitrary SQL commands via the where1 parameter in the nsp_search page to wp-admin/admin.php.
SecRule ARGS_GET:limitquery "@ge 0" \
	"id:66601667,chain,msg:'POL-2015-4062',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq nsp_search" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:/where[1-3]/ "!@rx ^[a-z]+$" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-1393
# CVSS: 6.5
# Publish: 2015-02-02T15:59:00
# SQL injection vulnerability in the Photo Gallery plugin before 1.2.11 for WordPress allows remote authenticated users to execute arbitrary SQL commands via the asc_or_desc parameter in a create gallery request in the galleries_bwg page to wp-admin/admin.php.
SecRule REQUEST_COOKIES_NAMES "@contains wordpress" \
	"id:66601668,chain,msg:'POL-2015-1393',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq galleries_bwg" \
	"chain,t:none,t:lowercase"
SecRule ARGS:asc_or_desc "!@within asc desc" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-4063
# CVSS: 3.5
# Publish: 2015-05-27T18:59:00
# Cross-site scripting (XSS) vulnerability in includes/nsp_search.php in the NewStatPress plugin before 0.9.9 for WordPress allows remote authenticated users to inject arbitrary web script or HTML via the where1 parameter in the nsp_search page to wp-admin/admin.php.
SecRule ARGS_GET:page "@streq nsp_search" \
	"id:66601669,chain,msg:'POL-2015-4063',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:/where[1-3]/ "!@rx ^[a-z]+$" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"t:none,t:lowercase"

SecRule ARGS_GET:page "@streq nsp_search" \
	"id:66601670,chain,msg:'POL-2015-4063',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:/what[1-3]/ "@rx <" \
	"chain,t:none,t:urlDecodeUni"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"t:none,t:lowercase"


# CVE: CVE-2010-4402
# CVSS: 4.3
# Publish: 2010-12-06T13:37:00
# Multiple cross-site scripting (XSS) vulnerabilities in wp-login.php in the Register Plus plugin 3.5.1 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) firstname, (2) lastname, (3) website, (4) aim, (5) yahoo, (6) jabber, (7) about, (8) pass1, and (9) pass2 parameters in a register action.
SecRule REQUEST_FILENAME "@contains wp-login.php" \
	"id:66601671,chain,msg:'POL-2010-4402',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:action "@streq register" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:firstname|ARGS_POST:lastname|ARGS_POST:website|ARGS_POST:aim|ARGS_POST:yahoo|ARGS_POST:jabber|ARGS_POST:pass1|ARGS_POST:pass2 "@contains \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@contains wp-login.php" \
	"id:66601672,chain,msg:'POL-2010-4402',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:about "@contains textarea" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:action "@streq register" \
	"t:none,t:lowercase"


# CVE: CVE-2014-1232
# CVSS: 4.3
# Publish: 2014-01-08T15:30:00
# Cross-site scripting (XSS) vulnerability in the Foliopress WYSIWYG plugin before 2.6.8.5 for WordPress allows remote attackers to inject arbitrary web script or HTML via unspecified vectors.
SecRule ARGS_GET:page "@streq fv_wysiwyg" \
	"id:66601673,chain,msg:'POL-2014-1232',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:ImagesPath|ARGS_POST:FCKWidth|ARGS_POST:postmeta|ARGS_POST:bodyid|ARGS_POST:bodyclass|ARGS_POST:wysiwygstyles "@rx <|\"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-2090
# CVSS: 7.5
# Publish: 2015-02-26T15:59:00
# SQL injection vulnerability in the ajax_survey function in settings.php in the WordPress Survey and Poll plugin 1.1.7 for Wordpress allows remote attackers to execute arbitrary SQL commands via the survey_id parameter in an ajax_survey action to wp-admin/admin-ajax.php.
SecRule REQUEST_FILENAME "@endsWith admin-ajax.php" \
	"id:66601674,chain,msg:'POL-2015-2090',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS:action "@streq ajax_survey" \
	"chain,t:none,t:lowercase"
SecRule ARGS:survey_id "@rx \D" "


# CVE: CVE-2014-4555
# CVSS: 4.3
# Publish: 2014-07-02T20:55:00
# Cross-site scripting (XSS) vulnerability in fonts/font-form.php in the Style It plugin 1.0 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the mode parameter.
SecRule REQUEST_FILENAME "@endsWith font-form.php" \
	"id:66601675,chain,msg:'POL-2014-4555',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePath,t:removeWhitespace,t:htmlEntityDecode,t:lowercase,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:mode "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"


# CVE: CVE-2014-9524
# CVSS: 6.8
# Publish: 2015-01-05T20:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Facebook Like Box (cardoza-facebook-like-box) plugin before 2.8.3 for WordPress allow remote attackers to hijack the authentication of administrators for requests that (1) change plugin settings via unspecified vectors or conduct cross-site scripting (XSS) attacks via the (2) frm_title, (3) frm_url, (4) frm_border_color, (5) frm_width, or (6) frm_height parameter in the slug_for_fb_like_box page to wp-admin/admin.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601676,chain,phase:2,pass,nolog,skip:1,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq slug_for_fb_like_box" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.wp_fb_like=1',expirevar:'SESSION.wp_fb_like=300',t:none,t:lowercase"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601677,chain,msg:'POL-2014-9524',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq slug_for_fb_like_box" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_fb_like "!@eq 1" \
	"t:none"

SecRule ARGS_GET:page "@streq slug_for_fb_like_box" \
	"id:66601678,chain,msg:'POL-2014-9524',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:frm_title|ARGS_POST:frm_url|ARGS_POST:frm_border_color|ARGS_POST:frm_width|ARGS_POST:frm_height "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-3210
# CVSS: 6.5
# Publish: 2014-05-22T15:13:00
# SQL injection vulnerability in dopbs-backend-forms.php in the Booking System (Booking Calendar) plugin before 1.3 for WordPress allows remote authenticated users to execute arbitrary SQL commands via the booking_form_id parameter to wp-admin/admin-ajax.php.
SecRule ARGS:booking_form_id "[^0-9]" \
	"id:66601679,chain,msg:'POL-2014-3210',phase:2,deny,status:403,log,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_URI "@contains /admin-ajax.php" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2014-9523
# CVSS: 6.8
# Publish: 2015-01-05T20:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Our Team Showcase (our-team-enhanced) plugin before 1.3 for WordPress allow remote attackers to hijack the authentication of administrators for requests that (1) change plugin settings via unspecified vectors or (2) conduct cross-site scripting (XSS) attacks via the sc_our_team_member_count parameter in the sc_team_settings page to wp-admin/edit.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601680,chain,phase:2,pass,nolog,skip:1,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:post_type "@streq team_member" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@streq sc_team_settings" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.wp_our_team=1',expirevar:'SESSION.wp_our_team=300',t:none,t:lowercase"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601681,chain,msg:'POL-2014-9523',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:post_type "@streq team_member" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:page "@streq sc_team_settings" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_our_team "!@eq 1" \
	"t:none"

SecRule ARGS_GET:post_type "@streq team_member" \
	"id:66601682,chain,msg:'POL-2014-9523',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq sc_team_settings" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:sc_our_team_member_count "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-3843
# CVSS: 6.8
# Publish: 2014-05-22T15:13:00
# Cross-site request forgery (CSRF) vulnerability in the Search Everything plugin before 8.1.1 for WordPress allows remote attackers to hijack the authentication of unspecified victims via unknown vectors.
#5001088
SecRule REQUEST_URI "!@rx \/options\-general\.php" \
        "id:66601683,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5001088"

SecMarker BEGIN-RULE5001088
SecRule REQUEST_METHOD "@streq GET" \
        "id:66601684,msg:'POL-2014-3843',phase:2,pass,setvar:'SESSION.wpse=1',setvar:'SESSION.TIMEOUT=3600',expirevar:'SESSION.wpse=3600',nolog,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule SESSION:wpse "@eq 1" \
        "id:66601685,chain,msg:'POL-2014-3843',phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_METHOD "@streq POST"

SecRule REQUEST_METHOD "@streq POST" \
        "id:66601686,chain,msg:'POL-2014-3843',phase:2,deny,status:403,log,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq extend_search" \
        "chain"
SecRule &SESSION:wpse "@eq 0" "

SecMarker END-RULE5001088

# CVE: CVE-2014-4533
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Cross-site scripting (XSS) vulnerability in ajax_functions.php in the GEO Redirector plugin 1.0.1 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the hid_id parameter.
SecRule ARGS_GET:hid_id "@contains >" \
	"id:66601687,chain,msg:'POL-2014-4533',phase:2,deny,status:403,log,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@contains /wp-content/plugins/geo-redirector/ajax_functions.php" \
	"t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,t:normalizePath,multiMatch"


# CVE: CVE-2014-4717
# CVSS: 6.8
# Publish: 2014-07-03T14:55:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Simple Share Buttons Adder plugin before 4.5 for WordPress allow remote attackers to hijack the authentication of administrators for requests that conduct cross-site scripting (XSS) attacks via the (1) ssba_share_text parameter in a save action to wp-admin/options-general.php, which is not properly handled in the homepage, and unspecified vectors related to (2) Pages, (3) Posts, (4) Category/Archive pages or (5) post Excerpts.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601688,chain,phase:2,pass,nolog,skip:1,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq simple-share-buttons-adder" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.wp_simple-share-buttons=1',expirevar:'SESSION.wp_simple-share-buttons=300',t:none,t:lowercase"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601689,chain,msg:'POL-2014-4717',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq simple-share-buttons-adder" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_simple-share-buttons "!@eq 1" \
	"t:none"

SecRule ARGS_GET:page "@streq simple-share-buttons-adder" \
	"id:66601690,chain,msg:'POL-2014-4717',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:ssba_share_text|ARGS_POST:ssba_selected_buttons "@rx \"|<" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"t:none,t:lowercase"


# CVE: CVE-2014-4568
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in posts/videowhisper/r_logout.php in the Video Posts Webcam Recorder plugin 1.55.4 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the message parameter.
SecRule REQUEST_FILENAME "@endsWith r_logout.php" \
	"id:66601691,chain,msg:'POL-2014-4568',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:normalizePath,t:removeWhitespace,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:message "@pm ' <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4937
# CVSS: 5
# Publish: 2014-07-11T20:55:00
# Directory traversal vulnerability in includes/bookx_export.php BookX plugin 1.7 for WordPress allows remote attackers to read arbitrary files via a .. (dot dot) in the file parameter.
SecRule REQUEST_URI "@contains includes/bookx_export.php" \
	"id:66601692,chain,msg:'POL-2014-4937',phase:1,deny,status:403,t:none,t:urlDecodeUni,t:cmdline,t:removeWhitespace,t:normalizePath,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:file "@beginsWith ../" \
	"t:none,t:urlDecodeUni,t:cmdline,t:removeWhitespace,t:normalizePath"


# CVE: CVE-2015-4140
# CVSS: 6.8
# Publish: 2015-06-18T18:59:00
# Cross-site request forgery (CSRF) vulnerability in the WP Smiley plugin 1.4.1 for WordPress allows remote attackers to hijack the authentication of editors for requests that conduct cross-site scripting (XSS) attacks via the s4w-more parameter to the smilies4wp.php page to wp-admin/options-general.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601693,chain,phase:2,pass,nolog,skip:1,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains wp_smilies" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.wp_smilies=1',expirevar:'SESSION.wp_smilies=300',t:none,t:lowercase"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601694,chain,msg:'POL-2015-4140',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains wp_smilies" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_smilies "!@eq 1" \
	"t:none"

SecRule ARGS_POST:s4w-more "@contains <" \
	"id:66601695,chain,msg:'POL-2015-4140',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains wp_smilies" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_FILENAME "@endsWith options-general.php" \
	"t:none,t:lowercase"


# CVE: CVE-2015-6535
# CVSS: 3.5
# Publish: 2015-08-31T18:59:00
# Cross-site scripting (XSS) vulnerability in includes/options-profiles.php in the YouTube Embed plugin before 3.3.3 for WordPress allows remote administrators to inject arbitrary web script or HTML via the Profile name field (youtube_embed_name parameter).
SecRule ARGS_GET:page "@streq profile-options" \
	"id:66601696,chain,msg:'POL-2015-6535',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:youtube_embed_name "!@rx ^[\w\-]+$" \
	"chain,t:none"
SecRule REQUEST_FILENAME "@endsWith admin.php" \
	"t:none,t:lowercase"


# CVE: CVE-2014-9437
# CVSS: 6.8
# Publish: 2015-01-02T19:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Sliding Social Icons plugin 1.61 for WordPress allow remote attackers to hijack the authentication of administrators for requests that (1) change plugin settings via unspecified vectors or (2) conduct cross-site scripting (XSS) attacks via the sc_social_slider_margin parameter in a wpbs_save_settings action in the wpbs_panel page to wp-admin/admin.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601697,chain,phase:2,pass,nolog,skip:1,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq wpbs_panel" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.wp_ss-icon=1',expirevar:'SESSION.wp_ss-icon=300',t:none,t:lowercase"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601698,chain,msg:'POL-2014-9437',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq wpbs_panel" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST:action "@streq wpbs_save_settings" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_ss-icon "!@eq 1" \
	"t:none"

SecRule ARGS_GET:page "@streq wpbs_panel" \
	"id:66601699,chain,msg:'POL-2014-9437',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:action "@streq wpbs_save_settings" \
	"chain,t:none,t:lowercase"
SecRule ARGS_POST "@rx <|\"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-9454
# CVSS: 6.8
# Publish: 2015-01-02T20:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Simple Sticky Footer plugin before 1.3.3 for WordPress allow remote attackers to hijack the authentication of administrators for requests that (1) change plugin settings via unspecified vectors or conduct cross-site scripting (XSS) attacks via the (2) simple_sf_width or (3) simple_sf_style parameter in the simple-simple-sticky-footer page to wp-admin/themes.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601700,chain,phase:2,pass,nolog,skip:1,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq simple-simple-sticky-footer" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.wp_sticky-footer=1',expirevar:'SESSION.wp_sticky-footer=300',t:none,t:lowercase"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601701,chain,msg:'POL-2014-9454',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq simple-simple-sticky-footer" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_sticky-footer "!@eq 1" \
	"t:none"

SecRule ARGS_GET:page "@streq simple-simple-sticky-footer" \
	"id:66601702,chain,msg:'POL-2014-9454',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:simple_sf_width|ARGS_POST:simple_sf_style "@rx \'|<" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-9129
# CVSS: 6.8
# Publish: 2014-12-05T15:59:00
# Cross-site request forgery (CSRF) vulnerability in the CreativeMinds CM Downloads Manager plugin before 2.0.7 for WordPress allows remote attackers to hijack the authentication of administrators for requests that conduct cross-site scripting (XSS) attacks via the addons_title parameter in the CMDM_admin_settings page to wp-admin/admin.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601703,chain,phase:2,pass,nolog,skip:1,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq cmdm_admin_settings" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_GET "@eq 1" \
	"setvar:'SESSION.wp_cmdm_admin=1',expirevar:'SESSION.wp_cmdm_admin=300',t:none"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601704,chain,msg:'POL-2014-9129',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq cmdm_admin_settings" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_cmdm_admin "!@eq 1" \
	"t:none"

SecRule ARGS_GET:page "@streq cmdm_admin_settings" \
	"id:66601705,chain,msg:'POL-2014-9129',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:addons_title "@rx <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-9525
# CVSS: 6.8
# Publish: 2015-01-05T20:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the Timed Popup (wp-timed-popup) plugin 1.3 for WordPress allow remote attackers to hijack the authentication of administrators for requests that (1) change plugin settings via unspecified vectors or (2) conduct cross-site scripting (XSS) attacks via the sc_popup_subtitle parameter in the wp-popup.php page to wp-admin/options-general.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601706,chain,phase:2,pass,nolog,skip:1,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains wp-popup" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.wp_popup=1',expirevar:'SESSION.wp_popup=300',t:none,t:lowercase"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601707,chain,msg:'POL-2014-9525',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains wp-popup" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_popup "!@eq 1" \
	"t:none"

SecRule ARGS_GET:page "@contains wp-popup" \
	"id:66601708,chain,msg:'POL-2014-9525',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:sc_popup_title|ARGS_POST:sc_popup_subtitle|ARGS_POST:sc_popup_cta_url|ARGS_POST:sc_popup_cta_text|ARGS_POST:sc_popup_media_link|ARGS_POST:sc_popup_days|ARGS_POST:sc_popup_delay|ARGS_POST:sc_popup_color|ARGS_POST:sc_popup_width "@rx <|\"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-2559
# CVSS: 6.8
# Publish: 2014-10-17T22:55:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in twitget.php in the Twitget plugin before 3.3.3 for WordPress allow remote attackers to hijack the authentication of administrators for requests that change unspecified plugin options via a request to wp-admin/options-general.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601709,chain,phase:2,pass,nolog,skip:1,rev:4,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains twitget/twitget" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_GET "@eq 1" \
	"setvar:'SESSION.wp_twitget=1',expirevar:'SESSION.wp_twitget=300'"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601710,chain,msg:'POL-2014-2559',phase:2,deny,status:403,log,t:none,rev:4,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@contains twitget/twitget" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_twitget "!@eq 1" \
	"t:none"

SecRule ARGS_GET:page "@contains twitget/twitget" \
	"id:66601711,chain,msg:'POL-2014-2559',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:twitget_consumer_key|ARGS_POST:twitget_consumer_secret|ARGS_POST:twitget_user_token|ARGS_POST:twitget_user_secret "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-7666
# CVSS: 4.3
# Publish: 2017-12-27T19:29:00
# Multiple cross-site scripting (XSS) vulnerabilities in the (1) cp_updateMessageItem and (2) cp_deleteMessageItem functions in cp_ppp_admin_int_message_list.inc.php in the Payment Form for PayPal Pro plugin before 1.0.2 for WordPress allow remote attackers to inject arbitrary web script or HTML via the cal parameter.
SecRule TX:WordPress "@eq 1" \
	"id:66601712,chain,msg:'POL-2015-7666',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq cp_ppp" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:cal "@contains <" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2015-8350
# CVSS: 4.3
# Publish: 2017-09-11T20:29:00
# Multiple cross-site scripting (XSS) vulnerabilities in the Calls to Action plugin before 2.5.1 for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) open-tab parameter in a wp_cta_global_settings action to wp-admin/edit.php or (2) wp-cta-variation-id parameter to ab-testing-call-to-action-example/.
SecRule TX:WordPress "@eq 1" \
	"id:66601713,chain,msg:'POL-2015-8350',phase:2,deny,status:403,log,t:none,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_COOKIES:post_type "@streq wp-call-to-action" \
	"chain,t:none,t:lowercase"
SecRule ARGS_GET:wp-cta-variation-id|ARGS_GET:open-tab "@rx <|'" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-2598
# CVSS: 6.8
# Publish: 2015-01-05T20:59:00
# Cross-site request forgery (CSRF) vulnerability in the Quick Page/Post Redirect plugin before 5.0.5 for WordPress allows remote attackers to hijack the authentication of administrators for requests that conduct cross-site scripting (XSS) attacks via the quickppr_redirects[request][] parameter in the redirect-updates page to wp-admin/admin.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601714,chain,phase:2,pass,nolog,skip:1,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq redirect-updates" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"chain,t:none,t:lowercase"
SecRule &ARGS_GET "@eq 1" \
	"setvar:'SESSION.wp_quick_redirects=1',expirevar:'SESSION.wp_quick_redirects=300'"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601715,chain,msg:'POL-2014-2598',phase:2,deny,status:403,log,t:none,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq redirect-updates" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_quick_redirects "!@eq 1" \
	"t:none"

SecRule ARGS_GET:page "@streq redirect-updates" \
	"id:66601716,chain,msg:'POL-2014-2598',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:quickppr_redirects[request][]|ARGS_POST:quickppr_redirects[destination][] "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-9413
# CVSS: 6.8
# Publish: 2014-12-24T18:59:00
# Multiple cross-site request forgery (CSRF) vulnerabilities in the IP Ban (simple-ip-ban) plugin 1.2.3 for WordPress allow remote attackers to hijack the authentication of administrators for requests that conduct cross-site scripting (XSS) attacks via the (1) ip_list, (2) user_agent_list, or (3) redirect_url parameter in the simple-ip-ban page to wp-admin/options-general.php.
SecRule &SESSION:wp_session "@ge 1" \
	"id:66601717,chain,phase:2,pass,nolog,skip:1,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq simple-ip-ban" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq get" \
	"setvar:'SESSION.wp_ip-ban=1',expirevar:'SESSION.wp_ip-ban=300',t:none,t:lowercase"

SecRule &SESSION:wp_session "@ge 1" \
	"id:66601718,chain,msg:'POL-2014-9413',phase:2,deny,status:403,log,t:none,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq simple-ip-ban" \
	"chain,t:none,t:lowercase"
SecRule REQUEST_METHOD "@streq post" \
	"chain,t:none,t:lowercase"
SecRule &SESSION:wp_ip-ban "!@eq 1" \
	"t:none"

SecRule ARGS_GET:page "@streq simple-ip-ban" \
	"id:66601719,chain,msg:'POL-2014-9413',phase:2,deny,status:403,log,t:none,t:lowercase,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_POST:ip_list|ARGS_POST:user_agent_list|ARGS_POST:redirect_url "@rx <|\'" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4595
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in the WP RESTful plugin 0.1 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) oauth_callback parameter to html_api_authorize.php or the (2) oauth_token_temp or (3) oauth_callback_temp parameter to html_api_login.php.
SecRule REQUEST_FILENAME "@contains wp-restful/html_api_login.php" \
	"id:66601720,chain,msg:'POL-2014-4595',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:oauth_callback_temp|ARGS_GET:oauth_token_temp "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"

SecRule REQUEST_FILENAME "@contains wp-restful/html_api_authorize.php" \
	"id:66601721,chain,msg:'POL-2014-4595',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:oauth_callback "@contains >" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4596
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in js/button-snapapp.php in the SnapApp plugin 1.5 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) msg or (2) act parameter.
SecRule REQUEST_FILENAME "@contains js/button-snapapp.php" \
	"id:66601722,chain,msg:'POL-2014-4596',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:act|ARGS_GET:msg "@contains >" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4594
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in index.php in the WordPress Responsive Preview plugin before 1.2 for WordPress allows remote attackers to inject arbitrary web script or HTML via the url parameter.
SecRule REQUEST_FILENAME "@endsWith wp-content/plugins/wp-responsive-preview/index.php" \
	"id:66601723,chain,msg:'POL-2014-4594',phase:1,deny,status:403,log,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase,t:normalizePath,t:removeWhitespace,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:url "@rx \"" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-4565
# CVSS: 4.3
# Publish: 2014-07-02T20:55:00
# Multiple cross-site scripting (XSS) vulnerabilities in vcc.js.php in the Verification Code for Comments plugin 2.1.0 and earlier for WordPress allow remote attackers to inject arbitrary web script or HTML via the (1) vp, (2) vs, (3) l, (4) vu, or (5) vm parameter.
SecRule REQUEST_FILENAME "@contains vcc.js.php" \
	"id:66601724,chain,msg:'POL-2014-4565',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:l|ARGS_GET:vm|ARGS_GET:vp|ARGS_GET:vs|ARGS_GET:vu "@contains >" "


# CVE: CVE-2014-4566
# CVSS: 4.3
# Publish: 2014-07-02T18:55:00
# Cross-site scripting (XSS) vulnerability in res/fake_twitter/frame.php in the "verwei.se - WordPress - Twitter" (verweise-wordpress-twitter) plugin 1.0.2 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the base parameter.
SecRule REQUEST_FILENAME "@contains res/fake_twitter/frame.php" \
	"id:66601725,chain,msg:'POL-2014-4566',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,multiMatch,rev:3,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:base "@rx \"" "


# CVE: CVE-2014-4563
# CVSS: 4.3
# Publish: 2014-07-02T20:55:00
# Cross-site scripting (XSS) vulnerability in go.php in the URL Cloak & Encrypt (url-cloak-encrypt) plugin 2.0 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the url parameter.
SecRule REQUEST_FILENAME "@contains /url-cloak-encrypt/go.php" \
	"id:66601726,chain,msg:'POL-2014-4563',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:url "@rx \"" "


# CVE: CVE-2014-4564
# CVSS: 4.3
# Publish: 2014-07-01T14:55:00
# Cross-site scripting (XSS) vulnerability in check.php in the Validated plugin 1.0.2 and earlier for WordPress allows remote attackers to inject arbitrary web script or HTML via the slug parameter.
SecRule REQUEST_FILENAME "@contains /wp-content/plugins/validated/check.php" \
	"id:66601727,chain,msg:'POL-2014-4564',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:slug "@contains >" "


# CVE: CVE-2014-3870
# CVSS: 4.3
# Publish: 2014-05-27T13:55:00
# Cross-site scripting (XSS) vulnerability in the bib2html plugin 0.9.3 for WordPress allows remote attackers to inject arbitrary web script or HTML via the styleShortName parameter in an adminStyleAdd action to OSBiB/create/index.php.
SecRule ARGS_POST:styleShortName "@rx \"" \
	"id:66601728,chain,msg:'POL-2014-3870',phase:2,deny,status:403,log,t:none,t:htmlEntityDecode,t:urlDecodeUni,t:lowercase,rev:2,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule REQUEST_FILENAME "@streq wp-content/plugins/bib2html/OSBiB/create/index.php" \
	"t:none,t:urlDecodeUni,t:lowercase"


# CVE: CVE-2013-2700
# CVSS: 6.8
# Publish: 2014-05-14T19:55:00
# Cross-site request forgery (CSRF) vulnerability in the Add/Edit page (adminmenus.php) in the WP125 plugin before 1.5.0 for WordPress allows remote attackers to hijack the authentication of administrators for requests that add or edit an ad via unspecified vectors.
#5001084
SecRule REQUEST_URI "!@rx /wp-admin/admin\.php" \
        "id:66601729,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5001084"

SecMarker BEGIN-RULE5001084
SecRule REQUEST_METHOD "@streq GET" \
        "id:66601730,chain,phase:2,pass,setvar:'SESSION.TIMEOUT=3600',setvar:'SESSION.wp_add=1',expirevar:'SESSION.wp_add=3600',nolog,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq wp125_addedit"

SecRule SESSION:wp_add "@eq 1" \
        "id:66601731,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule REQUEST_METHOD "@streq POST" \
        "id:66601732,chain,msg:'POL-2013-2700',phase:2,deny,status:403,log,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq wp125_addedit" \
        "chain"
SecRule &ARGS_POST:adname "@eq 1" \
        "chain"
SecRule &ARGS_POST:adtarget "@eq 1" \
        "chain"
SecRule &ARGS_POST:adimage "@eq 1" "

SecMarker END-RULE5001084

# CVE: CVE-2013-2705
# CVSS: 6.8
# Publish: 2014-05-13T14:55:00
# Cross-site request forgery (CSRF) vulnerability in the WordPress Simple Paypal Shopping Cart plugin before 3.6 for WordPress allows remote attackers to hijack the authentication of administrators for requests that change plugin settings.
#5001081
SecRule REQUEST_URI "!@rx options-general\.php" \
        "id:66601733,\
        phase:2,\
        t:none,\
        nolog,\
        pass,\
        skipAfter:END-RULE5001081"

SecMarker BEGIN-RULE5001081
SecRule REQUEST_METHOD "@streq GET" \
        "id:66601734,chain,phase:2,pass,setvar:'SESSION.TIMEOUT=3600',setvar:'SESSION.wp_paypal=1',expirevar:'SESSION.wp_paypal=3600',nolog,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq wordpress-simple-paypal-shopping-cart/wp_shopping_cart.php"

SecRule SESSION:wp_paypal "@eq 1" \
        "id:66601735,phase:2,pass,nolog,skip:1,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"

SecRule REQUEST_METHOD "@streq POST" \
        "id:66601736,chain,msg:'POL-2013-2705',phase:2,deny,status:403,log,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq wordpress-simple-paypal-shopping-cart/wp_shopping_cart.php" \
        "chain"
SecRule &ARGS_POST:info_update "@ge 1" "

SecMarker END-RULE5001081

# CVE: CVE-2014-5183
# CVSS: 6.5
# Publish: 2014-08-06T19:55:00
# SQL injection vulnerability in includes/mode-edit.php in the Simple Retail Menus (simple-retail-menus) plugin before 4.1 for WordPress allows remote authenticated editors to execute arbitrary SQL commands via the targetmenu parameter in an edit action to wp-admin/admin.php.
SecRule REQUEST_URI "@contains wp-admin/admin.php" \
	"id:66601737,chain,msg:'POL-2014-5183',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,t:normalizePath,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq jsrm-retail-menus" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"
SecRule ARGS_GET:targetmenu "@rx \D" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2014-5184
# CVSS: 6.5
# Publish: 2014-08-06T19:55:00
# SQL injection vulnerability in the stripshow-storylines page in the stripShow plugin 2.5.2 for WordPress allows remote authenticated administrators to execute arbitrary SQL commands via the story parameter in an edit action to wp-admin/admin.php.
SecRule REQUEST_URI "@contains wp-admin/admin.php" \
	"id:66601738,chain,msg:'POL-2014-5184',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:lowercase,t:htmlEntityDecode,t:normalizePath,multiMatch,rev:1,severity:2,tag:'WPPlugin',tag:'WordPress'"
SecRule ARGS_GET:page "@streq stripshow-storylines" \
	"chain,t:none,t:urlDecodeUni,t:htmlEntityDecode,t:lowercase"
SecRule ARGS_GET:story "@rx \D" \
	"t:none,t:urlDecodeUni,t:htmlEntityDecode"


# CVE: CVE-2017-14723
# CVSS: 7.5
# Publish: 2017-09-23T20:29:00
# Before version 4.8.2, WordPress mishandled % characters and additional placeholder values in $wpdb->prepare, and thus did not properly address the possibility of plugins and themes enabling SQL injection attacks.
SecRule REQUEST_URI "@rx (?i:(^\/wp-admin\/upload\.php))" \
	"id:66601739,chain,msg:'POL-2017-14723',phase:2,t:none,t:urlDecodeUni,t:normalizePathWin,deny,log,status:403,rev:2,tag:'WordPress'"
SecRule ARGS:action "@streq delete" \
	"chain,t:none,t:lowercase"
SecRule ARGS:/^media/ "@rx [^\[\]0-9\.\,]" \
	"t:none,t:urlDecodeUni"

# CVE: CVE-2016-6896
# CVSS: 5.5
# Publish: 2017-01-18T21:59:00
# Directory traversal vulnerability in the wp_ajax_update_plugin function in wp-admin/includes/ajax-actions.php in WordPress 4.5.3 allows remote authenticated users to cause a denial of service or read certain text files via a .. (dot dot) in the plugin parameter to wp-admin/admin-ajax.php, as demonstrated by /dev/random read operations that deplete the entropy pool.
SecRule REQUEST_FILENAME "@contains /wp-admin/admin-ajax.php" \
	"id:66601740,chain,msg:'POL-2016-6896',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePathWin,t:lowercase,rev:2,severity:2,tag:'WordPress'"
SecRule ARGS:action "@streq update-plugin" \
	"chain,t:none,t:lowercase"
SecRule ARGS:plugin "@rx ((\.\/\.\.\/)|(\.\\\\\.\.\\\\)|(\.\/\.\.\\\\)|(\.\\\\\.\.\/))" \
	"t:none,t:lowercase,t:normalizePath,t:urlDecodeUni"

# CVE: CVE-2018-7422
# CVSS: 5
# Publish: 2018-03-19T14:29:00
# A Local File Inclusion vulnerability in the Site Editor plugin through 1.1.1 for WordPress allows remote attackers to retrieve arbitrary files via the ajax_path parameter to editor/extensions/pagebuilder/includes/ajax_shortcode_pattern.php, aka absolute path traversal.
SecRule REQUEST_FILENAME "@contains /editor/extensions/pagebuilder/includes/ajax_shortcode_pattern.php"\
		"id:66601741,\
		msg:'POL-2018-7422',\
		deny,chain,status:403,log,rev:1,severity:2,\
        severity:2\
		tag:'VTWAF',\
		tag:'Wordpress',\
		t:none,\
        t:lowercase,\
        t:normalizePathWin,\
        t:urlDecodeUni"

SecRule ARGS:ajax_path "!@contains shortcodes.patterns.php"\
		"t:none,\
		t:trim"

# CVE: CVE-2018-6389
# CVSS: 5
# Publish: 2018-02-06T17:29:00
# In WordPress through 4.9.2, unauthenticated attackers can cause a denial of service (resource consumption) by using the large list of registered .js files (from wp-includes/script-loader.php) to construct a series of requests to load every file many times.
SecRule REQUEST_FILENAME "@contains /wp-admin/load-scripts.php"\
        "chain,\
        id:66601742,\
        deny,status:403,log,rev:1,severity:2,\
        tag:'Wordpress',\
        t:none,\
        t:lowercase,\
        t:normalizePathWin,\
        t:urlDecodeUni,\
        msg:'POL-2018-6389'"

SecRule ARGS:load[] "@ge 200"\
        "t:none,\
        t:trim,\
        t:length"

# CVE: CVE-2017-5487
# CVSS: 5
# Publish: 2017-01-15T02:59:00
# wp-includes/rest-api/endpoints/class-wp-rest-users-controller.php in the REST API implementation in WordPress 4.7 before 4.7.1 does not properly restrict listings of post authors, which allows remote attackers to obtain sensitive information via a wp-json/wp/v2/users request.
SecRule REQUEST_FILENAME "@contains /wp-json/wp/v2/users" \
	"id:66601743,chain,msg:'POL-2017-5487',phase:2,deny,status:403,log,t:none,t:normalizePathWin,t:lowercase,rev:2,severity:2,tag:'WordPress'"
SecRule &REQUEST_COOKIES_NAMES:/^wordpress_([0-9a-fA-f]{32})$/ "!@ge 1" \
	"t:none"

# CVE: CVE-2017-1001000
# CVSS: 5
# Publish: 2017-04-03T01:59:00
# The register_routes function in wp-includes/rest-api/endpoints/class-wp-rest-posts-controller.php in the REST API in WordPress 4.7.x before 4.7.2 does not require an integer identifier, which allows remote attackers to modify arbitrary pages via a request for wp-json/wp/v2/posts followed by a numeric value and a non-numeric value, as demonstrated by the wp-json/wp/v2/posts/123?id=123helloworld URI.
SecRule REQUEST_FILENAME "@contains wp/v2/posts"\
		"id:66601744,\
		chain,\
		phase:2,\
		tag:'Wordpress',\
		t:none,\
		t:urlDecodeUni,\
		t:normalizePathWin,\
		t:lowercase,\
		deny,status:403,log,rev:1,severity:2,\
		msg:'POL-2017-1001000'"
SecRule ARGS:id "@rx \D"\
		"t:none"

# CVE: CVE-2016-6896
# CVSS: 5.5
# Publish: 2017-01-18T21:59:00
# Directory traversal vulnerability in the wp_ajax_update_plugin function in wp-admin/includes/ajax-actions.php in WordPress 4.5.3 allows remote authenticated users to cause a denial of service or read certain text files via a .. (dot dot) in the plugin parameter to wp-admin/admin-ajax.php, as demonstrated by /dev/random read operations that deplete the entropy pool.
SecRule REQUEST_FILENAME "@contains /wp-admin/admin-ajax.php"\
		"id:66601745,\
		deny,chain,status:403,log,rev:1,severity:2,\
		phase:2,\
		tag:'Wordpress',\
		t:none,\
		t:lowercase,\
		t:normalizePathWin,\
		msg:'POL-2016-6896'"
SecRule ARGS:action "@streq update-plugin"\
		"chain,t:none,\
		t:lowercase,\
		t:trim"
SecRule ARGS:plugin "@rx dev[\\\/]+random"\
		"t:none,\
		t:lowercase,\
		t:urlDecodeUni"

# CVE: CVE-2015-4455
# CVSS: 7.5
# Publish: 2017-05-23T04:29:00
# Unrestricted file upload vulnerability in includes/upload.php in the Aviary Image Editor Add-on For Gravity Forms plugin 3.0 beta for WordPress allows remote attackers to execute arbitrary code by uploading a file with an executable extension, then accessing it via a direct request to the file in wp-content/uploads/gform_aviary.
SecRule REQUEST_FILENAME "@rx /wp-content/plugins/aviary-image-editor-add-on-for-gravity-forms/(.*?)\.php" \
	"id:66601746,chain,msg:'POL-2015-4455',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,rev:1,severity:2,tag:'WordPress'"
SecRule FILES "@rx \.(php|phtml|shtml|php3|php4|php5|php7|phps|htaccess)" \
	"t:none,t:lowercase,t:trim"

# CVE: CVE-2012-3577
# CVSS: 7.5
# Publish: 2012-06-17T03:41:00
# Unrestricted file upload vulnerability in doupload.php in the Nmedia Member Conversation plugin before 1.4 for WordPress allows remote attackers to execute arbitrary code by uploading a file with an executable extension, then accessing it via a direct request to the file in wp-content/uploads/user_uploads.
SecRule REQUEST_FILENAME "@contains /wp-content/plugins/wordpress-member-private-conversation/doupload.php" \
	"id:66601747,chain,msg:'POL-2012-3577',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,rev:1,severity:2,tag:'WordPress'"
SecRule FILES "@rx \.(php|phtml|shtml|php3|php4|php5|php7|phps|htaccess)" \
	"t:none,t:lowercase,t:trim"

# CVE: CVE-2015-4153
# CVSS: 5
# Publish: 2015-06-10T18:59:00
# Directory traversal vulnerability in the zM Ajax Login & Register plugin before 1.1.0 for WordPress allows remote attackers to include and execute arbitrary php files via a relative path in the template parameter in a load_template action to wp-admin/admin-ajax.php.
SecRule REQUEST_FILENAME "@contains /wp-admin/admin-ajax.php" \
	"id:66601748,chain,msg:'POL-2015-4153',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,rev:1,severity:2,tag:'WordPress'"
SecRule ARGS_POST:template "@rx [^a-zA-Z0-9-]" \
	"t:none,t:trim"

# CVE: CVE-2015-3440
# CVSS: 4.3
# Publish: 2015-08-03T14:59:00
# Cross-site scripting (XSS) vulnerability in wp-includes/wp-db.php in WordPress before 4.2.1 allows remote attackers to inject arbitrary web script or HTML via a long comment that is improperly stored because of limitations on the MySQL TEXT data type.
SecRule REQUEST_FILENAME "@contains wp-comments-post.php" \
	"id:66601749,chain,msg:'POL-2015-3440',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,rev:1,severity:2,tag:'WordPress'"
SecRule ARGS_POST:comment "@gt 10240" \
	"t:none,t:trim,t:lowercase,t:length"

# CVE: CVE-2014-8739
# CVSS: undefined
# Publish: 
# 
SecRule REQUEST_FILENAME "@contains /wp-content/plugins/sexy-contact-form/includes/fileupload/index.php" \
	"id:66601750,chain,msg:'POL-2014-8739',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,rev:1,severity:2,tag:'WordPress'"
SecRule FILES "@rx \.(php|phtml|php3|php4|php5|php7|phps|htaccess|shtml)" \
	"t:none,t:lowercase,t:trim"

# CVE: CVE-2015-4133
# CVSS: 7.5
# Publish: 2015-05-28T14:59:00
# Unrestricted file upload vulnerability in admin/scripts/FileUploader/php.php in the ReFlex Gallery plugin before 3.1.4 for WordPress allows remote attackers to execute arbitrary PHP code by uploading a file with a PHP extension, then accessing it via a direct request to the file in uploads/ directory. <a href="http://cwe.mitre.org/data/definitions/434.html">CWE-434: Unrestricted Upload of File with Dangerous Type</a>
SecRule REQUEST_FILENAME "@contains /wp-content/plugins/reflex-gallery/admin/scripts/fileuploader/php.php" \
	"id:66601751,chain,msg:'POL-2015-4133',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,rev:1,severity:2,tag:'WordPress'"
SecRule FILES "@rx \.(php|phtml|php3|php4|php5|php7|phps|htaccess|shtml)" \
	"t:none,t:lowercase,t:trim"

# CVE: CVE-2013-2010
# CVSS: undefined
# Publish: 
# 
SecRule REQUEST_FILENAME "@contains wp-comments-post.php" \
	"id:66601752,chain,msg:'POL-2013-2010',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'WordPress'"
SecRule ARGS_POST:comment "@rx <!--\s*(mclude|mfunc|dynamic-cached-content)" \
	"t:none,t:trim,t:lowercase"

# CVE: CVE-2015-2825
# CVSS: 7.5
# Publish: 2015-04-21T15:59:00
# Unrestricted file upload vulnerability in sam-ajax-admin.php in the Simple Ads Manager plugin before 2.5.96 for WordPress allows remote attackers to execute arbitrary code by uploading a file with an executable extension, then accessing it via a direct request to the file in the directory specified by the path parameter. <a href="http://cwe.mitre.org/data/definitions/434.html">CWE-434: Unrestricted Upload of File with Dangerous Type</a>
SecRule REQUEST_FILENAME "@contains /wp-content/plugins/simple-ads-manager/sam-ajax-admin.php"\
		"id:66601753,\
		deny,chain,status:403,log,rev:1,severity:2,\
		phase:2,\
		tag:'Wordpress',\
		t:none,\
		t:lowercase,\
		t:normalizePathWin,\
		msg:'POL-2015-2825'"

SecRule ARGS:action "@streq upload_ad_image"\
		"chain,t:none,\
		t:lowercase,\
		t:trim"

SecRule MULTIPART_FILENAME "@rx \.(php|phtml|php3|php4|php5|php7|phps|htaccess|shtml|rhtml)"\
		"t:none,\
		t:lowercase"

# CVE: CVE-2014-7969
# CVSS: undefined
# Publish: 
# 
SecRule REQUEST_FILENAME "@contains wp-content/plugins/sexy-contact-form/includes/fileupload/index.php" \
        "id:66601754,\
        log,\
        status:403,\
        rev:1,\
        severity:2,\
        phase:2,\
        deny,\
        chain,\
        tag:'wordpress',\
        tag:'plugin',\
        t:none,\
        t:trim,\
        t:lowercase,\
        t:urlDecodeUni,\
        t:normalizePathWin,\
        msg:'POL-2014-7969'"
SecRule MULTIPART_FILENAME "@rx \.(php.?|htaccess|shtml|phtml|html)" \
        "t:none,\
        t:lowercase,\
        t:urlDecodeUni"

# CVE: CVE-2014-5460
# CVSS: 6.5
# Publish: 2014-09-11T15:55:00
# Unrestricted file upload vulnerability in the Tribulant Slideshow Gallery plugin before 1.4.7 for WordPress allows remote authenticated users to execute arbitrary code by uploading a PHP file, then accessing it via a direct request to the file in wp-content/uploads/slideshow-gallery/.
SecRule REQUEST_FILENAME "@contains /wp-admin/admin.php" \
        "id:66601755,\
        log,\
        status:403,\
        rev:1,\
        severity:2,\
        phase:2,\
        deny,\
        chain,\
        tag:'wordpress',\
        tag:'plugin',\
        t:none,\
        t:lowercase,\
        t:urlDecodeUni,\
        t:normalizePathWin,\
        msg:'POL-2014-5460'"

SecRule ARGS:page "@contains slideshow-slides" \
        "t:none,\
        t:lowercase,\
        t:urlDecodeUni,\
        chain"

SecRule MULTIPART_FILENAME "!@rx \.(jpg|png|gif|jpeg|jif|jfif|svg)$" \
        "t:none,\
        t:lowercase,\
        t:urlDecodeUni"

# CVE: CVE-2014-5465
# CVSS: 5
# Publish: 2014-09-03T19:55:00
# Directory traversal vulnerability in force-download.php in the Download Shortcode plugin 0.2.3 and earlier for WordPress allows remote attackers to read arbitrary files via a .. (dot dot) in the file parameter.
SecRule REQUEST_FILENAME "@contains /wp-content/force-download.php" \
        "id:66601756,\
        log,\
        status:403,\
        rev:1,\
        severity:2,\
        phase:2,\
        deny,\
        chain,\
        tag:'wordpress',\
        tag:'plugin',\
        t:none,\
        t:lowercase,\
        t:urlDecodeUni,\
        t:normalizePathWin,\
        msg:'POL-2014-5465'"

SecRule ARGS:file "!@rx \.(jpg|png|jif|jfif|svg|pdf|mp4|mp3|gif|jpeg)$" \
        "t:none,\
        t:lowercase,\
        t:urlDecodeUni"

# CVE: CVE-2014-2674
# CVSS: 5
# Publish: 2018-03-19T21:29:00
# Directory traversal vulnerability in the Ajax Pagination (twitter Style) plugin 1.1 for WordPress allows remote attackers to read arbitrary files via a .. (dot dot) in the loop parameter in an ajax_navigation action to wp-admin/admin-ajax.php.
SecRule REQUEST_FILENAME "@contains /wp-admin/admin-ajax.php" \
        "id:66601757,\
        log,\
        status:403,\
        rev:1,\
        severity:2,\
        phase:2,\
        deny,\
        chain,\
        tag:'wordpress',\
        tag:'plugin',\
        t:none,\
        t:lowercase,\
        t:urlDecodeUni,\
        t:normalizePathWin,\
        msg:'POL-2014-2674'"

SecRule ARGS:action "@eq ajax_navigation" \
        "chain,\
        t:none,\
        t:lowercase,\
        t:urlDecodeUni"

SecRule ARGS:loop "@contains .." \
        "t:none,\
        t:lowercase,\
        t:urlDecodeUni"

# CVE: CVE-2012-6649
# CVSS: undefined
# Publish: 
# 
SecRule REQUEST_FILENAME "@contains /wp-content/plugins/wp-gpx-maps/wp-gpx-maps_admin_tracks.php" \
        "id:66601758,\
        log,\
        status:403,\
        rev:1,\
        severity:2,\
        phase:2,\
        deny,\
        chain,\
        tag:'wordpress',\
        tag:'plugin',\
        t:none,\
        t:lowercase,\
        t:urlDecodeUni,\
        t:normalizePathWin,\
        msg:'POL-2012-6649'"
SecRule MULTIPART_FILENAME "@rx \.(php.?|htaccess|shtml|phtml|html)" \
        "t:none,\
        t:lowercase,\
        t:urlDecodeUni"

# CVE: CVE-2012-3578
# CVSS: 6.8
# Publish: 2012-06-17T03:41:00
# Unrestricted file upload vulnerability in html/Upload.php in the FCChat Widget plugin 2.2.13.1 and earlier for WordPress allows remote attackers to execute arbitrary code by uploading a file with a file with an executable extension followed by a safe extension, then accessing it via a direct request to the file in html/images.
SecRule REQUEST_FILENAME "@contains wp-content/plugins/fcchat/html/upload.php?id=1" \
        "id:66601759,\
        log,\
        status:403,\
        rev:1,\
        severity:2,\
        phase:2,\
        deny,\
        chain,\
        tag:'wordpress',\
        tag:'plugin',\
        t:none,\
        t:lowercase,\
        t:urlDecodeUni,\
        t:normalizePathWin,\
        msg:'POL-2012-3578'"
SecRule MULTIPART_FILENAME "@rx \.(php.?|htaccess|shtml|phtml|html)" \
        "t:none,\
        t:lowercase,\
        t:urlDecodeUni"

# CVE: CVE-2012-3814
# CVSS: 7.5
# Publish: 2012-06-27T21:55:00
# Unrestricted file upload vulnerability in font-upload.php in the Font Uploader plugin 1.2.4 for WordPress allows remote attackers to execute arbitrary PHP code by uploading a PHP file with a .php.ttf extension, then accessing it via a direct request to the file in font-uploader/fonts.
SecRule REQUEST_FILENAME "@contains wp-content/plugins/font-uploader/font-upload.php" \
        "id:66601760,\
        log,\
        status:403,\
        rev:1,\
        severity:2,\
        phase:2,\
        deny,\
        chain,\
        tag:'wordpress',\
        tag:'plugin',\
        t:none,\
        t:lowercase,\
        t:urlDecodeUni,\
        t:normalizePathWin,\
        msg:'POL-2012-3814'"
SecRule MULTIPART_FILENAME "@rx \.(php.?|htaccess|shtml|phtml|html)" \
        "t:none,\
        t:lowercase,\
        t:urlDecodeUni"

# CVE: CVE-2014-9735
# CVSS: 7.5
# Publish: 2015-06-30T14:59:00
# The ThemePunch Slider Revolution (revslider) plugin before 3.0.96 for WordPress and Showbiz Pro plugin 1.7.1 and earlier for Wordpress does not properly restrict access to administrator AJAX functionality, which allows remote attackers to (1) upload and execute arbitrary files via an update_plugin action; (2) delete arbitrary sliders via a delete_slider action; and (3) create, (4) update, (5) import, or (6) export arbitrary sliders via unspecified vectors.
SecRule REQUEST_URI "@contains /wp-admin/admin-ajax.php" \
	"id:66601761,chain,msg:'POL-2014-9735',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,rev:1,severity:2,tag:'WordPress'"
SecRule  ARGS_POST:client_action "@contains update_plugin_lang" \
	"t:none,t:trim,t:urlDecode,chain"
SecRule FILES "@rx \.(php|phtml|php3|php4|php5|php7|phps|htaccess|shtml)" \
	"t:none,t:trim,t:lowercase"

# CVE: CVE-2014-9034
# CVSS: 5
# Publish: 2014-11-25T23:59:00
# wp-includes/class-phpass.php in WordPress before 3.7.5, 3.8.x before 3.8.5, 3.9.x before 3.9.3, and 4.x before 4.0.1 allows remote attackers to cause a denial of service (CPU consumption) via a long password that is improperly handled during hashing, a similar issue to CVE-2014-9016.
SecRule REQUEST_FILENAME "@contains wp-login.php" \
	"id:66601762,chain,msg:'POL-2014-9034',phase:2,deny,status:403,log,t:none,t:trim,t:lowercase,t:normalizePathWin,rev:1,severity:2,tag:'WordPress'"
SecRule ARGS_POST:pwd "@gt 100" \
	"t:none,t:trim,t:lowercase,t:length"

# CVE: CVE-2014-9308
# CVSS: 6.5
# Publish: 2015-01-15T15:59:00
# Unrestricted file upload vulnerability in inc/amfphp/administration/banneruploaderscript.php in the WP EasyCart (aka WordPress Shopping Cart) plugin before 3.0.9 allows remote authenticated users to execute arbitrary code by uploading a file with an executable extension, then accessing it via a direct request to the file in products/banners/. <a href="http://cwe.mitre.org/data/definitions/434.html">CWE-434: Unrestricted Upload of File with Dangerous Type</a>
SecRule REQUEST_FILENAME "@contains wp-easycart/inc/amfphp/administration/banneruploaderscript.php"\
		"id:66601763,\
		deny,chain,status:403,log,rev:1,severity:2,\
		phase:2,\
		tag:'Wordpress',\
		t:none,\
		t:lowercase,\
		t:normalizePathWin,\
		msg:'POL-2014-9308'"
SecRule ARGS_NAMES "datemd5"\
		"chain,t:none,\
		t:lowercase"
SecRule MULTIPART_FILENAME "@rx \.(php.?|htaccess|shtml|phtml|html)"\
		"t:none,\
		t:lowercase"

# CVE: CVE-2014-9473
# CVSS: 7.5
# Publish: 2015-01-08T00:59:00
# Unrestricted file upload vulnerability in lib_nonajax.php in the CformsII plugin 14.7 and earlier for WordPress allows remote attackers to execute arbitrary code by uploading a file with an executable extension via the cf_uploadfile2[] parameter, then accessing the file via a direct request to the file in the default upload directory. <a href="http://cwe.mitre.org/data/definitions/434.html">CWE-434: Unrestricted Upload of File with Dangerous Type</a>
SecRule ARGS_NAMES "@rx (cf_working|cf_failure|cf_codeerr|cf_customerr|cf_popup)"\
		"id:66601764,\
		deny,chain,status:403,log,rev:1,severity:2,\
		phase:2,\
		tag:'Wordpress',\
		t:none,\
		t:lowercase,\
		msg:'POL-2014-9473'"
SecRule FILES_NAMES "@contains cf_uploadfile"\
		"chain,\
		t:none,\
		t:lowercase"
SecRule MULTIPART_FILENAME "@rx \.(php.?|htaccess|shtml|phtml|html)"\
		"t:none,\
		t:lowercase"

# CVE: CVE-2015-1376
# CVSS: 4
# Publish: 2015-01-28T11:59:00
# pixabay-images.php in the Pixabay Images plugin before 2.4 for WordPress does not validate hostnames, which allows remote authenticated users to write to arbitrary files via an upload URL with a host other than pixabay.com.
SecRule ARGS_NAMES "@rx (pixabay_upload|image_user|q)"\
		"id:66601765,\
		deny,chain,status:403,log,rev:1,severity:2,\
		phase:2,\
		tag:'Wordpress',\
		t:none,\
		t:lowercase,\
		msg:'POL-2015-1376'"
SecRule ARGS:image_url "!@rx ^https?://pixabay\.com/.*\.(jpg|png|gif)$"\
		"t:none,\
		t:lowercase"

# CVE: CVE-2015-1172
# CVSS: 7.5
# Publish: 2015-02-11T19:59:00
# Unrestricted file upload vulnerability in admin/upload-file.php in the Holding Pattern theme (aka holding_pattern) 0.6 and earlier for WordPress allows remote attackers to execute arbitrary PHP code by uploading a file with a PHP extension, then accessing it via a direct request to the file in an unspecified directory. <a href="http://cwe.mitre.org/data/definitions/434.html">CWE-434: Unrestricted Upload of File with Dangerous Type</a>
SecRule REQUEST_FILENAME "@contains /admin/upload-file.php"\
		"id:66601766,\
		deny,chain,status:403,log,rev:1,severity:2,\
		phase:2,\
		tag:'Wordpress',\
		t:none,\
		t:lowercase,\
		t:normalizePathWin,\
		msg:'POL-2015-1172'"
SecRule ARGS_NAMES "upload_path"\
		"chain,t:none,\
		t:lowercase"
SecRule REQUEST_FILENAME "@contains holding"\
		"chain,t:none,\
		t:lowercase"
SecRule MULTIPART_FILENAME "@rx \.(php.?|htaccess|shtml|phtml|html)"\
		"t:none,\
		t:lowercase"

# CVE: CVE-2017-16510
# CVSS: 7.5
# Publish: 2017-11-02T16:29:00
# WordPress before 4.8.3 is affected by an issue where $wpdb->prepare() can create unexpected and unsafe queries leading to potential SQL injection (SQLi) in plugins and themes, as demonstrated by a "double prepare" approach, a different vulnerability than CVE-2017-14723.
SecRule ARGS "@rx (%[1-9]\$)|(%s)" "id:66601767,msg:'POL-2017-16510',phase:2,deny,status:403,log,t:none,t:trim,rev:1,severity:2,tag:'WordPress'"

# CVE: CVE-2017-17672
# CVSS: 7.5
# Publish: 2017-12-14T00:29:00
# In vBulletin through 5.3.x, there is an unauthenticated deserialization vulnerability that leads to arbitrary file deletion and, under certain circumstances, code execution, because of unsafe usage of PHP's unserialize() in vB_Library_Template's cacheTemplates() function, which is a publicly exposed API. This is exploited with the templateidlist parameter to ajax/api/template/cacheTemplates.
SecRule REQUEST_FILENAME "@rx (?i:(\/ajax\/api\/template\/cacheTemplates))" \
	"id:66601768,chain,msg:'POL-2017-17672',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePathWin,t:lowercase,rev:1,severity:2,tag:'vBulletin'"
SecRule ARGS:templateidlist "@contains O:" \
	"t:none,t:trim,t:lowercase"

# CVE: CVE-2016-2212
# CVSS: 5
# Publish: 2016-04-15T14:59:00
# The getOrderByStatusUrlKey function in the Mage_Rss_Helper_Order class in app/code/core/Mage/Rss/Helper/Order.php in Magento Enterprise Edition before 1.14.2.3 and Magento Community Edition before 1.9.2.3 allows remote attackers to obtain sensitive order information via the order_id in a JSON object in the data parameter in an RSS feed request to index.php/rss/order/status.
SecRule REQUEST_FILENAME "@contains rss/order/status" \
	"id:66601769,chain,msg:'POL-2016-2212',phase:2,deny,status:403,log,t:none,t:urlDecodeUni,t:normalizePathWin,t:lowercase,rev:3,severity:2,tag:'Magento'"
SecRule ARGS:data "@rx (?:increment|customer)_id:true" \
	"t:none,t:urlDecodeUni,t:base64DecodeExt,t:cmdLine,t:removeWhitespace"

# CVE: CVE-2016-4010
# CVSS: 7.5
# Publish: 2017-01-23T21:59:00
# Magento CE and EE before 2.0.6 allows remote attackers to conduct PHP objection injection attacks and execute arbitrary PHP code via crafted serialized shopping cart data.
SecRule REQUEST_URI "@contains /rest" \
	"id:66601770,phase:1,ctl:forceRequestBodyVariable=On,t:none,tag:'Magento'"

SecRule REQUEST_URI "@contains /rest" \
	"id:66601771,chain,msg:'POL-2016-4010',phase:2,deny,status:403,log,t:none,t:lowercase,rev:2,severity:2,tag:'Magento'"
SecRule REQUEST_BODY "@contains additional_data" \
	"chain,t:none,t:urlDecodeUni,t:lowercase"
SecRule REQUEST_BODY "@rx O:\+?\d+:." \
	"t:none,t:urlDecodeUni"

# CVE: CVE-2015-5161
# CVSS: 6.8
# Publish: 2015-08-25T17:59:00
# The Zend_Xml_Security::scan in ZendXml before 1.0.1 and Zend Framework before 1.12.14, 2.x before 2.4.6, and 2.5.x before 2.5.2, when running under PHP-FPM in a threaded environment, allows remote attackers to bypass security checks and conduct XML external entity (XXE) and XML entity expansion (XEE) attacks via multibyte encoded characters. <a href="http://cwe.mitre.org/data/definitions/611.html">CWE-611: Improper Restriction of XML External Entity Reference ('XXE')</a>
SecRule REQUEST_FILENAME  "@contains /index.php/api/soap/index" \
        "id:66601772,\
        msg:'POL-2015-5161',\
        phase:2,\
        deny,\
        status:403,\
        log,\
        chain,\
        t:normalizePathWin,\
        t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'Magento'"

SecRule REQUEST_BODY  "@rx entity.*system.*" \
        "t:none,t:trim,t:lowercase"

# CVE: CVE-2015-1397
# CVSS: 6.5
# Publish: 2015-04-29T22:59:00
# SQL injection vulnerability in the getCsvFile function in the Mage_Adminhtml_Block_Widget_Grid class in Magento Community Edition (CE) 1.9.1.0 and Enterprise Edition (EE) 1.14.1.0 allows remote administrators to execute arbitrary SQL commands via the popularity[field_expr] parameter when the popularity[from] or popularity[to] parameter is set.
SecRule REQUEST_FILENAME "@contains /admin/cms_wysiwyg/directive/" \
	"id:66601773,\
	msg:'POL-2015-1397',\
	deny,\
	chain,\
	phase:2,\
	status:403,\
	log,\
	t:normalizePathWin,\
	t:none,t:lowercase,t:urlDecodeUni,\
	rev:1,severity:2,tag:'Magento'"

SecRule ARGS:filter "@rx [^a-z0-9_\.=&\[\]]" "t:none,t:lowercase,t:Base64Decode"

# CVE: CVE-2015-2068
# CVSS: 4.3
# Publish: 2015-02-24T17:59:00
# Multiple cross-site scripting (XSS) vulnerabilities in the MAGMI (aka Magento Mass Importer) plugin for Magento Server allow remote attackers to inject arbitrary web script or HTML via the (1) profile parameter to web/magmi.php or (2) QUERY_STRING to web/magmi_import_run.php.
SecRule REQUEST_FILENAME "@contains /magmi/web/magmi_import_run.php" \
	"id:66601774,\
	msg:'POL-2015-2068',\
	phase:1,\
	deny,\
	status:403,\
	log,\
	chain,\
	t:none,\
	t:trim,t:lowercase,\
	t:normalizePathWin,\
	rev:1,severity:2,tag:'Magento'"

SecRule ARGS_NAMES "@rx [^a-z0-9_]" "t:none,t:trim,t:lowercase"


SecRule REQUEST_FILENAME "@contains /magmi/web/magmi_import_run.php" \
        "id:66601775,\
        msg:'POL-2015-2068',\
        phase:1,\
        deny,\
        status:403,\
        log,\
        chain,\
        t:none,\
        t:trim,t:lowercase,\
        t:normalizePathWin,\
        rev:1,severity:2,tag:'Magento'"

SecRule ARGS "@rx [^a-z0-9_]" "t:none,t:trim,t:lowercase"


SecRule REQUEST_FILENAME "@contains /magmi/web/magmi.php" \
        "id:66601776,\
        msg:'POL-2015-2068',\
        phase:1,\
        deny,\
        status:403,\
        log,\
        chain,\
        t:none,\
        t:trim,t:lowercase,\
        t:normalizePathWin,\
        rev:1,severity:2,tag:'Magento'"

SecRule ARGS:profile "@rx [^a-z0-9_]" "t:none,t:trim,t:lowercase"

SecRule REQUEST_FILENAME "@contains /magmi/web/ajax_pluginconf.php" \
        "id:66601777,\
        msg:'POL-2015-2068',\
        phase:1,\
        deny,\
        status:403,\
        log,\
        chain,\
        t:none,\
        t:trim,t:lowercase,\
        t:normalizePathWin,\
        rev:1,severity:2,tag:'Magento'"

SecRule ARGS:file "@contains .." "t:none,t:lowercase"

# CVE: CVE-2014-8770
# CVSS: 9
# Publish: 2014-11-13T21:32:00
# Unrestricted file upload vulnerability in magmi/web/magmi.php in the MAGMI (aka Magento Mass Importer) plugin 0.7.17a and earlier for Magento Community Edition (CE) allows remote authenticated users to execute arbitrary code by uploading a ZIP file that contains a PHP file, then accessing the PHP file via a direct request to it in magmi/plugins/.
SecRule REQUEST_FILENAME "@contains /magmi/web/plugin_upload.php" \
	"id:66601778,\
	msg:'POL-2014-8770',\
	phase:1,\
	deny,\
	status:403,\
	log,\
	t:none,t:trim,t:lowercase,t:normalizePathWin,rev:1,severity:2,tag:'Magento'"

# CVE: CVE-2016-4010
# CVSS: 7.5
# Publish: 2017-01-23T21:59:00
# Magento CE and EE before 2.0.6 allows remote attackers to conduct PHP objection injection attacks and execute arbitrary PHP code via crafted serialized shopping cart data.
SecRule REQUEST_FILENAME "@rx \/rest\/default\/v1\/(guest-carts|carts)\/(mine|[a-f0-9]{32})\/(set-payment-information|payment-information)" \
        "id:66601779,\
        msg:'POL-2016-4010',\
        phase:2,\
        deny,\
        status:403,\
        log,\
        chain,\
        t:normalizePathWin,\
        t:none,t:trim,t:lowercase,rev:1,severity:2,tag:'Magento'"
        
SecRule ARGS:paymentMethod.additional_data.additional_information "@rx ^o:.*:.*:.*{" \
        "t:none,t:trim,t:lowercase"

# CVE: CVE-2017-1000486
# CVSS: 7.5
# Publish: 2018-01-03T20:29:00
# Primetek Primefaces 5.x is vulnerable to a weak encryption flaw resulting in remote code execution
SecRule REQUEST_FILENAME "@contains  javax.faces.resource/dynamiccontent.properties.xhtml" \
	"id:66601780,chain,msg:'POL-2017-1000486',phase:2,deny,status:403,log,t:none,t:trim,t:urlDecodeUni,t:normalizePathWin,rev:1,severity:2,tag:'PrimeFaces'"
SecRule ARGS:pfdrt "@streq sc" "chain, t:none,t:lowercase"
SecRule ARGS:pfdrid "@gt 20" "t:none,t:trim,t:length"

