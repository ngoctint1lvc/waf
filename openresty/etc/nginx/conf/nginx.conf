load_module modules/ngx_http_modsecurity_module.so;

user www-data;
worker_processes 1;

working_directory /usr/local/openresty/nginx;

error_log /var/log/supervisor/supervisord.log notice;

# allow env variables
env MONGODB_SERVER;
env MONGODB_USER;
env MONGODB_PASSWORD;
env DEBUG;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    access_log /var/log/supervisor/supervisord.log;
    sendfile on;
    keepalive_timeout 65;
    autoindex_localtime on;
    resolver 1.1.1.1 ipv6=off;

    modsecurity on;
    
    modsecurity_rules_file /etc/modsecurity/modsecurity.conf;

    init_by_lua_block {
        package.path = package.path .. ";/usr/local/openresty/nginx/lua-nginx/?.lua"
        debug = require("common").debug;
    }

    server {
        listen 80;
        listen 443 ssl;
        
        server_name localhost;
        ssl_certificate /usr/local/openresty/nginx/ssl/localhost.pem;
        ssl_certificate_key /usr/local/openresty/nginx/ssl/localhost-key.pem;

        ssl_certificate_by_lua_block {
            debug("ssl", "ssl certificate hook by lua")
            require("ssl_module").init()
        }

        location / {
            resolver 127.0.0.11 ipv6=off;

            set $target '';

            rewrite_by_lua_block {
                local host = ngx.var.http_host

                if host == "dvwa.test" then
                    ngx.var.target = "dvwa-test"
                elseif host == "nginx.test" then
                    ngx.var.target = "nginx-test"
                else
                    ngx.var.target = host
                end
            }

            header_filter_by_lua_block {
                debug(ngx.resp.get_headers())
                ngx.header["Server"] = ngx.resp.get_headers()["Server"]
            }

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_http_version 1.1;

            # fix bug for web socket proxying
            # Reference: http://nginx.org/en/docs/http/websocket.html
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_pass $scheme://$target$uri$is_args$args;
            
        }
    }
}
